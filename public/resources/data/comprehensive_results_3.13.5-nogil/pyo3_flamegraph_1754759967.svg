<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1382" onload="init(evt)" viewBox="0 0 1200 1382" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1382.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1365" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1365" > </text>
<g id="frames">
<g >
<title>noargs (8,996,747 samples, 0.07%)</title><rect x="44.7" y="1269" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="47.67" y="1279.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,535,213,986 samples, 69.33%)</title><rect x="316.8" y="1269" width="818.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="319.78" y="1279.5" >[libc.so.6]</text>
</g>
<g >
<title>object_vacall (4,477,879 samples, 0.03%)</title><rect x="26.2" y="1109" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="29.20" y="1119.5" ></text>
</g>
<g >
<title>import_name (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="725" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1122.93" y="735.5" ></text>
</g>
<g >
<title>method_vectorcall (44,799,892 samples, 0.33%)</title><rect x="1116.1" y="789" width="3.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1119.08" y="799.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (17,769,913 samples, 0.13%)</title><rect x="32.7" y="1109" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="35.74" y="1119.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (931,111,570 samples, 6.77%)</title><rect x="703.2" y="1061" width="79.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="706.17" y="1071.5" >PyObject_..</text>
</g>
<g >
<title>_Py_IsOwnedByCurrentThread (4,498,293 samples, 0.03%)</title><rect x="1057.0" y="853" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1060.04" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,450,819 samples, 0.03%)</title><rect x="25.4" y="981" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="28.44" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1013" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="28.82" y="1023.5" ></text>
</g>
<g >
<title>object_vacall (8,931,350 samples, 0.06%)</title><rect x="31.6" y="1141" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="34.59" y="1151.5" ></text>
</g>
<g >
<title>r_object (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="533" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1161.82" y="543.5" ></text>
</g>
<g >
<title>type_new_alloc (4,450,819 samples, 0.03%)</title><rect x="25.4" y="405" width="0.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="28.44" y="415.5" ></text>
</g>
<g >
<title>object_vacall (13,304,576 samples, 0.10%)</title><rect x="26.6" y="1061" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="29.59" y="1071.5" ></text>
</g>
<g >
<title>deduce_unreachable_heap (4,508,963 samples, 0.03%)</title><rect x="319.6" y="1173" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="322.58" y="1183.5" ></text>
</g>
<g >
<title>vectorcall_method (4,479,687 samples, 0.03%)</title><rect x="1119.5" y="613" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1122.54" y="623.5" ></text>
</g>
<g >
<title>r_object (4,474,879 samples, 0.03%)</title><rect x="32.4" y="613" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="35.35" y="623.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,481,255 samples, 0.03%)</title><rect x="25.8" y="661" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="28.82" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (8,909,404 samples, 0.06%)</title><rect x="162.1" y="821" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="165.12" y="831.5" ></text>
</g>
<g >
<title>r_object (4,477,879 samples, 0.03%)</title><rect x="26.2" y="549" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="29.20" y="559.5" ></text>
</g>
<g >
<title>builtin___import__ (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="613" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1122.93" y="623.5" ></text>
</g>
<g >
<title>builtin_exec (4,450,819 samples, 0.03%)</title><rect x="25.4" y="629" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="28.44" y="639.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="741" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1162.19" y="751.5" ></text>
</g>
<g >
<title>_PyUnicode_InternImmortal (4,492,904 samples, 0.03%)</title><rect x="43.9" y="469" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="46.91" y="479.5" ></text>
</g>
<g >
<title>_sre_SRE_Pattern_match (8,976,892 samples, 0.07%)</title><rect x="1116.1" y="693" width="0.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1119.08" y="703.5" ></text>
</g>
<g >
<title>_Py_atomic_store_uint32_relaxed (26,988,137 samples, 0.20%)</title><rect x="1071.7" y="965" width="2.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1074.70" y="975.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1301" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="204.81" y="1311.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1077" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1161.44" y="1087.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="437" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1122.93" y="447.5" ></text>
</g>
<g >
<title>_PyType_LookupRef (22,490,788 samples, 0.16%)</title><rect x="216.9" y="1285" width="1.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="219.86" y="1295.5" ></text>
</g>
<g >
<title>init_importlib (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="1125" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1136.39" y="1135.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,455,522 samples, 0.03%)</title><rect x="163.6" y="469" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="166.62" y="479.5" ></text>
</g>
<g >
<title>r_object (4,485,429 samples, 0.03%)</title><rect x="161.7" y="437" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="164.73" y="447.5" ></text>
</g>
<g >
<title>import_name (4,478,886 samples, 0.03%)</title><rect x="201.8" y="869" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="204.81" y="879.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,063,892 samples, 0.03%)</title><rect x="49.1" y="325" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="52.09" y="335.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (9,476,686,296 samples, 68.90%)</title><rect x="320.4" y="1157" width="813.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="323.35" y="1167.5" >_PyRun_SimpleFileObject</text>
</g>
<g >
<title>builtin_exec_impl (4,440,989 samples, 0.03%)</title><rect x="164.4" y="1141" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="167.39" y="1151.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="997" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1162.19" y="1007.5" ></text>
</g>
<g >
<title>import_find_and_load (8,909,404 samples, 0.06%)</title><rect x="162.1" y="837" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="165.12" y="847.5" ></text>
</g>
<g >
<title>mi_page_queue_find_free_ex (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="741" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1136.75" y="751.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (13,072,439 samples, 0.10%)</title><rect x="162.9" y="741" width="1.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="165.88" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,474,879 samples, 0.03%)</title><rect x="32.4" y="933" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.35" y="943.5" ></text>
</g>
<g >
<title>_PyRuntime (26,984,361 samples, 0.20%)</title><rect x="92.7" y="1285" width="2.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="95.66" y="1295.5" ></text>
</g>
<g >
<title>import_find_and_load (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="789" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1137.24" y="799.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="885" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1161.44" y="895.5" ></text>
</g>
<g >
<title>type_new (4,063,892 samples, 0.03%)</title><rect x="49.1" y="245" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="52.09" y="255.5" ></text>
</g>
<g >
<title>builtin_exec_impl (8,931,350 samples, 0.06%)</title><rect x="31.6" y="677" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="34.59" y="687.5" ></text>
</g>
<g >
<title>object_vacall (4,474,879 samples, 0.03%)</title><rect x="32.4" y="773" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.35" y="783.5" ></text>
</g>
<g >
<title>benchlib_pyo3::__pyfunction_py_return_int (17,991,302 samples, 0.13%)</title><rect x="312.9" y="1237" width="1.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="315.92" y="1247.5" ></text>
</g>
<g >
<title>compare_unicode_unicode_threadsafe (269,886,401 samples, 1.96%)</title><rect x="535.3" y="981" width="23.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="538.30" y="991.5" >c..</text>
</g>
<g >
<title>dict_traverse (4,472,337 samples, 0.03%)</title><rect x="164.0" y="437" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="167.01" y="447.5" ></text>
</g>
<g >
<title>find_name_in_mro (4,063,892 samples, 0.03%)</title><rect x="49.1" y="181" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="52.09" y="191.5" ></text>
</g>
<g >
<title>PyDict_SetDefaultRef (4,485,429 samples, 0.03%)</title><rect x="161.7" y="373" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="164.73" y="383.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1285" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1161.44" y="1295.5" ></text>
</g>
<g >
<title>builtin___build_class__ (4,359,608 samples, 0.03%)</title><rect x="27.0" y="501" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="29.97" y="511.5" ></text>
</g>
<g >
<title>import_name (8,931,350 samples, 0.06%)</title><rect x="31.6" y="629" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="34.59" y="639.5" ></text>
</g>
<g >
<title>security_inode_permission (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="469" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1135.27" y="479.5" ></text>
</g>
<g >
<title>PyType_HasFeature (8,996,496 samples, 0.07%)</title><rect x="1019.2" y="1029" width="0.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1022.22" y="1039.5" ></text>
</g>
<g >
<title>builtin___import__ (4,450,819 samples, 0.03%)</title><rect x="25.4" y="773" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="28.44" y="783.5" ></text>
</g>
<g >
<title>gc_visit_heaps_lock_held (4,448,400 samples, 0.03%)</title><rect x="33.5" y="581" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="36.50" y="591.5" ></text>
</g>
<g >
<title>_mi_heap_malloc_zero_ex (4,440,989 samples, 0.03%)</title><rect x="164.4" y="149" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="167.39" y="159.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="581" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1122.93" y="591.5" ></text>
</g>
<g >
<title>may_open (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="485" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1135.27" y="495.5" ></text>
</g>
<g >
<title>_PyObject_Call (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="645" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.92" y="655.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,433,858 samples, 0.03%)</title><rect x="162.1" y="469" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="165.12" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="677" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1161.44" y="687.5" ></text>
</g>
<g >
<title>_PyUnicode_InitEncodings (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="1157" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1137.24" y="1167.5" ></text>
</g>
<g >
<title>_Py_TryIncrefCompare (4,498,313 samples, 0.03%)</title><rect x="1042.8" y="917" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1045.76" y="927.5" ></text>
</g>
<g >
<title>_Py_atomic_load_ptr (4,483,564 samples, 0.03%)</title><rect x="1118.0" y="213" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1121.00" y="223.5" ></text>
</g>
<g >
<title>_PySeqLock_EndRead (22,490,671 samples, 0.16%)</title><rect x="241.2" y="1301" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="244.15" y="1311.5" ></text>
</g>
<g >
<title>type_traverse (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="453" width="0.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1161.44" y="463.5" ></text>
</g>
<g >
<title>exc_page_fault (4,359,608 samples, 0.03%)</title><rect x="27.0" y="261" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="29.97" y="271.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="741" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1161.82" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,463,125 samples, 0.03%)</title><rect x="33.9" y="597" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="36.88" y="607.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,377,767 samples, 0.03%)</title><rect x="163.2" y="597" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="166.25" y="607.5" ></text>
</g>
<g >
<title>_Py_HandlePending (4,470,482 samples, 0.03%)</title><rect x="26.6" y="629" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="29.59" y="639.5" ></text>
</g>
<g >
<title>_PyObject_CallFunctionVa (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="357" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1142.92" y="367.5" ></text>
</g>
<g >
<title>_Py_hashtable_foreach (4,865,650 samples, 0.04%)</title><rect x="318.0" y="1157" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="320.96" y="1167.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="773" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1162.19" y="783.5" ></text>
</g>
<g >
<title>type_call (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1269" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="164.73" y="1279.5" ></text>
</g>
<g >
<title>_PyDict_GetItemRef_KnownHash (4,475,546 samples, 0.03%)</title><rect x="162.5" y="261" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="165.50" y="271.5" ></text>
</g>
<g >
<title>builtin_exec_impl (17,769,913 samples, 0.13%)</title><rect x="32.7" y="1013" width="1.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="35.74" y="1023.5" ></text>
</g>
<g >
<title>_Py_IsOwnedByCurrentThread (8,995,757 samples, 0.07%)</title><rect x="989.1" y="997" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="992.12" y="1007.5" ></text>
</g>
<g >
<title>PyObject_Malloc (4,440,989 samples, 0.03%)</title><rect x="164.4" y="213" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="167.39" y="223.5" ></text>
</g>
<g >
<title>_PyObject_CallFunctionVa (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1173" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1162.19" y="1183.5" ></text>
</g>
<g >
<title>insert_to_emptydict (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="917" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1137.01" y="927.5" ></text>
</g>
<g >
<title>read_object (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="469" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1162.19" y="479.5" ></text>
</g>
<g >
<title>object_vacall (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1013" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.44" y="1023.5" ></text>
</g>
<g >
<title>import_find_and_load (4,443,766 samples, 0.03%)</title><rect x="44.3" y="549" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="47.29" y="559.5" ></text>
</g>
<g >
<title>time_time (44,973,045 samples, 0.33%)</title><rect x="231.9" y="1285" width="3.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="234.89" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="613" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1135.27" y="623.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1237" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="164.73" y="1247.5" ></text>
</g>
<g >
<title>do_lookup (53,979,209 samples, 0.39%)</title><rect x="756.4" y="933" width="4.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="759.42" y="943.5" ></text>
</g>
<g >
<title>ksys_read (4,453,660 samples, 0.03%)</title><rect x="32.0" y="261" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="34.97" y="271.5" ></text>
</g>
<g >
<title>Py_DECREF (161,934,759 samples, 1.18%)</title><rect x="622.9" y="981" width="13.9" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="625.90" y="991.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,498,486 samples, 0.03%)</title><rect x="672.7" y="1013" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="675.68" y="1023.5" ></text>
</g>
<g >
<title>type_new_impl (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="581" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1142.92" y="591.5" ></text>
</g>
<g >
<title>import_find_and_load (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="981" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1137.24" y="991.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,936,670 samples, 0.06%)</title><rect x="43.9" y="693" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="46.91" y="703.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1109" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="28.82" y="1119.5" ></text>
</g>
<g >
<title>import_name (4,463,125 samples, 0.03%)</title><rect x="33.9" y="581" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="36.88" y="591.5" ></text>
</g>
<g >
<title>r_object (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="581" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1137.24" y="591.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="693" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1162.19" y="703.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,485,429 samples, 0.03%)</title><rect x="161.7" y="997" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="164.73" y="1007.5" ></text>
</g>
<g >
<title>gc_collect_internal (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="629" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1161.44" y="639.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="1061" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1137.53" y="1071.5" ></text>
</g>
<g >
<title>object_vacall (13,072,439 samples, 0.10%)</title><rect x="162.9" y="757" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="165.88" y="767.5" ></text>
</g>
<g >
<title>_Py_module_getattro_impl (13,494,996 samples, 0.10%)</title><rect x="308.3" y="1285" width="1.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="311.29" y="1295.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1029" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="28.44" y="1039.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (17,993,174 samples, 0.13%)</title><rect x="64.1" y="1285" width="1.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="67.10" y="1295.5" ></text>
</g>
<g >
<title>run_mod (4,485,429 samples, 0.03%)</title><rect x="161.7" y="757" width="0.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="164.73" y="767.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (17,782,455 samples, 0.13%)</title><rect x="26.2" y="1237" width="1.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="29.20" y="1247.5" ></text>
</g>
<g >
<title>PyTime_Time (778,145,394 samples, 5.66%)</title><rect x="813.5" y="997" width="66.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="816.54" y="1007.5" >PyTime_..</text>
</g>
<g >
<title>method_vectorcall (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="533" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1142.92" y="543.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,477,879 samples, 0.03%)</title><rect x="26.2" y="1013" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="29.20" y="1023.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (17,782,455 samples, 0.13%)</title><rect x="26.2" y="1205" width="1.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="29.20" y="1215.5" ></text>
</g>
<g >
<title>builtin___import__ (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="1045" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1137.53" y="1055.5" ></text>
</g>
<g >
<title>_io_open_code (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="901" width="0.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1135.27" y="911.5" ></text>
</g>
<g >
<title>Py_INCREF (22,489,059 samples, 0.16%)</title><rect x="956.7" y="1061" width="1.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="959.71" y="1071.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1093" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1162.19" y="1103.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="949" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1135.63" y="959.5" ></text>
</g>
<g >
<title>mi_page_extend_free (4,474,879 samples, 0.03%)</title><rect x="32.4" y="389" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="35.35" y="399.5" ></text>
</g>
<g >
<title>PyBool_FromLong (17,991,113 samples, 0.13%)</title><rect x="794.6" y="1029" width="1.6" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="797.63" y="1039.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="709" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1137.24" y="719.5" ></text>
</g>
<g >
<title>mi_page_free_list_extend (4,474,879 samples, 0.03%)</title><rect x="32.4" y="373" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="35.35" y="383.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_unicode_threadsafe (4,498,252 samples, 0.03%)</title><rect x="782.3" y="965" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="785.28" y="975.5" ></text>
</g>
<g >
<title>import_name (8,936,670 samples, 0.06%)</title><rect x="43.9" y="773" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="46.91" y="783.5" ></text>
</g>
<g >
<title>import_find_and_load (5,745,542 samples, 0.04%)</title><rect x="1133.7" y="1045" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1136.75" y="1055.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (778,152,540 samples, 5.66%)</title><rect x="1020.0" y="997" width="66.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1022.99" y="1007.5" >_PyObje..</text>
</g>
<g >
<title>pymain_run_file_obj (9,476,686,296 samples, 68.90%)</title><rect x="320.4" y="1189" width="813.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="323.35" y="1199.5" >pymain_run_file_obj</text>
</g>
<g >
<title>cfunction_call (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="629" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1142.92" y="639.5" ></text>
</g>
<g >
<title>_Py_TryXGetRef (58,476,108 samples, 0.43%)</title><rect x="509.8" y="1013" width="5.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="512.83" y="1023.5" ></text>
</g>
<g >
<title>pyo3::gil::GILGuard::assume (8,995,473 samples, 0.07%)</title><rect x="1135.7" y="1253" width="0.7" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1138.68" y="1263.5" ></text>
</g>
<g >
<title>PyMarshal_ReadObjectFromString (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="645" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1137.24" y="655.5" ></text>
</g>
<g >
<title>marshal_loads_impl (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="613" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1161.82" y="623.5" ></text>
</g>
<g >
<title>PyObject_Malloc (22,489,294 samples, 0.16%)</title><rect x="40.8" y="1301" width="1.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="43.82" y="1311.5" ></text>
</g>
<g >
<title>_PyCriticalSection_End (125,947,231 samples, 0.92%)</title><rect x="594.7" y="1029" width="10.8" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="597.73" y="1039.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,463,125 samples, 0.03%)</title><rect x="33.9" y="661" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="36.88" y="671.5" ></text>
</g>
<g >
<title>all (13,754,031,434 samples, 100%)</title><rect x="10.0" y="1333" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1343.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="933" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1142.92" y="943.5" ></text>
</g>
<g >
<title>_PyCodec_Lookup (4,063,892 samples, 0.03%)</title><rect x="49.1" y="677" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="52.09" y="687.5" ></text>
</g>
<g >
<title>_PyDict_SetItem_Take2 (17,988,003 samples, 0.13%)</title><rect x="23.9" y="1285" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="26.89" y="1295.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (35,823,000 samples, 0.26%)</title><rect x="1116.9" y="741" width="3.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1119.85" y="751.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,063,892 samples, 0.03%)</title><rect x="49.1" y="933" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="52.09" y="943.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="933" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1135.27" y="943.5" ></text>
</g>
<g >
<title>dictkeys_get_index (8,997,016 samples, 0.07%)</title><rect x="760.3" y="917" width="0.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="763.28" y="927.5" ></text>
</g>
<g >
<title>__alloc_frozen_pages_noprof (4,450,819 samples, 0.03%)</title><rect x="25.4" y="85" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="28.44" y="95.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,477,879 samples, 0.03%)</title><rect x="26.2" y="773" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="29.20" y="783.5" ></text>
</g>
<g >
<title>pyo3::impl_::trampoline::trampoline (13,494,770 samples, 0.10%)</title><rect x="902.3" y="933" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="905.29" y="943.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,474,486 samples, 0.03%)</title><rect x="27.3" y="533" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="30.34" y="543.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (44,799,892 samples, 0.33%)</title><rect x="1116.1" y="773" width="3.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1119.08" y="783.5" ></text>
</g>
<g >
<title>builtin_exec_impl (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="933" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1162.19" y="943.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,453,660 samples, 0.03%)</title><rect x="32.0" y="325" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="34.97" y="335.5" ></text>
</g>
<g >
<title>_mi_malloc_generic (4,450,819 samples, 0.03%)</title><rect x="25.4" y="341" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="28.44" y="351.5" ></text>
</g>
<g >
<title>exc_page_fault (4,239,150 samples, 0.03%)</title><rect x="162.9" y="341" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="165.88" y="351.5" ></text>
</g>
<g >
<title>_mi_heap_area_visit_blocks (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="853" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1136.39" y="863.5" ></text>
</g>
<g >
<title>mi_block_set_nextx (4,450,819 samples, 0.03%)</title><rect x="25.4" y="229" width="0.4" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="28.44" y="239.5" ></text>
</g>
<g >
<title>_imp_exec_dynamic_impl (4,475,546 samples, 0.03%)</title><rect x="162.5" y="533" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="165.50" y="543.5" ></text>
</g>
<g >
<title>marshal_loads_impl (4,239,150 samples, 0.03%)</title><rect x="162.9" y="645" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="165.88" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,463,125 samples, 0.03%)</title><rect x="33.9" y="613" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="36.88" y="623.5" ></text>
</g>
<g >
<title>compare_unicode_unicode (143,941,213 samples, 1.05%)</title><rect x="650.7" y="949" width="12.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="653.68" y="959.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,239,150 samples, 0.03%)</title><rect x="162.9" y="693" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="165.88" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (13,072,439 samples, 0.10%)</title><rect x="162.9" y="805" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="165.88" y="815.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas_page (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="517" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1161.44" y="527.5" ></text>
</g>
<g >
<title>_Py_EnterRecursiveCallTstate (26,987,480 samples, 0.20%)</title><rect x="811.2" y="997" width="2.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="814.22" y="1007.5" ></text>
</g>
<g >
<title>method_vectorcall (4,433,858 samples, 0.03%)</title><rect x="162.1" y="453" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="165.12" y="463.5" ></text>
</g>
<g >
<title>compare_unicode_unicode (4,485,429 samples, 0.03%)</title><rect x="161.7" y="293" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="164.73" y="303.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1189" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="28.44" y="1199.5" ></text>
</g>
<g >
<title>set_contains_lock_held (4,454,646 samples, 0.03%)</title><rect x="243.1" y="1285" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="246.08" y="1295.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1077" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1142.92" y="1087.5" ></text>
</g>
<g >
<title>clear_thread_frame (121,440,991 samples, 0.88%)</title><rect x="982.9" y="1045" width="10.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="985.95" y="1055.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,508,963 samples, 0.03%)</title><rect x="319.6" y="997" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="322.58" y="1007.5" ></text>
</g>
<g >
<title>and_then&lt;i32, pyo3::err::PyErr, pyo3::instance::Bound&lt;pyo3::types::any::PyAny&gt;, pyo3::impl_::wrap::{impl#9}::map_into_ptr::{closure_env#0}&lt;i32, pyo3::err::PyErr&gt;&gt; (35,985,346 samples, 0.26%)</title><rect x="899.2" y="853" width="3.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="902.21" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (31,176,142 samples, 0.23%)</title><rect x="31.6" y="1253" width="2.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="34.59" y="1263.5" ></text>
</g>
<g >
<title>_Py_ThreadId (8,995,757 samples, 0.07%)</title><rect x="989.1" y="981" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="992.12" y="991.5" ></text>
</g>
<g >
<title>_Py_IsOwnedByCurrentThread (4,383,060 samples, 0.03%)</title><rect x="32.7" y="421" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="35.74" y="431.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1189" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1162.19" y="1199.5" ></text>
</g>
<g >
<title>import_find_and_load (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="565" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1122.93" y="575.5" ></text>
</g>
<g >
<title>object_vacall (4,383,060 samples, 0.03%)</title><rect x="32.7" y="917" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.74" y="927.5" ></text>
</g>
<g >
<title>r_object (4,239,150 samples, 0.03%)</title><rect x="162.9" y="565" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="165.88" y="575.5" ></text>
</g>
<g >
<title>marshal_loads_impl (4,492,904 samples, 0.03%)</title><rect x="43.9" y="597" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="46.91" y="607.5" ></text>
</g>
<g >
<title>builtin_exec (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="949" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1162.19" y="959.5" ></text>
</g>
<g >
<title>get&lt;isize&gt; (76,468,127 samples, 0.56%)</title><rect x="908.5" y="885" width="6.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="911.47" y="895.5" ></text>
</g>
<g >
<title>and_then&lt;i32, pyo3::err::PyErr, pyo3::instance::Bound&lt;pyo3::types::any::PyAny&gt;, pyo3::impl_::wrap::{impl#9}::map_into_ptr::{closure_env#0}&lt;i32, pyo3::err::PyErr&gt;&gt; (17,991,302 samples, 0.13%)</title><rect x="312.9" y="1269" width="1.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="315.92" y="1279.5" ></text>
</g>
<g >
<title>_PyType_HasFeature (17,992,939 samples, 0.13%)</title><rect x="1099.9" y="1045" width="1.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1102.87" y="1055.5" ></text>
</g>
<g >
<title>delete_garbage (4,503,688 samples, 0.03%)</title><rect x="320.0" y="1173" width="0.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="322.97" y="1183.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (13,304,576 samples, 0.10%)</title><rect x="26.6" y="1013" width="1.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="29.59" y="1023.5" ></text>
</g>
<g >
<title>pyo3::impl_::trampoline::trampoline (67,470,267 samples, 0.49%)</title><rect x="115.8" y="1285" width="5.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="118.81" y="1295.5" ></text>
</g>
<g >
<title>import_find_and_load (13,304,576 samples, 0.10%)</title><rect x="26.6" y="709" width="1.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="29.59" y="719.5" ></text>
</g>
<g >
<title>mi_page_queue_find_free_ex (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="837" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1137.01" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,455,522 samples, 0.03%)</title><rect x="163.6" y="453" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="166.62" y="463.5" ></text>
</g>
<g >
<title>PyImport_Import (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1205" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1162.19" y="1215.5" ></text>
</g>
<g >
<title>object_vacall (4,475,328 samples, 0.03%)</title><rect x="33.1" y="581" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="36.11" y="591.5" ></text>
</g>
<g >
<title>mi_find_free_page (4,359,608 samples, 0.03%)</title><rect x="27.0" y="373" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="29.97" y="383.5" ></text>
</g>
<g >
<title>builtin_exec_impl (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="325" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1120.24" y="335.5" ></text>
</g>
<g >
<title>_PyCriticalSection_Pop (17,991,946 samples, 0.13%)</title><rect x="594.7" y="1013" width="1.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="597.73" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="293" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1120.24" y="303.5" ></text>
</g>
<g >
<title>builtin___import___impl (8,931,350 samples, 0.06%)</title><rect x="31.6" y="1205" width="0.8" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="34.59" y="1215.5" ></text>
</g>
<g >
<title>mi_free (31,487,731 samples, 0.23%)</title><rect x="625.2" y="933" width="2.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="628.21" y="943.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallDictTstate (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1221" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="164.73" y="1231.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (5,745,542 samples, 0.04%)</title><rect x="1133.7" y="1109" width="0.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1136.75" y="1119.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="885" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1161.82" y="895.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,478,886 samples, 0.03%)</title><rect x="201.8" y="405" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="204.81" y="415.5" ></text>
</g>
<g >
<title>builtin_exec_impl (8,931,350 samples, 0.06%)</title><rect x="31.6" y="869" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="34.59" y="879.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,474,879 samples, 0.03%)</title><rect x="32.4" y="325" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="35.35" y="335.5" ></text>
</g>
<g >
<title>mi_block_next (4,440,989 samples, 0.03%)</title><rect x="164.4" y="101" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="167.39" y="111.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,443,766 samples, 0.03%)</title><rect x="44.3" y="405" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="47.29" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,474,879 samples, 0.03%)</title><rect x="32.4" y="869" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="35.35" y="879.5" ></text>
</g>
<g >
<title>builtin_exec (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1269" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="165.88" y="1279.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,450,819 samples, 0.03%)</title><rect x="25.4" y="821" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="28.44" y="831.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (13,304,576 samples, 0.10%)</title><rect x="26.6" y="693" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="29.59" y="703.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,481,255 samples, 0.03%)</title><rect x="25.8" y="725" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="28.82" y="735.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="517" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1142.92" y="527.5" ></text>
</g>
<g >
<title>deduce_unreachable_heap (4,979,668 samples, 0.04%)</title><rect x="318.4" y="1141" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="321.38" y="1151.5" ></text>
</g>
<g >
<title>r_object (4,239,150 samples, 0.03%)</title><rect x="162.9" y="597" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="165.88" y="607.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (8,936,670 samples, 0.06%)</title><rect x="43.9" y="853" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="46.91" y="863.5" ></text>
</g>
<g >
<title>r_object (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="405" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1162.19" y="415.5" ></text>
</g>
<g >
<title>_PyCodec_TextDecoder (4,063,892 samples, 0.03%)</title><rect x="49.1" y="725" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="52.09" y="735.5" ></text>
</g>
<g >
<title>object_vacall (4,477,879 samples, 0.03%)</title><rect x="26.2" y="725" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="29.20" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="421" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1122.93" y="431.5" ></text>
</g>
<g >
<title>type_call (4,450,819 samples, 0.03%)</title><rect x="25.4" y="469" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="28.44" y="479.5" ></text>
</g>
<g >
<title>builtin___import___impl (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="597" width="0.4" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1122.93" y="607.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1221" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1142.92" y="1231.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1077" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="164.73" y="1087.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,383,060 samples, 0.03%)</title><rect x="32.7" y="693" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="35.74" y="703.5" ></text>
</g>
<g >
<title>_Py_TryIncrefCompare (8,995,441 samples, 0.07%)</title><rect x="721.3" y="997" width="0.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="724.30" y="1007.5" ></text>
</g>
<g >
<title>_PyStaticType_GetState (17,991,080 samples, 0.13%)</title><rect x="1077.1" y="933" width="1.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1080.11" y="943.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (9,476,686,296 samples, 68.90%)</title><rect x="320.4" y="1093" width="813.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="323.35" y="1103.5" >PyEval_EvalCode</text>
</g>
<g >
<title>PyObject_Call (44,799,892 samples, 0.33%)</title><rect x="1116.1" y="837" width="3.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1119.08" y="847.5" ></text>
</g>
<g >
<title>builtin_exec (4,440,989 samples, 0.03%)</title><rect x="164.4" y="645" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="167.39" y="655.5" ></text>
</g>
<g >
<title>fixup_slot_dispatchers (4,063,892 samples, 0.03%)</title><rect x="49.1" y="213" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="52.09" y="223.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,377,767 samples, 0.03%)</title><rect x="163.2" y="469" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="166.25" y="479.5" ></text>
</g>
<g >
<title>mi_heap_visit_blocks (4,472,337 samples, 0.03%)</title><rect x="164.0" y="565" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="167.01" y="575.5" ></text>
</g>
<g >
<title>list_append (4,433,858 samples, 0.03%)</title><rect x="162.1" y="357" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="165.12" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,443,766 samples, 0.03%)</title><rect x="44.3" y="421" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="47.29" y="431.5" ></text>
</g>
<g >
<title>_Py_Dealloc (8,996,749 samples, 0.07%)</title><rect x="939.0" y="1029" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="941.95" y="1039.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_O (4,475,546 samples, 0.03%)</title><rect x="162.5" y="565" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="165.50" y="575.5" ></text>
</g>
<g >
<title>pymain_run_file (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1253" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="46.91" y="1263.5" ></text>
</g>
<g >
<title>r_object (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="437" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1162.19" y="447.5" ></text>
</g>
<g >
<title>Py_TYPE (17,993,305 samples, 0.13%)</title><rect x="769.9" y="997" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="772.93" y="1007.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (4,450,819 samples, 0.03%)</title><rect x="25.4" y="485" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="28.44" y="495.5" ></text>
</g>
<g >
<title>mark_reachable (4,448,400 samples, 0.03%)</title><rect x="33.5" y="453" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="36.50" y="463.5" ></text>
</g>
<g >
<title>pytime_mul_check_overflow (8,996,703 samples, 0.07%)</title><rect x="879.5" y="933" width="0.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="882.52" y="943.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (13,493,840 samples, 0.10%)</title><rect x="315.6" y="1301" width="1.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="318.62" y="1311.5" ></text>
</g>
<g >
<title>_PyObject_GC_New (4,359,608 samples, 0.03%)</title><rect x="27.0" y="453" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="29.97" y="463.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,474,879 samples, 0.03%)</title><rect x="32.4" y="789" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="35.35" y="799.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,475,328 samples, 0.03%)</title><rect x="33.1" y="629" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="36.11" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,485,429 samples, 0.03%)</title><rect x="161.7" y="645" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="164.73" y="655.5" ></text>
</g>
<g >
<title>PyDict_SetItem (17,988,003 samples, 0.13%)</title><rect x="23.9" y="1301" width="1.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="26.89" y="1311.5" ></text>
</g>
<g >
<title>visit_clear_unreachable (4,472,337 samples, 0.03%)</title><rect x="164.0" y="421" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="167.01" y="431.5" ></text>
</g>
<g >
<title>builtin___import___impl (8,936,670 samples, 0.06%)</title><rect x="43.9" y="965" width="0.8" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="46.91" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,415,815 samples, 0.03%)</title><rect x="1133.0" y="501" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1136.01" y="511.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1253" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="28.82" y="1263.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallDictTstate (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1109" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="164.73" y="1119.5" ></text>
</g>
<g >
<title>import_find_and_load (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="997" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1137.53" y="1007.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1141" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="46.91" y="1151.5" ></text>
</g>
<g >
<title>_PyCodec_InitRegistry (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="1141" width="0.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1137.24" y="1151.5" ></text>
</g>
<g >
<title>mi_heap_malloc (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="405" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1161.82" y="415.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,359,608 samples, 0.03%)</title><rect x="27.0" y="517" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="29.97" y="527.5" ></text>
</g>
<g >
<title>gc_collect_internal (8,996,448 samples, 0.07%)</title><rect x="316.8" y="1173" width="0.8" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="319.78" y="1183.5" ></text>
</g>
<g >
<title>mi_block_set_next (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="693" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1136.75" y="703.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,481,255 samples, 0.03%)</title><rect x="25.8" y="789" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="28.82" y="799.5" ></text>
</g>
<g >
<title>_PyEvalFramePushAndInit (98,955,553 samples, 0.72%)</title><rect x="133.6" y="1301" width="8.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="136.56" y="1311.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="453" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1135.63" y="463.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_unicode_threadsafe (4,063,892 samples, 0.03%)</title><rect x="49.1" y="133" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="52.09" y="143.5" ></text>
</g>
<g >
<title>intern_constants (4,481,255 samples, 0.03%)</title><rect x="25.8" y="485" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.82" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,383,060 samples, 0.03%)</title><rect x="32.7" y="789" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="35.74" y="799.5" ></text>
</g>
<g >
<title>update_load_avg (4,498,383 samples, 0.03%)</title><rect x="1131.9" y="917" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1134.89" y="927.5" ></text>
</g>
<g >
<title>float_dealloc (8,996,292 samples, 0.07%)</title><rect x="79.9" y="1285" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="82.93" y="1295.5" ></text>
</g>
<g >
<title>lambda_slash_no_default_rule (4,440,989 samples, 0.03%)</title><rect x="164.4" y="341" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="167.39" y="351.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_unicode (4,485,429 samples, 0.03%)</title><rect x="161.7" y="325" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="164.73" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (4,450,819 samples, 0.03%)</title><rect x="25.4" y="181" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="28.44" y="191.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (8,834,094 samples, 0.06%)</title><rect x="27.0" y="581" width="0.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="29.97" y="591.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4,481,255 samples, 0.03%)</title><rect x="25.8" y="325" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="28.82" y="335.5" ></text>
</g>
<g >
<title>fixup_slot_dispatchers (4,377,767 samples, 0.03%)</title><rect x="163.2" y="341" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="166.25" y="351.5" ></text>
</g>
<g >
<title>mi_block_set_next (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="789" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1137.01" y="799.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (4,498,092 samples, 0.03%)</title><rect x="803.5" y="885" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="806.50" y="895.5" ></text>
</g>
<g >
<title>type_call (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="677" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1135.27" y="687.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,063,892 samples, 0.03%)</title><rect x="49.1" y="869" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="52.09" y="879.5" ></text>
</g>
<g >
<title>_DK_ENTRIES (17,993,089 samples, 0.13%)</title><rect x="719.0" y="933" width="1.5" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="721.99" y="943.5" ></text>
</g>
<g >
<title>object_vacall (4,443,766 samples, 0.03%)</title><rect x="44.3" y="517" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="47.29" y="527.5" ></text>
</g>
<g >
<title>_Py_dict_lookup_threadsafe (4,063,892 samples, 0.03%)</title><rect x="49.1" y="149" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="52.09" y="159.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (13,304,576 samples, 0.10%)</title><rect x="26.6" y="725" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="29.59" y="735.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1157" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1162.19" y="1167.5" ></text>
</g>
<g >
<title>_Py_read (4,453,660 samples, 0.03%)</title><rect x="32.0" y="357" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="34.97" y="367.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,472,337 samples, 0.03%)</title><rect x="164.0" y="693" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="167.01" y="703.5" ></text>
</g>
<g >
<title>import_name (4,440,989 samples, 0.03%)</title><rect x="164.4" y="773" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="167.39" y="783.5" ></text>
</g>
<g >
<title>_PySeqLock_BeginRead (40,477,609 samples, 0.29%)</title><rect x="237.7" y="1301" width="3.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="240.68" y="1311.5" ></text>
</g>
<g >
<title>_PyLong_FromMedium (71,966,955 samples, 0.52%)</title><rect x="165.2" y="1301" width="6.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="168.15" y="1311.5" ></text>
</g>
<g >
<title>_PyVectorcall_Call (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1029" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="164.73" y="1039.5" ></text>
</g>
<g >
<title>pyinit_config (4,194,608 samples, 0.03%)</title><rect x="1133.4" y="1173" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1136.39" y="1183.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="1125" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1137.24" y="1135.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,463,125 samples, 0.03%)</title><rect x="33.9" y="501" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="36.88" y="511.5" ></text>
</g>
<g >
<title>_PyMem_mi_page_clear_qsbr (4,498,348 samples, 0.03%)</title><rect x="692.7" y="933" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="695.75" y="943.5" ></text>
</g>
<g >
<title>builtin___import___impl (4,063,892 samples, 0.03%)</title><rect x="49.1" y="549" width="0.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="52.09" y="559.5" ></text>
</g>
<g >
<title>builtin_exec (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1301" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1142.92" y="1311.5" ></text>
</g>
<g >
<title>zip_next (4,483,564 samples, 0.03%)</title><rect x="1118.0" y="277" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1121.00" y="287.5" ></text>
</g>
<g >
<title>import_find_and_load (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1013" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1142.92" y="1023.5" ></text>
</g>
<g >
<title>do_filp_open (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="517" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1135.27" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1061" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1142.92" y="1071.5" ></text>
</g>
<g >
<title>import_find_and_load (4,477,879 samples, 0.03%)</title><rect x="26.2" y="1141" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="29.20" y="1151.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,440,989 samples, 0.03%)</title><rect x="164.4" y="613" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="167.39" y="623.5" ></text>
</g>
<g >
<title>import_find_and_load (12,986,526 samples, 0.09%)</title><rect x="1132.3" y="1029" width="1.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1135.27" y="1039.5" ></text>
</g>
<g >
<title>vectorcall_unbound (4,479,687 samples, 0.03%)</title><rect x="1119.5" y="597" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1122.54" y="607.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint32_relaxed (31,488,149 samples, 0.23%)</title><rect x="670.0" y="1013" width="2.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="672.98" y="1023.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.0 (4,508,963 samples, 0.03%)</title><rect x="319.6" y="837" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="322.58" y="847.5" ></text>
</g>
<g >
<title>gc_visit_heaps_lock_held (4,496,781 samples, 0.03%)</title><rect x="318.8" y="1125" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="321.81" y="1135.5" ></text>
</g>
<g >
<title>_Py_atomic_store_uint32_relaxed (4,482,849 samples, 0.03%)</title><rect x="1118.4" y="533" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1121.39" y="543.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (1,340,411,445 samples, 9.75%)</title><rect x="803.9" y="1061" width="115.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="806.89" y="1071.5" >PyObject_Vecto..</text>
</g>
<g >
<title>mi_find_page (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="773" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1136.75" y="783.5" ></text>
</g>
<g >
<title>import_name (13,386,853 samples, 0.10%)</title><rect x="33.1" y="773" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="36.11" y="783.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="805" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1135.27" y="815.5" ></text>
</g>
<g >
<title>_PyObject_TryGetInstanceAttribute (22,490,182 samples, 0.16%)</title><rect x="212.2" y="1285" width="2.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="215.23" y="1295.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1221" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="28.82" y="1231.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1013" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="52.09" y="1023.5" ></text>
</g>
<g >
<title>binary_op1 (269,881,467 samples, 1.96%)</title><rect x="680.0" y="1029" width="23.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="683.01" y="1039.5" >b..</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,472,337 samples, 0.03%)</title><rect x="164.0" y="949" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="167.01" y="959.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1045" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="28.82" y="1055.5" ></text>
</g>
<g >
<title>dict_next_version (8,996,541 samples, 0.07%)</title><rect x="1157.7" y="1269" width="0.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1160.67" y="1279.5" ></text>
</g>
<g >
<title>do_sys_openat2 (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="533" width="0.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1135.27" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,481,255 samples, 0.03%)</title><rect x="25.8" y="901" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="28.82" y="911.5" ></text>
</g>
<g >
<title>_DK_ENTRIES (13,495,249 samples, 0.10%)</title><rect x="1096.8" y="965" width="1.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1099.79" y="975.5" ></text>
</g>
<g >
<title>builtin_exec_impl (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1029" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1161.44" y="1039.5" ></text>
</g>
<g >
<title>exc_page_fault (4,450,819 samples, 0.03%)</title><rect x="25.4" y="197" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="28.44" y="207.5" ></text>
</g>
<g >
<title>clock_gettime (656,705,381 samples, 4.77%)</title><rect x="818.2" y="965" width="56.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="821.17" y="975.5" >clock..</text>
</g>
<g >
<title>PyDict_SetItem (1,187,504,111 samples, 8.63%)</title><rect x="571.2" y="1061" width="101.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="574.19" y="1071.5" >PyDict_SetItem</text>
</g>
<g >
<title>_PyType_LookupRef (130,445,820 samples, 0.95%)</title><rect x="98.4" y="1285" width="11.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="101.45" y="1295.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="693" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1135.27" y="703.5" ></text>
</g>
<g >
<title>_io_open_code_impl (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="885" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1135.27" y="895.5" ></text>
</g>
<g >
<title>import_name (4,443,766 samples, 0.03%)</title><rect x="44.3" y="581" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="47.29" y="591.5" ></text>
</g>
<g >
<title>do_warn (4,478,886 samples, 0.03%)</title><rect x="201.8" y="645" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="204.81" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="949" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1161.44" y="959.5" ></text>
</g>
<g >
<title>PyObject_GenericGetAttr (4,383,060 samples, 0.03%)</title><rect x="32.7" y="517" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="35.74" y="527.5" ></text>
</g>
<g >
<title>r_object (4,477,879 samples, 0.03%)</title><rect x="26.2" y="565" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="29.20" y="575.5" ></text>
</g>
<g >
<title>import_find_and_load (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1237" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="28.44" y="1247.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="965" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1136.75" y="975.5" ></text>
</g>
<g >
<title>_PyDict_LoadGlobal (4,479,687 samples, 0.03%)</title><rect x="1119.5" y="549" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1122.54" y="559.5" ></text>
</g>
<g >
<title>object_vacall (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="613" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1135.63" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="773" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1137.24" y="783.5" ></text>
</g>
<g >
<title>builtin___import___impl (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1253" width="0.8" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="165.12" y="1263.5" ></text>
</g>
<g >
<title>_Py_atomic_store_uint32_relaxed (8,996,203 samples, 0.07%)</title><rect x="984.9" y="1013" width="0.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="987.88" y="1023.5" ></text>
</g>
<g >
<title>_PyVectorcall_FunctionInline (17,992,798 samples, 0.13%)</title><rect x="804.7" y="1029" width="1.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="807.66" y="1039.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="341" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1142.92" y="351.5" ></text>
</g>
<g >
<title>pyrun_file (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1189" width="0.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="46.91" y="1199.5" ></text>
</g>
<g >
<title>&lt;pyo3::gil::GILGuard as core::ops::drop::Drop&gt;::drop (4,498,036 samples, 0.03%)</title><rect x="915.0" y="853" width="0.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="918.03" y="863.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="933" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1137.24" y="943.5" ></text>
</g>
<g >
<title>_mi_abandoned_pool_visit_blocks (4,979,668 samples, 0.04%)</title><rect x="318.4" y="1093" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="321.38" y="1103.5" ></text>
</g>
<g >
<title>_sre_SRE_Pattern_match_impl (8,976,892 samples, 0.07%)</title><rect x="1116.1" y="677" width="0.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1119.08" y="687.5" ></text>
</g>
<g >
<title>object_vacall (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1045" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.19" y="1055.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,472,337 samples, 0.03%)</title><rect x="164.0" y="821" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="167.01" y="831.5" ></text>
</g>
<g >
<title>gc_visit_heaps_lock_held (8,996,448 samples, 0.07%)</title><rect x="316.8" y="1125" width="0.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="319.78" y="1135.5" ></text>
</g>
<g >
<title>unicode_eq (17,992,264 samples, 0.13%)</title><rect x="1188.5" y="1253" width="1.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1191.46" y="1263.5" ></text>
</g>
<g >
<title>builtin_exec (4,472,337 samples, 0.03%)</title><rect x="164.0" y="837" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="167.01" y="847.5" ></text>
</g>
<g >
<title>_imp_exec_dynamic (4,475,546 samples, 0.03%)</title><rect x="162.5" y="549" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="165.50" y="559.5" ></text>
</g>
<g >
<title>mi_heap_area_visitor (8,996,448 samples, 0.07%)</title><rect x="316.8" y="1045" width="0.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="319.78" y="1055.5" ></text>
</g>
<g >
<title>PyFloat_AS_DOUBLE (4,498,210 samples, 0.03%)</title><rect x="803.1" y="1013" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="806.12" y="1023.5" ></text>
</g>
<g >
<title>_Py_NewRef (4,463,125 samples, 0.03%)</title><rect x="33.9" y="453" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="36.88" y="463.5" ></text>
</g>
<g >
<title>&lt;pyo3::gil::GILGuard as core::ops::drop::Drop&gt;::drop (94,460,108 samples, 0.69%)</title><rect x="907.3" y="949" width="8.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="910.31" y="959.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,485,429 samples, 0.03%)</title><rect x="161.7" y="837" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="164.73" y="847.5" ></text>
</g>
<g >
<title>init_interp_main (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1253" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1162.19" y="1263.5" ></text>
</g>
<g >
<title>import_find_and_load (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1029" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="52.09" y="1039.5" ></text>
</g>
<g >
<title>slot_tp_init (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1061" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="204.81" y="1071.5" ></text>
</g>
<g >
<title>import_name (4,481,255 samples, 0.03%)</title><rect x="25.8" y="997" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="28.82" y="1007.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="661" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1135.63" y="671.5" ></text>
</g>
<g >
<title>r_object (4,485,429 samples, 0.03%)</title><rect x="161.7" y="469" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="164.73" y="479.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,475,546 samples, 0.03%)</title><rect x="162.5" y="389" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="165.50" y="399.5" ></text>
</g>
<g >
<title>python (13,754,031,434 samples, 100.00%)</title><rect x="10.0" y="1317" width="1180.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="13.00" y="1327.5" >python</text>
</g>
<g >
<title>object_vacall (13,304,576 samples, 0.10%)</title><rect x="26.6" y="677" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="29.59" y="687.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1285" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1142.92" y="1295.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_unicode (26,989,114 samples, 0.20%)</title><rect x="1166.8" y="1301" width="2.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1169.85" y="1311.5" ></text>
</g>
<g >
<title>_Py_dict_lookup_threadsafe (220,410,282 samples, 1.60%)</title><rect x="742.1" y="965" width="19.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="745.14" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (49,258,000 samples, 0.36%)</title><rect x="1116.1" y="1013" width="4.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1119.08" y="1023.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (22,263,710 samples, 0.16%)</title><rect x="25.8" y="1301" width="1.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="28.82" y="1311.5" ></text>
</g>
<g >
<title>gc_visit_heaps (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="501" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1135.63" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="453" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1120.24" y="463.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallDictTstate (4,478,886 samples, 0.03%)</title><rect x="201.8" y="917" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="204.81" y="927.5" ></text>
</g>
<g >
<title>__pyfunction_py_return_int (35,985,346 samples, 0.26%)</title><rect x="899.2" y="885" width="3.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="902.21" y="895.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (31,176,142 samples, 0.23%)</title><rect x="31.6" y="1237" width="2.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="34.59" y="1247.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="933" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1136.75" y="943.5" ></text>
</g>
<g >
<title>_Py_Dealloc (26,990,071 samples, 0.20%)</title><rect x="627.9" y="949" width="2.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="630.92" y="959.5" ></text>
</g>
<g >
<title>mi_block_set_next (4,239,150 samples, 0.03%)</title><rect x="162.9" y="389" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="165.88" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4,481,255 samples, 0.03%)</title><rect x="25.8" y="309" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="28.82" y="319.5" ></text>
</g>
<g >
<title>Py_InitializeFromConfig (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1237" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="52.09" y="1247.5" ></text>
</g>
<g >
<title>marshal_loads_impl (4,477,879 samples, 0.03%)</title><rect x="26.2" y="613" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="29.20" y="623.5" ></text>
</g>
<g >
<title>Py_BytesMain (9,535,213,986 samples, 69.33%)</title><rect x="316.8" y="1253" width="818.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="319.78" y="1263.5" >Py_BytesMain</text>
</g>
<g >
<title>builtin___build_class__ (4,377,767 samples, 0.03%)</title><rect x="163.2" y="581" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="166.25" y="591.5" ></text>
</g>
<g >
<title>import_name (8,931,350 samples, 0.06%)</title><rect x="31.6" y="821" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="34.59" y="831.5" ></text>
</g>
<g >
<title>_imp_create_dynamic_impl (4,478,886 samples, 0.03%)</title><rect x="201.8" y="725" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="204.81" y="735.5" ></text>
</g>
<g >
<title>new_keys_object (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="901" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1137.01" y="911.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (8,909,404 samples, 0.06%)</title><rect x="162.1" y="853" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="165.12" y="863.5" ></text>
</g>
<g >
<title>builtin_exec (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1141" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="28.44" y="1151.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1061" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="28.44" y="1071.5" ></text>
</g>
<g >
<title>_PyObject_CallFunctionVa (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1125" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="52.09" y="1135.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1109" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.88" y="1119.5" ></text>
</g>
<g >
<title>builtin___import___impl (4,383,060 samples, 0.03%)</title><rect x="32.7" y="837" width="0.4" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="35.74" y="847.5" ></text>
</g>
<g >
<title>slot_tp_new (4,377,767 samples, 0.03%)</title><rect x="163.2" y="533" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="166.25" y="543.5" ></text>
</g>
<g >
<title>import_find_and_load (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="837" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1135.63" y="847.5" ></text>
</g>
<g >
<title>_PyObject_MallocWithType (4,450,819 samples, 0.03%)</title><rect x="25.4" y="357" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="28.44" y="367.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (49,258,000 samples, 0.36%)</title><rect x="1116.1" y="981" width="4.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1119.08" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,485,429 samples, 0.03%)</title><rect x="161.7" y="709" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="164.73" y="719.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="965" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1162.19" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1045" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="204.81" y="1055.5" ></text>
</g>
<g >
<title>init_interp_main (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1205" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="52.09" y="1215.5" ></text>
</g>
<g >
<title>unicode_get_hash (58,477,146 samples, 0.43%)</title><rect x="553.4" y="965" width="5.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="556.44" y="975.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,472,337 samples, 0.03%)</title><rect x="164.0" y="805" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="167.01" y="815.5" ></text>
</g>
<g >
<title>mi_heap_visit_pages (4,470,482 samples, 0.03%)</title><rect x="26.6" y="501" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="29.59" y="511.5" ></text>
</g>
<g >
<title>call_typing_args_kwargs (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="421" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1142.92" y="431.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (4,481,255 samples, 0.03%)</title><rect x="25.8" y="245" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="28.82" y="255.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint32_relaxed (8,996,604 samples, 0.07%)</title><rect x="1115.3" y="1029" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1118.31" y="1039.5" ></text>
</g>
<g >
<title>_PyImport_InitExternal (5,745,542 samples, 0.04%)</title><rect x="1133.7" y="1157" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1136.75" y="1167.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,477,879 samples, 0.03%)</title><rect x="26.2" y="1029" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="29.20" y="1039.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (4,478,886 samples, 0.03%)</title><rect x="201.8" y="933" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="204.81" y="943.5" ></text>
</g>
<g >
<title>object_vacall (13,386,853 samples, 0.10%)</title><rect x="33.1" y="901" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="36.11" y="911.5" ></text>
</g>
<g >
<title>unicode_eq (134,937,768 samples, 0.98%)</title><rect x="1057.4" y="885" width="11.6" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1060.43" y="895.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (8,931,350 samples, 0.06%)</title><rect x="31.6" y="613" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="34.59" y="623.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,453,660 samples, 0.03%)</title><rect x="32.0" y="501" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="34.97" y="511.5" ></text>
</g>
<g >
<title>_Py_DecRefSharedDebug (4,503,688 samples, 0.03%)</title><rect x="320.0" y="1125" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="322.97" y="1135.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,477,879 samples, 0.03%)</title><rect x="26.2" y="661" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="29.20" y="671.5" ></text>
</g>
<g >
<title>_Py_NewReference (4,498,304 samples, 0.03%)</title><rect x="690.4" y="981" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="693.43" y="991.5" ></text>
</g>
<g >
<title>PyTuple_New (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="389" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1162.19" y="399.5" ></text>
</g>
<g >
<title>builtin_exec (13,304,576 samples, 0.10%)</title><rect x="26.6" y="1189" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="29.59" y="1199.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,472,337 samples, 0.03%)</title><rect x="164.0" y="1189" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="167.01" y="1199.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,481,255 samples, 0.03%)</title><rect x="25.8" y="917" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="28.82" y="927.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,443,766 samples, 0.03%)</title><rect x="44.3" y="469" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="47.29" y="479.5" ></text>
</g>
<g >
<title>PyType_GenericAlloc (4,450,819 samples, 0.03%)</title><rect x="25.4" y="389" width="0.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="28.44" y="399.5" ></text>
</g>
<g >
<title>intern_common (4,492,904 samples, 0.03%)</title><rect x="43.9" y="453" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="46.91" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,485,429 samples, 0.03%)</title><rect x="161.7" y="869" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="164.73" y="879.5" ></text>
</g>
<g >
<title>_PyRun_AnyFileObject (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1221" width="0.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="46.91" y="1231.5" ></text>
</g>
<g >
<title>_mi_heap_malloc_zero_ex (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="373" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1161.82" y="383.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,477,879 samples, 0.03%)</title><rect x="26.2" y="901" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="29.20" y="911.5" ></text>
</g>
<g >
<title>_PyType_GetDict (35,985,679 samples, 0.26%)</title><rect x="95.4" y="1285" width="3.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="98.36" y="1295.5" ></text>
</g>
<g >
<title>PyMapping_GetOptionalItem (53,970,175 samples, 0.39%)</title><rect x="673.1" y="1061" width="4.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="676.07" y="1071.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,931,350 samples, 0.06%)</title><rect x="31.6" y="645" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="34.59" y="655.5" ></text>
</g>
<g >
<title>__alloc_frozen_pages_noprof (4,239,150 samples, 0.03%)</title><rect x="162.9" y="229" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="165.88" y="239.5" ></text>
</g>
<g >
<title>gc_alloc (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="821" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1136.75" y="831.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4,239,150 samples, 0.03%)</title><rect x="162.9" y="293" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="165.88" y="303.5" ></text>
</g>
<g >
<title>lookup_tp_dict (26,986,097 samples, 0.20%)</title><rect x="1076.3" y="949" width="2.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1079.33" y="959.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,450,819 samples, 0.03%)</title><rect x="25.4" y="933" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="28.44" y="943.5" ></text>
</g>
<g >
<title>builtin_exec_impl (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1253" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="165.88" y="1263.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint64_relaxed (8,995,904 samples, 0.07%)</title><rect x="571.6" y="1029" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="574.57" y="1039.5" ></text>
</g>
<g >
<title>_PyDict_FromItems (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="933" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1137.01" y="943.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,477,879 samples, 0.03%)</title><rect x="26.2" y="1061" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="29.20" y="1071.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="805" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1137.24" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="805" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1161.82" y="815.5" ></text>
</g>
<g >
<title>mi_page_extend_free (4,239,150 samples, 0.03%)</title><rect x="162.9" y="421" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="165.88" y="431.5" ></text>
</g>
<g >
<title>warn_explicit (4,478,886 samples, 0.03%)</title><rect x="201.8" y="629" width="0.4" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="204.81" y="639.5" ></text>
</g>
<g >
<title>trampoline&lt;pyo3::impl_::trampoline::noargs::{closure_env#0}, *mut pyo3_ffi::object::PyObject&gt; (17,992,256 samples, 0.13%)</title><rect x="915.4" y="981" width="1.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="918.41" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="853" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1135.27" y="863.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,477,879 samples, 0.03%)</title><rect x="26.2" y="709" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="29.20" y="719.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas (4,470,482 samples, 0.03%)</title><rect x="26.6" y="517" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="29.59" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1013" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1162.19" y="1023.5" ></text>
</g>
<g >
<title>managed_static_type_index_get (17,991,080 samples, 0.13%)</title><rect x="1077.1" y="901" width="1.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1080.11" y="911.5" ></text>
</g>
<g >
<title>tick_nohz_handler (4,498,383 samples, 0.03%)</title><rect x="1131.9" y="981" width="0.4" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1134.89" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (8,931,350 samples, 0.06%)</title><rect x="31.6" y="965" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="34.59" y="975.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,455,522 samples, 0.03%)</title><rect x="163.6" y="485" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="166.62" y="495.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="197" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1142.92" y="207.5" ></text>
</g>
<g >
<title>_PyObject_MiMalloc (62,968,733 samples, 0.46%)</title><rect x="683.1" y="981" width="5.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="686.10" y="991.5" ></text>
</g>
<g >
<title>_PyObject_CallFunctionVa (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="1093" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1137.53" y="1103.5" ></text>
</g>
<g >
<title>gc_visit_heaps_lock_held (4,470,482 samples, 0.03%)</title><rect x="26.6" y="549" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="29.59" y="559.5" ></text>
</g>
<g >
<title>builtin_exec (4,383,060 samples, 0.03%)</title><rect x="32.7" y="709" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="35.74" y="719.5" ></text>
</g>
<g >
<title>builtin_exec (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1237" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1161.44" y="1247.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="309" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1120.24" y="319.5" ></text>
</g>
<g >
<title>update_process_times (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="229" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1135.63" y="239.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1141" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="52.09" y="1151.5" ></text>
</g>
<g >
<title>object_vacall (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1045" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="46.91" y="1055.5" ></text>
</g>
<g >
<title>_Py_TryIncrefCompare (17,992,690 samples, 0.13%)</title><rect x="1055.9" y="885" width="1.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1058.88" y="895.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,440,989 samples, 0.03%)</title><rect x="164.4" y="805" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="167.39" y="815.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,481,255 samples, 0.03%)</title><rect x="25.8" y="373" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="28.82" y="383.5" ></text>
</g>
<g >
<title>run_eval_code_obj (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="517" width="1.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1120.24" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_openat (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="549" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1135.27" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1205" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="165.12" y="1215.5" ></text>
</g>
<g >
<title>mi_heap_visit_blocks (4,448,400 samples, 0.03%)</title><rect x="33.5" y="565" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="36.50" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,415,815 samples, 0.03%)</title><rect x="1133.0" y="389" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1136.01" y="399.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,450,819 samples, 0.03%)</title><rect x="25.4" y="997" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="28.44" y="1007.5" ></text>
</g>
<g >
<title>_PyType_LookupRef (139,445,004 samples, 1.01%)</title><rect x="1104.1" y="1045" width="12.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1107.12" y="1055.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (49,258,000 samples, 0.36%)</title><rect x="1116.1" y="901" width="4.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1119.08" y="911.5" ></text>
</g>
<g >
<title>_PyImport_InitCore (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="1141" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1136.39" y="1151.5" ></text>
</g>
<g >
<title>_Py_atomic_load_ssize_relaxed (58,477,146 samples, 0.43%)</title><rect x="553.4" y="949" width="5.1" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="556.44" y="959.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="405" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1142.92" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (12,986,526 samples, 0.09%)</title><rect x="1132.3" y="1013" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1135.27" y="1023.5" ></text>
</g>
<g >
<title>mi_page_free_list_extend (4,239,150 samples, 0.03%)</title><rect x="162.9" y="405" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="165.88" y="415.5" ></text>
</g>
<g >
<title>object_vacall (4,450,819 samples, 0.03%)</title><rect x="25.4" y="693" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.44" y="703.5" ></text>
</g>
<g >
<title>pyo3::impl_::trampoline::trampoline (31,486,934 samples, 0.23%)</title><rect x="116.6" y="1205" width="2.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="119.58" y="1215.5" ></text>
</g>
<g >
<title>get_ast_state (4,475,546 samples, 0.03%)</title><rect x="162.5" y="485" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="165.50" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,477,879 samples, 0.03%)</title><rect x="26.2" y="965" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="29.20" y="975.5" ></text>
</g>
<g >
<title>builtin_exec_impl (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="869" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1137.24" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (49,258,000 samples, 0.36%)</title><rect x="1116.1" y="853" width="4.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1119.08" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1093" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="28.44" y="1103.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1141" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1162.19" y="1151.5" ></text>
</g>
<g >
<title>_PyCode_Fini (4,865,650 samples, 0.04%)</title><rect x="318.0" y="1173" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="320.96" y="1183.5" ></text>
</g>
<g >
<title>import_find_and_load (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="629" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1162.19" y="639.5" ></text>
</g>
<g >
<title>import_name (13,072,439 samples, 0.10%)</title><rect x="162.9" y="821" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="165.88" y="831.5" ></text>
</g>
<g >
<title>mi_heap_visit_blocks (4,496,781 samples, 0.03%)</title><rect x="318.8" y="1109" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="321.81" y="1119.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1157" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="204.81" y="1167.5" ></text>
</g>
<g >
<title>handle_mm_fault (4,359,608 samples, 0.03%)</title><rect x="27.0" y="229" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="29.97" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,386,853 samples, 0.10%)</title><rect x="33.1" y="789" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="36.11" y="799.5" ></text>
</g>
<g >
<title>PyGC_Collect (8,996,448 samples, 0.07%)</title><rect x="316.8" y="1205" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="319.78" y="1215.5" ></text>
</g>
<g >
<title>deduce_unreachable_heap (4,470,482 samples, 0.03%)</title><rect x="26.6" y="581" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="29.59" y="591.5" ></text>
</g>
<g >
<title>pyo3::impl_::trampoline::trampoline (17,992,256 samples, 0.13%)</title><rect x="915.4" y="965" width="1.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="918.41" y="975.5" ></text>
</g>
<g >
<title>mi_segment_visit_page (4,979,668 samples, 0.04%)</title><rect x="318.4" y="1061" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="321.38" y="1071.5" ></text>
</g>
<g >
<title>_Py_NewReference (4,498,331 samples, 0.03%)</title><rect x="881.5" y="949" width="0.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="884.45" y="959.5" ></text>
</g>
<g >
<title>_PyType_GetDict (13,494,742 samples, 0.10%)</title><rect x="244.2" y="1301" width="1.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="247.24" y="1311.5" ></text>
</g>
<g >
<title>import_find_and_load (4,450,819 samples, 0.03%)</title><rect x="25.4" y="725" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="28.44" y="735.5" ></text>
</g>
<g >
<title>_Py_atomic_load_int8_relaxed (8,996,346 samples, 0.07%)</title><rect x="665.3" y="933" width="0.8" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="668.35" y="943.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1045" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="52.09" y="1055.5" ></text>
</g>
<g >
<title>object_vacall (8,909,404 samples, 0.06%)</title><rect x="162.1" y="805" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="165.12" y="815.5" ></text>
</g>
<g >
<title>builtin___import__ (8,931,350 samples, 0.06%)</title><rect x="31.6" y="1221" width="0.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="34.59" y="1231.5" ></text>
</g>
<g >
<title>_PyObject_CallFunctionVa (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="741" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1135.27" y="751.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallDictTstate (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1141" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="204.81" y="1151.5" ></text>
</g>
<g >
<title>import_ensure_initialized (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="245" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1142.92" y="255.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,377,767 samples, 0.03%)</title><rect x="163.2" y="613" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="166.25" y="623.5" ></text>
</g>
<g >
<title>_mi_heap_area_visit_blocks (4,448,400 samples, 0.03%)</title><rect x="33.5" y="485" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="36.50" y="495.5" ></text>
</g>
<g >
<title>PyObject_IsTrue (22,489,991 samples, 0.16%)</title><rect x="62.2" y="1285" width="1.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="65.17" y="1295.5" ></text>
</g>
<g >
<title>_io_FileIO_readall_impl (4,453,660 samples, 0.03%)</title><rect x="32.0" y="373" width="0.4" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="34.97" y="383.5" ></text>
</g>
<g >
<title>r_object (4,239,150 samples, 0.03%)</title><rect x="162.9" y="549" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="165.88" y="559.5" ></text>
</g>
<g >
<title>builtin_exec (8,834,094 samples, 0.06%)</title><rect x="27.0" y="613" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="29.97" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,477,879 samples, 0.03%)</title><rect x="26.2" y="693" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="29.20" y="703.5" ></text>
</g>
<g >
<title>_bufferedreader_read_all (4,453,660 samples, 0.03%)</title><rect x="32.0" y="437" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="34.97" y="447.5" ></text>
</g>
<g >
<title>finalize_interp_clear (9,845,318 samples, 0.07%)</title><rect x="318.0" y="1205" width="0.8" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="320.96" y="1215.5" ></text>
</g>
<g >
<title>_Py_HandlePending (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="565" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1135.63" y="575.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1157" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1161.44" y="1167.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,433,858 samples, 0.03%)</title><rect x="162.1" y="389" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="165.12" y="399.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,481,255 samples, 0.03%)</title><rect x="25.8" y="949" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="28.82" y="959.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,450,819 samples, 0.03%)</title><rect x="25.4" y="869" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="28.44" y="879.5" ></text>
</g>
<g >
<title>_PyDict_GetItemRef_KnownHash (454,295,097 samples, 3.30%)</title><rect x="1030.4" y="965" width="39.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1033.41" y="975.5" >_Py..</text>
</g>
<g >
<title>mi_heap_collect_ex (4,778,680 samples, 0.03%)</title><rect x="317.6" y="1189" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="320.55" y="1199.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="821" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1135.27" y="831.5" ></text>
</g>
<g >
<title>_Py_module_getattro (58,477,829 samples, 0.43%)</title><rect x="304.4" y="1301" width="5.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="307.43" y="1311.5" ></text>
</g>
<g >
<title>pyo3::conversions::std::num::&lt;impl pyo3::conversion::IntoPyObject for i32&gt;::into_pyobject (26,989,705 samples, 0.20%)</title><rect x="1159.5" y="1301" width="2.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1162.52" y="1311.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,063,892 samples, 0.03%)</title><rect x="49.1" y="453" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="52.09" y="463.5" ></text>
</g>
<g >
<title>import_name (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1013" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="165.88" y="1023.5" ></text>
</g>
<g >
<title>r_object (4,477,879 samples, 0.03%)</title><rect x="26.2" y="517" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="29.20" y="527.5" ></text>
</g>
<g >
<title>_PyObject_HashFast (4,454,646 samples, 0.03%)</title><rect x="243.1" y="1253" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="246.08" y="1263.5" ></text>
</g>
<g >
<title>_mi_segment_page_of (4,498,002 samples, 0.03%)</title><rect x="626.8" y="917" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="629.76" y="927.5" ></text>
</g>
<g >
<title>import_name (12,986,526 samples, 0.09%)</title><rect x="1132.3" y="1061" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1135.27" y="1071.5" ></text>
</g>
<g >
<title>init_import_site (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1189" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="52.09" y="1199.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,976,892 samples, 0.07%)</title><rect x="1116.1" y="725" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1119.08" y="735.5" ></text>
</g>
<g >
<title>Py_TYPE (13,493,397 samples, 0.10%)</title><rect x="1074.0" y="981" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1077.02" y="991.5" ></text>
</g>
<g >
<title>setitem_take2_lock_held (4,443,766 samples, 0.03%)</title><rect x="44.3" y="357" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="47.29" y="367.5" ></text>
</g>
<g >
<title>insert_combined_dict (4,477,879 samples, 0.03%)</title><rect x="26.2" y="437" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="29.20" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (264,782,224 samples, 1.93%)</title><rect x="142.1" y="1301" width="22.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="145.05" y="1311.5" >_..</text>
</g>
<g >
<title>_Py_HashBytes (4,481,255 samples, 0.03%)</title><rect x="25.8" y="421" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="28.82" y="431.5" ></text>
</g>
<g >
<title>map_into_ptr&lt;i32, pyo3::err::PyErr&gt; (17,991,302 samples, 0.13%)</title><rect x="312.9" y="1285" width="1.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="315.92" y="1295.5" ></text>
</g>
<g >
<title>import_find_and_load (8,931,350 samples, 0.06%)</title><rect x="31.6" y="789" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="34.59" y="799.5" ></text>
</g>
<g >
<title>mi_heap_area_visitor (4,496,781 samples, 0.03%)</title><rect x="318.8" y="1045" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="321.81" y="1055.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="645" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1161.82" y="655.5" ></text>
</g>
<g >
<title>gc_collect_internal (4,472,337 samples, 0.03%)</title><rect x="164.0" y="629" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="167.01" y="639.5" ></text>
</g>
<g >
<title>_PyRun_StringFlagsWithName (4,440,989 samples, 0.03%)</title><rect x="164.4" y="501" width="0.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="167.39" y="511.5" ></text>
</g>
<g >
<title>deduce_unreachable_heap (4,448,400 samples, 0.03%)</title><rect x="33.5" y="613" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="36.50" y="623.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (8,909,404 samples, 0.06%)</title><rect x="162.1" y="901" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="165.12" y="911.5" ></text>
</g>
<g >
<title>_PyPegen_parse (4,440,989 samples, 0.03%)</title><rect x="164.4" y="453" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="167.39" y="463.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (4,450,819 samples, 0.03%)</title><rect x="25.4" y="53" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="28.44" y="63.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,440,989 samples, 0.03%)</title><rect x="164.4" y="1173" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="167.39" y="1183.5" ></text>
</g>
<g >
<title>import_name (4,485,429 samples, 0.03%)</title><rect x="161.7" y="693" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="164.73" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="885" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1135.63" y="895.5" ></text>
</g>
<g >
<title>mi_page_free_list_extend (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="805" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1137.01" y="815.5" ></text>
</g>
<g >
<title>PyTime_Time (4,498,132 samples, 0.03%)</title><rect x="203.7" y="1285" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="206.74" y="1295.5" ></text>
</g>
<g >
<title>Py_XDECREF (161,934,759 samples, 1.18%)</title><rect x="622.9" y="997" width="13.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="625.90" y="1007.5" ></text>
</g>
<g >
<title>PyDict_GetItemRef (112,444,144 samples, 0.82%)</title><rect x="14.2" y="1301" width="9.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="17.24" y="1311.5" ></text>
</g>
<g >
<title>warn_unicode (4,478,886 samples, 0.03%)</title><rect x="201.8" y="661" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="204.81" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,440,989 samples, 0.03%)</title><rect x="164.4" y="725" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="167.39" y="735.5" ></text>
</g>
<g >
<title>trampoline (269,888,860 samples, 1.96%)</title><rect x="893.8" y="1013" width="23.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="896.80" y="1023.5" >t..</text>
</g>
<g >
<title>builtin___import___impl (4,450,819 samples, 0.03%)</title><rect x="25.4" y="757" width="0.4" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="28.44" y="767.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,477,879 samples, 0.03%)</title><rect x="26.2" y="821" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="29.20" y="831.5" ></text>
</g>
<g >
<title>builtin___import__ (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1205" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="28.82" y="1215.5" ></text>
</g>
<g >
<title>_Py_EnterRecursivePy (26,989,552 samples, 0.20%)</title><rect x="1120.3" y="1061" width="2.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1123.31" y="1071.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,455,522 samples, 0.03%)</title><rect x="163.6" y="533" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="166.62" y="543.5" ></text>
</g>
<g >
<title>marshal_loads (4,485,429 samples, 0.03%)</title><rect x="161.7" y="533" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="164.73" y="543.5" ></text>
</g>
<g >
<title>assume (8,995,473 samples, 0.07%)</title><rect x="1135.7" y="1301" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1138.68" y="1311.5" ></text>
</g>
<g >
<title>import_name (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1269" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="28.44" y="1279.5" ></text>
</g>
<g >
<title>object_vacall (4,472,337 samples, 0.03%)</title><rect x="164.0" y="1237" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="167.01" y="1247.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,833,289 samples, 0.06%)</title><rect x="163.2" y="645" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="166.25" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (8,931,350 samples, 0.06%)</title><rect x="31.6" y="1045" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="34.59" y="1055.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_unicode (260,884,968 samples, 1.90%)</title><rect x="643.7" y="981" width="22.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="646.74" y="991.5" >u..</text>
</g>
<g >
<title>set_next (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="805" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1136.39" y="815.5" ></text>
</g>
<g >
<title>_PyList_AppendTakeRef (4,433,858 samples, 0.03%)</title><rect x="162.1" y="325" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="165.12" y="335.5" ></text>
</g>
<g >
<title>Py_DECREF (26,977,109 samples, 0.20%)</title><rect x="987.6" y="1013" width="2.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="990.58" y="1023.5" ></text>
</g>
<g >
<title>Py_DECREF (35,986,696 samples, 0.26%)</title><rect x="1052.8" y="885" width="3.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1055.79" y="895.5" ></text>
</g>
<g >
<title>import_find_and_load (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="757" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1161.82" y="767.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_split (53,978,854 samples, 0.39%)</title><rect x="716.7" y="981" width="4.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="719.67" y="991.5" ></text>
</g>
<g >
<title>deduce_unreachable_heap (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="981" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1136.39" y="991.5" ></text>
</g>
<g >
<title>_Py_dict_lookup (53,975,563 samples, 0.39%)</title><rect x="219.6" y="1285" width="4.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="222.56" y="1295.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (17,991,846 samples, 0.13%)</title><rect x="202.2" y="1285" width="1.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="205.20" y="1295.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="965" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1161.44" y="975.5" ></text>
</g>
<g >
<title>import_find_and_load (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1173" width="1.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="165.88" y="1183.5" ></text>
</g>
<g >
<title>read (4,453,660 samples, 0.03%)</title><rect x="32.0" y="341" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="34.97" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,477,879 samples, 0.03%)</title><rect x="26.2" y="805" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="29.20" y="815.5" ></text>
</g>
<g >
<title>PyLong_FromLong (35,985,346 samples, 0.26%)</title><rect x="899.2" y="789" width="3.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="902.21" y="799.5" ></text>
</g>
<g >
<title>get_float_freelist (4,498,397 samples, 0.03%)</title><rect x="956.3" y="1013" width="0.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="959.32" y="1023.5" ></text>
</g>
<g >
<title>_PyType_LookupRef (121,389,428 samples, 0.88%)</title><rect x="245.4" y="1301" width="10.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="248.39" y="1311.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (638,712,505 samples, 4.64%)</title><rect x="819.7" y="949" width="54.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="822.71" y="959.5" >__vds..</text>
</g>
<g >
<title>mi_heap_visit_areas_page (8,996,448 samples, 0.07%)</title><rect x="316.8" y="1061" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="319.78" y="1071.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1221" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1162.19" y="1231.5" ></text>
</g>
<g >
<title>builtin_exec_impl (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="917" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1135.63" y="927.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1109" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="28.44" y="1119.5" ></text>
</g>
<g >
<title>mi_heap_visit_blocks (8,996,448 samples, 0.07%)</title><rect x="316.8" y="1109" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="319.78" y="1119.5" ></text>
</g>
<g >
<title>_PyDict_GetItemRef_KnownHash (4,063,892 samples, 0.03%)</title><rect x="49.1" y="165" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="52.09" y="175.5" ></text>
</g>
<g >
<title>catch_unwind&lt;pyo3::impl_::trampoline::trampoline::{closure_env#0}&lt;pyo3::impl_::trampoline::noargs::{closure_env#0}, *mut pyo3_ffi::object::PyObject&gt;, core::result::Result&lt;*mut pyo3_ffi::object::PyObject, pyo3::err::PyErr&gt;&gt; (31,486,934 samples, 0.23%)</title><rect x="116.6" y="1269" width="2.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="119.58" y="1279.5" ></text>
</g>
<g >
<title>Py_SET_TYPE (4,498,177 samples, 0.03%)</title><rect x="881.1" y="949" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="884.07" y="959.5" ></text>
</g>
<g >
<title>_PyDictKeys_StringLookupSplit (4,498,558 samples, 0.03%)</title><rect x="201.4" y="1285" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="204.43" y="1295.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="261" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1135.63" y="271.5" ></text>
</g>
<g >
<title>import_find_and_load (4,440,989 samples, 0.03%)</title><rect x="164.4" y="1253" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="167.39" y="1263.5" ></text>
</g>
<g >
<title>run_eval_code_obj (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1157" width="0.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="46.91" y="1167.5" ></text>
</g>
<g >
<title>_PyDict_GetItemRef_KnownHash (233,904,888 samples, 1.70%)</title><rect x="741.0" y="981" width="20.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="743.99" y="991.5" ></text>
</g>
<g >
<title>PyFunction_NewWithQualName (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="853" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1136.75" y="863.5" ></text>
</g>
<g >
<title>read_object (4,481,255 samples, 0.03%)</title><rect x="25.8" y="613" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="28.82" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1157" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="165.88" y="1167.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,936,670 samples, 0.06%)</title><rect x="43.9" y="869" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.91" y="879.5" ></text>
</g>
<g >
<title>Py_DECREF (13,495,135 samples, 0.10%)</title><rect x="1069.4" y="981" width="1.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1072.39" y="991.5" ></text>
</g>
<g >
<title>mi_heap_visit_blocks (8,946,758 samples, 0.07%)</title><rect x="1118.8" y="533" width="0.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1121.77" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,478,886 samples, 0.03%)</title><rect x="201.8" y="885" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="204.81" y="895.5" ></text>
</g>
<g >
<title>_PyObject_TryGetInstanceAttribute (112,453,260 samples, 0.82%)</title><rect x="712.4" y="1013" width="9.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="715.43" y="1023.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="853" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1137.24" y="863.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,478,886 samples, 0.03%)</title><rect x="201.8" y="821" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="204.81" y="831.5" ></text>
</g>
<g >
<title>object_vacall (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="757" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1137.24" y="767.5" ></text>
</g>
<g >
<title>mi_page_init (4,474,879 samples, 0.03%)</title><rect x="32.4" y="405" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="35.35" y="415.5" ></text>
</g>
<g >
<title>_Py_IsImmortal (4,498,250 samples, 0.03%)</title><rect x="553.1" y="965" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="556.05" y="975.5" ></text>
</g>
<g >
<title>gc_visit_heaps (4,508,963 samples, 0.03%)</title><rect x="319.6" y="1157" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="322.58" y="1167.5" ></text>
</g>
<g >
<title>mi_segment_visit_pages (4,979,668 samples, 0.04%)</title><rect x="318.4" y="1077" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="321.38" y="1087.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (17,782,455 samples, 0.13%)</title><rect x="26.2" y="1269" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="29.20" y="1279.5" ></text>
</g>
<g >
<title>_Py_ThreadId (13,494,803 samples, 0.10%)</title><rect x="625.6" y="901" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="628.60" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="501" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1122.93" y="511.5" ></text>
</g>
<g >
<title>mi_block_set_nextx (4,239,150 samples, 0.03%)</title><rect x="162.9" y="373" width="0.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="165.88" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="917" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1162.19" y="927.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,450,819 samples, 0.03%)</title><rect x="25.4" y="853" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="28.44" y="863.5" ></text>
</g>
<g >
<title>_PyEval_FrameClearAndPop (4,482,849 samples, 0.03%)</title><rect x="1118.4" y="629" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1121.39" y="639.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,472,337 samples, 0.03%)</title><rect x="164.0" y="1077" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="167.01" y="1087.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallDictTstate (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1029" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="204.81" y="1039.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_unicode (4,492,904 samples, 0.03%)</title><rect x="43.9" y="389" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="46.91" y="399.5" ></text>
</g>
<g >
<title>benchlib_pyo3::&lt;impl benchlib_pyo3::py_return_int::MakeDef&gt;::_PYO3_DEF::trampoline (13,494,637 samples, 0.10%)</title><rect x="810.1" y="1013" width="1.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="813.06" y="1023.5" ></text>
</g>
<g >
<title>builtin___import__ (4,440,989 samples, 0.03%)</title><rect x="164.4" y="981" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="167.39" y="991.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="741" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1161.44" y="751.5" ></text>
</g>
<g >
<title>PyMarshal_ReadObjectFromString (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="485" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1162.19" y="495.5" ></text>
</g>
<g >
<title>interpreter_clear (4,979,668 samples, 0.04%)</title><rect x="318.4" y="1189" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="321.38" y="1199.5" ></text>
</g>
<g >
<title>_Py_LeaveRecursiveCallTstate (26,988,160 samples, 0.20%)</title><rect x="790.4" y="1045" width="2.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="793.38" y="1055.5" ></text>
</g>
<g >
<title>import_find_and_load (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="645" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1135.63" y="655.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (12,986,526 samples, 0.09%)</title><rect x="1132.3" y="1045" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1135.27" y="1055.5" ></text>
</g>
<g >
<title>object_vacall (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="789" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.44" y="799.5" ></text>
</g>
<g >
<title>_PyFrame_GetStackPointer (13,494,569 samples, 0.10%)</title><rect x="993.4" y="1061" width="1.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="996.37" y="1071.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (17,769,913 samples, 0.13%)</title><rect x="32.7" y="949" width="1.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="35.74" y="959.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (4,377,767 samples, 0.03%)</title><rect x="163.2" y="485" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="166.25" y="495.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,063,892 samples, 0.03%)</title><rect x="49.1" y="981" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="52.09" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,433,858 samples, 0.03%)</title><rect x="162.1" y="501" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.12" y="511.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas (4,508,963 samples, 0.03%)</title><rect x="319.6" y="1109" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="322.58" y="1119.5" ></text>
</g>
<g >
<title>_PyDict_LoadGlobal (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="917" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1137.53" y="927.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4,359,608 samples, 0.03%)</title><rect x="27.0" y="213" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="29.97" y="223.5" ></text>
</g>
<g >
<title>type_new (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="597" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1142.92" y="607.5" ></text>
</g>
<g >
<title>PyFunction_NewWithQualName (4,359,608 samples, 0.03%)</title><rect x="27.0" y="469" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="29.97" y="479.5" ></text>
</g>
<g >
<title>PyDict_GetItemRef (1,183,007,969 samples, 8.60%)</title><rect x="469.7" y="1061" width="101.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="472.69" y="1071.5" >PyDict_GetIt..</text>
</g>
<g >
<title>builtin_exec (4,481,255 samples, 0.03%)</title><rect x="25.8" y="869" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="28.82" y="879.5" ></text>
</g>
<g >
<title>gc_collect_main (8,996,448 samples, 0.07%)</title><rect x="316.8" y="1189" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="319.78" y="1199.5" ></text>
</g>
<g >
<title>handle_softirqs (4,475,546 samples, 0.03%)</title><rect x="162.5" y="117" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="165.50" y="127.5" ></text>
</g>
<g >
<title>try_with&lt;core::cell::Cell&lt;isize&gt;, pyo3::gil::decrement_gil_count::{closure_env#0},  (22,490,608 samples, 0.16%)</title><rect x="11.9" y="1269" width="2.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="14.93" y="1279.5" ></text>
</g>
<g >
<title>siphash13 (4,481,255 samples, 0.03%)</title><rect x="25.8" y="389" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="28.82" y="399.5" ></text>
</g>
<g >
<title>gc_visit_heaps_lock_held (4,979,668 samples, 0.04%)</title><rect x="318.4" y="1109" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="321.38" y="1119.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,472,337 samples, 0.03%)</title><rect x="164.0" y="789" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.01" y="799.5" ></text>
</g>
<g >
<title>intern_one_constant (4,481,255 samples, 0.03%)</title><rect x="25.8" y="469" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="28.82" y="479.5" ></text>
</g>
<g >
<title>mi_block_nextx (13,494,194 samples, 0.10%)</title><rect x="687.3" y="869" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="690.34" y="879.5" ></text>
</g>
<g >
<title>object_vacall (4,063,892 samples, 0.03%)</title><rect x="49.1" y="997" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="52.09" y="1007.5" ></text>
</g>
<g >
<title>type_call (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1189" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="204.81" y="1199.5" ></text>
</g>
<g >
<title>_mi_heap_area_visit_blocks (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="485" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1161.44" y="495.5" ></text>
</g>
<g >
<title>_PyPegen_run_parser_from_string (4,440,989 samples, 0.03%)</title><rect x="164.4" y="485" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="167.39" y="495.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (13,072,439 samples, 0.10%)</title><rect x="162.9" y="901" width="1.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="165.88" y="911.5" ></text>
</g>
<g >
<title>builtin_exec (4,463,125 samples, 0.03%)</title><rect x="33.9" y="645" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="36.88" y="655.5" ></text>
</g>
<g >
<title>import_find_and_load (17,782,455 samples, 0.13%)</title><rect x="26.2" y="1285" width="1.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="29.20" y="1295.5" ></text>
</g>
<g >
<title>_PyInterpreterState_GET (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="389" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1122.93" y="399.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,359,608 samples, 0.03%)</title><rect x="27.0" y="549" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="29.97" y="559.5" ></text>
</g>
<g >
<title>gc_visit_heaps (4,979,668 samples, 0.04%)</title><rect x="318.4" y="1125" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="321.38" y="1135.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,383,060 samples, 0.03%)</title><rect x="32.7" y="565" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="35.74" y="575.5" ></text>
</g>
<g >
<title>do_anonymous_page (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="277" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1162.19" y="287.5" ></text>
</g>
<g >
<title>gc_visit_heaps (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="597" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1161.44" y="607.5" ></text>
</g>
<g >
<title>PyNumber_InPlaceAdd (296,870,123 samples, 2.16%)</title><rect x="677.7" y="1061" width="25.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="680.70" y="1071.5" >P..</text>
</g>
<g >
<title>builtin___import__ (4,477,879 samples, 0.03%)</title><rect x="26.2" y="1189" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="29.20" y="1199.5" ></text>
</g>
<g >
<title>py_get_system_clock (26,984,361 samples, 0.20%)</title><rect x="92.7" y="1269" width="2.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="95.66" y="1279.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1189" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1142.92" y="1199.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,063,892 samples, 0.03%)</title><rect x="49.1" y="533" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="52.09" y="543.5" ></text>
</g>
<g >
<title>op_from_block (4,470,666 samples, 0.03%)</title><rect x="1119.2" y="421" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1122.16" y="431.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,936,670 samples, 0.06%)</title><rect x="43.9" y="789" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.91" y="799.5" ></text>
</g>
<g >
<title>builtin___import__ (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="1029" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1137.24" y="1039.5" ></text>
</g>
<g >
<title>replace&lt;isize&gt; (4,498,036 samples, 0.03%)</title><rect x="915.0" y="869" width="0.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="918.03" y="879.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1141" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="165.12" y="1151.5" ></text>
</g>
<g >
<title>object_vacall (13,304,576 samples, 0.10%)</title><rect x="26.6" y="869" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="29.59" y="879.5" ></text>
</g>
<g >
<title>lookup_tp_dict (13,494,742 samples, 0.10%)</title><rect x="244.2" y="1285" width="1.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="247.24" y="1295.5" ></text>
</g>
<g >
<title>slot_mp_subscript (4,479,687 samples, 0.03%)</title><rect x="1119.5" y="629" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1122.54" y="639.5" ></text>
</g>
<g >
<title>account_user_time (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="213" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1135.63" y="223.5" ></text>
</g>
<g >
<title>Py_InitializeFromConfig (16,902,195 samples, 0.12%)</title><rect x="1133.4" y="1205" width="1.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1136.39" y="1215.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint32_acquire (8,996,842 samples, 0.07%)</title><rect x="1084.1" y="965" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1087.05" y="975.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,485,429 samples, 0.03%)</title><rect x="161.7" y="581" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="164.73" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1013" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.91" y="1023.5" ></text>
</g>
<g >
<title>_PyFloat_FromPyTime (157,437,519 samples, 1.14%)</title><rect x="880.3" y="997" width="13.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="883.30" y="1007.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="613" width="1.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1120.24" y="623.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,453,660 samples, 0.03%)</title><rect x="32.0" y="405" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="34.97" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,472,337 samples, 0.03%)</title><rect x="164.0" y="725" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="167.01" y="735.5" ></text>
</g>
<g >
<title>Py_INCREF (76,469,892 samples, 0.56%)</title><rect x="666.5" y="1029" width="6.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="669.51" y="1039.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="661" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1161.82" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,477,879 samples, 0.03%)</title><rect x="26.2" y="1077" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="29.20" y="1087.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,474,879 samples, 0.03%)</title><rect x="32.4" y="981" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="35.35" y="991.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1237" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="204.81" y="1247.5" ></text>
</g>
<g >
<title>mark_heap_visitor (4,470,482 samples, 0.03%)</title><rect x="26.6" y="437" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="29.59" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1125" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.91" y="1135.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (31,176,142 samples, 0.23%)</title><rect x="31.6" y="1269" width="2.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="34.59" y="1279.5" ></text>
</g>
<g >
<title>pymain_run_file (9,476,686,296 samples, 68.90%)</title><rect x="320.4" y="1205" width="813.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="323.35" y="1215.5" >pymain_run_file</text>
</g>
<g >
<title>new_reference (4,498,304 samples, 0.03%)</title><rect x="690.4" y="965" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="693.43" y="975.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallDictTstate (4,063,892 samples, 0.03%)</title><rect x="49.1" y="293" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="52.09" y="303.5" ></text>
</g>
<g >
<title>object_vacall (4,474,879 samples, 0.03%)</title><rect x="32.4" y="965" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.35" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,472,337 samples, 0.03%)</title><rect x="164.0" y="1061" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.01" y="1071.5" ></text>
</g>
<g >
<title>_PyObject_ComputedDictPointer (13,494,729 samples, 0.10%)</title><rect x="1075.2" y="981" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1078.18" y="991.5" ></text>
</g>
<g >
<title>binary_iop1 (283,376,519 samples, 2.06%)</title><rect x="678.9" y="1045" width="24.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="681.86" y="1055.5" >b..</text>
</g>
<g >
<title>_Py_dict_lookup (35,982,618 samples, 0.26%)</title><rect x="257.7" y="1301" width="3.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="260.74" y="1311.5" ></text>
</g>
<g >
<title>import_name (4,474,879 samples, 0.03%)</title><rect x="32.4" y="837" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="35.35" y="847.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,450,819 samples, 0.03%)</title><rect x="25.4" y="741" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="28.44" y="751.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="277" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1135.63" y="287.5" ></text>
</g>
<g >
<title>builtin___import___impl (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="293" width="0.4" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1142.92" y="303.5" ></text>
</g>
<g >
<title>visit_decref (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="341" width="0.4" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1135.63" y="351.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,474,879 samples, 0.03%)</title><rect x="32.4" y="917" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="35.35" y="927.5" ></text>
</g>
<g >
<title>pysiphash (4,481,255 samples, 0.03%)</title><rect x="25.8" y="405" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="28.82" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1077" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.12" y="1087.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,415,815 samples, 0.03%)</title><rect x="1133.0" y="469" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1136.01" y="479.5" ></text>
</g>
<g >
<title>_PyThreadState_ClearMimallocHeaps (4,778,680 samples, 0.03%)</title><rect x="317.6" y="1205" width="0.4" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="320.55" y="1215.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4,498,383 samples, 0.03%)</title><rect x="1131.9" y="1013" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1134.89" y="1023.5" ></text>
</g>
<g >
<title>finalize_modules (8,992,398 samples, 0.07%)</title><rect x="318.8" y="1205" width="0.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="321.81" y="1215.5" ></text>
</g>
<g >
<title>mi_page_extend_free (4,359,608 samples, 0.03%)</title><rect x="27.0" y="341" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="29.97" y="351.5" ></text>
</g>
<g >
<title>builtin___import___impl (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="1029" width="0.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1137.53" y="1039.5" ></text>
</g>
<g >
<title>_Py_HandlePending (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="661" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1161.44" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,433,858 samples, 0.03%)</title><rect x="162.1" y="421" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.12" y="431.5" ></text>
</g>
<g >
<title>import_find_and_load (13,386,853 samples, 0.10%)</title><rect x="33.1" y="933" width="1.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="36.11" y="943.5" ></text>
</g>
<g >
<title>_PyObject_TryGetInstanceAttribute (148,440,928 samples, 1.08%)</title><rect x="1087.1" y="1045" width="12.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1090.14" y="1055.5" ></text>
</g>
<g >
<title>PyTime_Time (17,988,049 samples, 0.13%)</title><rect x="88.8" y="1285" width="1.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="91.80" y="1295.5" ></text>
</g>
<g >
<title>builtin_exec (4,478,886 samples, 0.03%)</title><rect x="201.8" y="421" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="204.81" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1013" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1161.44" y="1023.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1029" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1142.92" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,453,660 samples, 0.03%)</title><rect x="32.0" y="293" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="34.97" y="303.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1013" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="204.81" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="901" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1162.19" y="911.5" ></text>
</g>
<g >
<title>_PyObject_ComputedDictPointer (8,995,016 samples, 0.07%)</title><rect x="771.5" y="997" width="0.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="774.47" y="1007.5" ></text>
</g>
<g >
<title>_Py_atomic_load_ssize_relaxed (94,460,392 samples, 0.69%)</title><rect x="563.1" y="1029" width="8.1" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="566.08" y="1039.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas (4,448,400 samples, 0.03%)</title><rect x="33.5" y="549" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="36.50" y="559.5" ></text>
</g>
<g >
<title>_Py_TryIncrefCompare (4,475,546 samples, 0.03%)</title><rect x="162.5" y="213" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="165.50" y="223.5" ></text>
</g>
<g >
<title>PyObject_VisitManagedDict (4,496,781 samples, 0.03%)</title><rect x="318.8" y="981" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="321.81" y="991.5" ></text>
</g>
<g >
<title>builtin_exec_impl (13,304,576 samples, 0.10%)</title><rect x="26.6" y="789" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="29.59" y="799.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (4,063,892 samples, 0.03%)</title><rect x="49.1" y="277" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="52.09" y="287.5" ></text>
</g>
<g >
<title>_PySeqLock_EndRead (17,993,034 samples, 0.13%)</title><rect x="214.2" y="1285" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="217.16" y="1295.5" ></text>
</g>
<g >
<title>_PyFloat_FromPyTime (26,989,382 samples, 0.20%)</title><rect x="233.4" y="1269" width="2.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="236.44" y="1279.5" ></text>
</g>
<g >
<title>r_object (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="421" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1162.19" y="431.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1173" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="28.82" y="1183.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1045" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="165.12" y="1055.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,440,989 samples, 0.03%)</title><rect x="164.4" y="597" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.39" y="607.5" ></text>
</g>
<g >
<title>import_find_and_load (13,304,576 samples, 0.10%)</title><rect x="26.6" y="901" width="1.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="29.59" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,383,060 samples, 0.03%)</title><rect x="32.7" y="549" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.74" y="559.5" ></text>
</g>
<g >
<title>_Py_NewRef (76,469,892 samples, 0.56%)</title><rect x="666.5" y="1045" width="6.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="669.51" y="1055.5" ></text>
</g>
<g >
<title>init_flags (4,465,178 samples, 0.03%)</title><rect x="1146.9" y="1301" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1149.87" y="1311.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,477,690 samples, 0.03%)</title><rect x="31.6" y="421" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="34.59" y="431.5" ></text>
</g>
<g >
<title>mi_heap_visit_pages (4,472,337 samples, 0.03%)</title><rect x="164.0" y="533" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="167.01" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,481,255 samples, 0.03%)</title><rect x="25.8" y="709" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="28.82" y="719.5" ></text>
</g>
<g >
<title>_DK_ENTRIES (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="853" width="0.3" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1137.53" y="863.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4,474,879 samples, 0.03%)</title><rect x="32.4" y="309" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="35.35" y="319.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="885" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1136.75" y="895.5" ></text>
</g>
<g >
<title>sched_tick (4,481,255 samples, 0.03%)</title><rect x="25.8" y="261" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="28.82" y="271.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="1141" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1137.53" y="1151.5" ></text>
</g>
<g >
<title>do_lookup (260,884,968 samples, 1.90%)</title><rect x="643.7" y="965" width="22.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="646.74" y="975.5" >d..</text>
</g>
<g >
<title>read_object (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="629" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1137.24" y="639.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_unicode_threadsafe (242,876,034 samples, 1.77%)</title><rect x="1169.2" y="1301" width="20.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1172.16" y="1311.5" ></text>
</g>
<g >
<title>dict_setdefault_ref_lock_held (4,477,879 samples, 0.03%)</title><rect x="26.2" y="453" width="0.4" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="29.20" y="463.5" ></text>
</g>
<g >
<title>do_lookup (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="869" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1137.53" y="879.5" ></text>
</g>
<g >
<title>import_name (4,474,486 samples, 0.03%)</title><rect x="27.3" y="549" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="30.34" y="559.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (4,239,150 samples, 0.03%)</title><rect x="162.9" y="245" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="165.88" y="255.5" ></text>
</g>
<g >
<title>increment_gil_count (49,478,900 samples, 0.36%)</title><rect x="895.0" y="949" width="4.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="897.96" y="959.5" ></text>
</g>
<g >
<title>mi_heap_malloc (4,440,989 samples, 0.03%)</title><rect x="164.4" y="181" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="167.39" y="191.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="1045" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1137.24" y="1055.5" ></text>
</g>
<g >
<title>mi_heap_visit_blocks (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="469" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1135.63" y="479.5" ></text>
</g>
<g >
<title>_imp_create_dynamic (4,478,886 samples, 0.03%)</title><rect x="201.8" y="741" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="204.81" y="751.5" ></text>
</g>
<g >
<title>object_vacall (8,931,350 samples, 0.06%)</title><rect x="31.6" y="949" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="34.59" y="959.5" ></text>
</g>
<g >
<title>_PyDict_GetItemRef_KnownHash (1,025,572,071 samples, 7.46%)</title><rect x="475.1" y="1045" width="88.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="478.10" y="1055.5" >_PyDict_Ge..</text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,440,989 samples, 0.03%)</title><rect x="164.4" y="997" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="167.39" y="1007.5" ></text>
</g>
<g >
<title>_mi_page_malloc (4,440,989 samples, 0.03%)</title><rect x="164.4" y="117" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="167.39" y="127.5" ></text>
</g>
<g >
<title>builtin_exec (4,063,892 samples, 0.03%)</title><rect x="49.1" y="901" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="52.09" y="911.5" ></text>
</g>
<g >
<title>mi_find_free_page (4,450,819 samples, 0.03%)</title><rect x="25.4" y="309" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="28.44" y="319.5" ></text>
</g>
<g >
<title>pyo3::impl_::trampoline::trampoline (31,487,109 samples, 0.23%)</title><rect x="1162.2" y="1301" width="2.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1165.22" y="1311.5" ></text>
</g>
<g >
<title>object_vacall (8,936,670 samples, 0.06%)</title><rect x="43.9" y="709" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="46.91" y="719.5" ></text>
</g>
<g >
<title>vfs_read (4,453,660 samples, 0.03%)</title><rect x="32.0" y="245" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="34.97" y="255.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,063,892 samples, 0.03%)</title><rect x="49.1" y="501" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="52.09" y="511.5" ></text>
</g>
<g >
<title>object_vacall (17,769,913 samples, 0.13%)</title><rect x="32.7" y="1093" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.74" y="1103.5" ></text>
</g>
<g >
<title>r_object (4,239,150 samples, 0.03%)</title><rect x="162.9" y="581" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="165.88" y="591.5" ></text>
</g>
<g >
<title>_mi_heap_area_visit_blocks (8,996,448 samples, 0.07%)</title><rect x="316.8" y="1029" width="0.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="319.78" y="1039.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallDictTstate (4,377,767 samples, 0.03%)</title><rect x="163.2" y="501" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="166.25" y="511.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (67,467,294 samples, 0.49%)</title><rect x="56.4" y="1285" width="5.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="59.38" y="1295.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,440,989 samples, 0.03%)</title><rect x="164.4" y="1013" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.39" y="1023.5" ></text>
</g>
<g >
<title>import_name (4,383,060 samples, 0.03%)</title><rect x="32.7" y="645" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="35.74" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1093" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="165.12" y="1103.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,377,767 samples, 0.03%)</title><rect x="163.2" y="629" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="166.25" y="639.5" ></text>
</g>
<g >
<title>import_find_and_load (8,936,670 samples, 0.06%)</title><rect x="43.9" y="933" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="46.91" y="943.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1013" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="165.12" y="1023.5" ></text>
</g>
<g >
<title>pytime_fromtimespec (17,992,717 samples, 0.13%)</title><rect x="121.6" y="1285" width="1.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="124.60" y="1295.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="997" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1161.44" y="1007.5" ></text>
</g>
<g >
<title>import_find_and_load (4,474,879 samples, 0.03%)</title><rect x="32.4" y="805" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="35.35" y="815.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,440,989 samples, 0.03%)</title><rect x="164.4" y="821" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="167.39" y="831.5" ></text>
</g>
<g >
<title>mi_find_free_page (13,494,757 samples, 0.10%)</title><rect x="692.0" y="965" width="1.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="694.98" y="975.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (13,304,576 samples, 0.10%)</title><rect x="26.6" y="661" width="1.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="29.59" y="671.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="757" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1161.44" y="767.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,440,989 samples, 0.03%)</title><rect x="164.4" y="949" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="167.39" y="959.5" ></text>
</g>
<g >
<title>builtin_exec_impl (8,909,404 samples, 0.06%)</title><rect x="162.1" y="917" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="165.12" y="927.5" ></text>
</g>
<g >
<title>initialize_locals (53,975,146 samples, 0.39%)</title><rect x="1147.2" y="1301" width="4.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1150.25" y="1311.5" ></text>
</g>
<g >
<title>lambda_params_rule (4,440,989 samples, 0.03%)</title><rect x="164.4" y="373" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="167.39" y="383.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (13,386,853 samples, 0.10%)</title><rect x="33.1" y="805" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="36.11" y="815.5" ></text>
</g>
<g >
<title>gc_collect_main (8,946,758 samples, 0.07%)</title><rect x="1118.8" y="613" width="0.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1121.77" y="623.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (31,176,142 samples, 0.23%)</title><rect x="31.6" y="1301" width="2.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="34.59" y="1311.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (8,936,670 samples, 0.06%)</title><rect x="43.9" y="997" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="46.91" y="1007.5" ></text>
</g>
<g >
<title>_mi_malloc_generic (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="789" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1136.75" y="799.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="661" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1122.93" y="671.5" ></text>
</g>
<g >
<title>object_vacall (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="725" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.82" y="735.5" ></text>
</g>
<g >
<title>_Py_module_getattro (575,762,190 samples, 4.19%)</title><rect x="733.3" y="1045" width="49.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="736.27" y="1055.5" >_Py_..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1189" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="164.73" y="1199.5" ></text>
</g>
<g >
<title>_Py_IsImmortal (4,497,974 samples, 0.03%)</title><rect x="317.2" y="997" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="320.17" y="1007.5" ></text>
</g>
<g >
<title>object_vacall (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1141" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="165.88" y="1151.5" ></text>
</g>
<g >
<title>time_time (17,992,558 samples, 0.13%)</title><rect x="1165.3" y="1301" width="1.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1168.30" y="1311.5" ></text>
</g>
<g >
<title>_Py_atomic_store_uint32_relaxed (22,489,436 samples, 0.16%)</title><rect x="630.2" y="965" width="2.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="633.23" y="975.5" ></text>
</g>
<g >
<title>r_object (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="565" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1137.24" y="575.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (4,485,429 samples, 0.03%)</title><rect x="161.7" y="885" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="164.73" y="895.5" ></text>
</g>
<g >
<title>dict_setdefault_ref_lock_held (4,492,904 samples, 0.03%)</title><rect x="43.9" y="421" width="0.4" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="46.91" y="431.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,472,337 samples, 0.03%)</title><rect x="164.0" y="997" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="167.01" y="1007.5" ></text>
</g>
<g >
<title>import_find_and_load (8,909,404 samples, 0.06%)</title><rect x="162.1" y="645" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="165.12" y="655.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (4,475,546 samples, 0.03%)</title><rect x="162.5" y="373" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="165.50" y="383.5" ></text>
</g>
<g >
<title>pymain_init (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1253" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="52.09" y="1263.5" ></text>
</g>
<g >
<title>import_name (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="789" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1161.82" y="799.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="725" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1135.27" y="735.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,383,060 samples, 0.03%)</title><rect x="32.7" y="597" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="35.74" y="607.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (4,475,546 samples, 0.03%)</title><rect x="162.5" y="421" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="165.50" y="431.5" ></text>
</g>
<g >
<title>_Py_TryIncrefFast (4,498,313 samples, 0.03%)</title><rect x="1042.8" y="901" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1045.76" y="911.5" ></text>
</g>
<g >
<title>import_find_and_load (17,769,913 samples, 0.13%)</title><rect x="32.7" y="1125" width="1.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="35.74" y="1135.5" ></text>
</g>
<g >
<title>__pyfunction_py_return_int (58,475,420 samples, 0.43%)</title><rect x="309.4" y="1301" width="5.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="312.45" y="1311.5" ></text>
</g>
<g >
<title>builtin___import__ (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1077" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="52.09" y="1087.5" ></text>
</g>
<g >
<title>builtin_exec_impl (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1221" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1161.44" y="1231.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1237" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="165.88" y="1247.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (8,931,350 samples, 0.06%)</title><rect x="31.6" y="997" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="34.59" y="1007.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4,498,383 samples, 0.03%)</title><rect x="1131.9" y="997" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1134.89" y="1007.5" ></text>
</g>
<g >
<title>_PySet_Contains (4,454,646 samples, 0.03%)</title><rect x="243.1" y="1301" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="246.08" y="1311.5" ></text>
</g>
<g >
<title>object_vacall (4,063,892 samples, 0.03%)</title><rect x="49.1" y="485" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="52.09" y="495.5" ></text>
</g>
<g >
<title>gc_visit_heaps (4,472,337 samples, 0.03%)</title><rect x="164.0" y="597" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="167.01" y="607.5" ></text>
</g>
<g >
<title>&lt;pyo3::gil::GILGuard as core::ops::drop::Drop&gt;::drop (44,980,898 samples, 0.33%)</title><rect x="10.0" y="1301" width="3.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="597" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1135.27" y="607.5" ></text>
</g>
<g >
<title>rcu_do_batch (4,475,546 samples, 0.03%)</title><rect x="162.5" y="85" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="165.50" y="95.5" ></text>
</g>
<g >
<title>builtin_exec_impl (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1109" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="165.12" y="1119.5" ></text>
</g>
<g >
<title>PyUnicode_IS_COMPACT (8,996,060 samples, 0.07%)</title><rect x="1059.0" y="853" width="0.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1061.97" y="863.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,477,879 samples, 0.03%)</title><rect x="26.2" y="741" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="29.20" y="751.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (8,833,289 samples, 0.06%)</title><rect x="163.2" y="661" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="166.25" y="671.5" ></text>
</g>
<g >
<title>import_name (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="677" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1135.63" y="687.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,472,337 samples, 0.03%)</title><rect x="164.0" y="853" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="167.01" y="863.5" ></text>
</g>
<g >
<title>import_find_and_load (13,072,439 samples, 0.10%)</title><rect x="162.9" y="789" width="1.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="165.88" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,443,766 samples, 0.03%)</title><rect x="44.3" y="597" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="47.29" y="607.5" ></text>
</g>
<g >
<title>type_call (4,063,892 samples, 0.03%)</title><rect x="49.1" y="261" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="52.09" y="271.5" ></text>
</g>
<g >
<title>PyFile_OpenCodeObject (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="869" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1135.27" y="879.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (13,386,853 samples, 0.10%)</title><rect x="33.1" y="917" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="36.11" y="927.5" ></text>
</g>
<g >
<title>r_object (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="597" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1137.24" y="607.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,440,989 samples, 0.03%)</title><rect x="164.4" y="629" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="167.39" y="639.5" ></text>
</g>
<g >
<title>mi_heap_visit_pages (4,496,781 samples, 0.03%)</title><rect x="318.8" y="1077" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="321.81" y="1087.5" ></text>
</g>
<g >
<title>object_vacall (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="981" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.92" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,472,337 samples, 0.03%)</title><rect x="164.0" y="1253" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="167.01" y="1263.5" ></text>
</g>
<g >
<title>marshal_loads_impl (4,485,429 samples, 0.03%)</title><rect x="161.7" y="517" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="164.73" y="527.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (17,769,913 samples, 0.13%)</title><rect x="32.7" y="1077" width="1.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="35.74" y="1087.5" ></text>
</g>
<g >
<title>mi_heap_malloc_small_zero (40,483,356 samples, 0.29%)</title><rect x="685.0" y="917" width="3.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="688.03" y="927.5" ></text>
</g>
<g >
<title>find_empty_slot (4,443,766 samples, 0.03%)</title><rect x="44.3" y="309" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="47.29" y="319.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (575,762,190 samples, 4.19%)</title><rect x="733.3" y="1013" width="49.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="736.27" y="1023.5" >_PyO..</text>
</g>
<g >
<title>call_show_warning (4,478,886 samples, 0.03%)</title><rect x="201.8" y="613" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="204.81" y="623.5" ></text>
</g>
<g >
<title>py_get_system_clock (44,981,383 samples, 0.33%)</title><rect x="228.0" y="1285" width="3.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="231.03" y="1295.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (4,475,546 samples, 0.03%)</title><rect x="162.5" y="133" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="165.50" y="143.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="709" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1135.27" y="719.5" ></text>
</g>
<g >
<title>_Py_DecRefShared (4,503,688 samples, 0.03%)</title><rect x="320.0" y="1141" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="322.97" y="1151.5" ></text>
</g>
<g >
<title>_mi_ptr_segment (8,996,511 samples, 0.07%)</title><rect x="627.1" y="901" width="0.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="630.14" y="911.5" ></text>
</g>
<g >
<title>r_object (4,481,255 samples, 0.03%)</title><rect x="25.8" y="533" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="28.82" y="543.5" ></text>
</g>
<g >
<title>ensure_shared_on_read (49,480,572 samples, 0.36%)</title><rect x="514.8" y="1013" width="4.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="517.84" y="1023.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1253" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1161.44" y="1263.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,985,509 samples, 0.01%)</title><rect x="45.4" y="1253" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="48.45" y="1263.5" ></text>
</g>
<g >
<title>r_object (4,492,904 samples, 0.03%)</title><rect x="43.9" y="549" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="46.91" y="559.5" ></text>
</g>
<g >
<title>mi_find_free_page (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="757" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1136.75" y="767.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4,498,092 samples, 0.03%)</title><rect x="803.5" y="965" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="806.50" y="975.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="1093" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1137.24" y="1103.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_NOARGS (31,486,655 samples, 0.23%)</title><rect x="1140.3" y="1301" width="2.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1143.30" y="1311.5" ></text>
</g>
<g >
<title>import_find_and_load (4,383,060 samples, 0.03%)</title><rect x="32.7" y="805" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="35.74" y="815.5" ></text>
</g>
<g >
<title>_DK_ENTRIES (22,491,535 samples, 0.16%)</title><rect x="648.8" y="949" width="1.9" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="651.75" y="959.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,931,350 samples, 0.06%)</title><rect x="31.6" y="933" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="34.59" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1157" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.12" y="1167.5" ></text>
</g>
<g >
<title>PyObject_Call (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="485" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1142.92" y="495.5" ></text>
</g>
<g >
<title>read_object (4,477,879 samples, 0.03%)</title><rect x="26.2" y="597" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="29.20" y="607.5" ></text>
</g>
<g >
<title>builtin___import___impl (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="1013" width="0.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1137.24" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,450,819 samples, 0.03%)</title><rect x="25.4" y="901" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="28.44" y="911.5" ></text>
</g>
<g >
<title>builtin_exec (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="725" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1161.44" y="735.5" ></text>
</g>
<g >
<title>PyUnicode_Decode (4,063,892 samples, 0.03%)</title><rect x="49.1" y="757" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="52.09" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Init (26,989,190 samples, 0.20%)</title><rect x="688.5" y="997" width="2.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="691.50" y="1007.5" ></text>
</g>
<g >
<title>object_vacall (8,909,404 samples, 0.06%)</title><rect x="162.1" y="613" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="165.12" y="623.5" ></text>
</g>
<g >
<title>clear_thread_frame (31,483,830 samples, 0.23%)</title><rect x="204.1" y="1269" width="2.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="207.13" y="1279.5" ></text>
</g>
<g >
<title>_Py_object_freelists_GET (4,498,397 samples, 0.03%)</title><rect x="956.3" y="997" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="959.32" y="1007.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,063,892 samples, 0.03%)</title><rect x="49.1" y="949" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="52.09" y="959.5" ></text>
</g>
<g >
<title>_mi_heap_area_visit_blocks (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="389" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1135.63" y="399.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (4,450,819 samples, 0.03%)</title><rect x="25.4" y="101" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="28.44" y="111.5" ></text>
</g>
<g >
<title>charge_memcg (4,359,608 samples, 0.03%)</title><rect x="27.0" y="165" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="29.97" y="175.5" ></text>
</g>
<g >
<title>list_traverse (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="357" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1135.63" y="367.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (4,239,150 samples, 0.03%)</title><rect x="162.9" y="357" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="165.88" y="367.5" ></text>
</g>
<g >
<title>Py_XDECREF (17,993,380 samples, 0.13%)</title><rect x="991.8" y="997" width="1.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="994.82" y="1007.5" ></text>
</g>
<g >
<title>compare_unicode_unicode_threadsafe (8,996,631 samples, 0.07%)</title><rect x="720.5" y="933" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="723.53" y="943.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,481,255 samples, 0.03%)</title><rect x="25.8" y="837" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="28.82" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1221" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="204.81" y="1231.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (4,377,767 samples, 0.03%)</title><rect x="163.2" y="565" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="166.25" y="575.5" ></text>
</g>
<g >
<title>Py_DECREF (440,815,100 samples, 3.20%)</title><rect x="918.9" y="1061" width="37.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="921.89" y="1071.5" >Py_..</text>
</g>
<g >
<title>object_vacall (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1189" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="165.12" y="1199.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (13,386,853 samples, 0.10%)</title><rect x="33.1" y="757" width="1.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="36.11" y="767.5" ></text>
</g>
<g >
<title>_PyObject_Call (44,799,892 samples, 0.33%)</title><rect x="1116.1" y="821" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1119.08" y="831.5" ></text>
</g>
<g >
<title>_PyFrame_Initialize (121,451,198 samples, 0.88%)</title><rect x="959.4" y="1045" width="10.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="962.41" y="1055.5" ></text>
</g>
<g >
<title>_mi_heap_malloc_zero (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="389" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1161.82" y="399.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,477,879 samples, 0.03%)</title><rect x="26.2" y="1093" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="29.20" y="1103.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,498,092 samples, 0.03%)</title><rect x="803.5" y="1013" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="806.50" y="1023.5" ></text>
</g>
<g >
<title>mi_page_extend_free (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="821" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1137.01" y="831.5" ></text>
</g>
<g >
<title>_PyEvalFramePushAndInit (27,000,129 samples, 0.20%)</title><rect x="70.3" y="1285" width="2.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="73.28" y="1295.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_unicode_threadsafe (512,790,041 samples, 3.73%)</title><rect x="519.1" y="1013" width="44.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="522.09" y="1023.5" >unic..</text>
</g>
<g >
<title>builtin_exec (4,475,328 samples, 0.03%)</title><rect x="33.1" y="517" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="36.11" y="527.5" ></text>
</g>
<g >
<title>try&lt;core::result::Result&lt;*mut pyo3_ffi::object::PyObject, pyo3::err::PyErr&gt;, pyo3::impl_::trampoline::trampoline::{closure_env#0}&lt;pyo3::impl_::trampoline::noargs::{closure_env#0}, *mut pyo3_ffi::object::PyObject&gt;&gt; (31,486,934 samples, 0.23%)</title><rect x="116.6" y="1253" width="2.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="119.58" y="1263.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,481,255 samples, 0.03%)</title><rect x="25.8" y="853" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="28.82" y="863.5" ></text>
</g>
<g >
<title>_io__Buffered_read_impl (4,453,660 samples, 0.03%)</title><rect x="32.0" y="453" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="34.97" y="463.5" ></text>
</g>
<g >
<title>gc_collect_internal (8,992,398 samples, 0.07%)</title><rect x="318.8" y="1173" width="0.8" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="321.81" y="1183.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,304,576 samples, 0.10%)</title><rect x="26.6" y="1141" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="29.59" y="1151.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="373" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1142.92" y="383.5" ></text>
</g>
<g >
<title>_PyObject_Call (4,377,767 samples, 0.03%)</title><rect x="163.2" y="437" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="166.25" y="447.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (4,239,150 samples, 0.03%)</title><rect x="162.9" y="517" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="165.88" y="527.5" ></text>
</g>
<g >
<title>[unknown] (616,209,227 samples, 4.48%)</title><rect x="80.7" y="1301" width="52.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="83.70" y="1311.5" >[unkn..</text>
</g>
<g >
<title>_mi_heap_area_visit_blocks (4,470,482 samples, 0.03%)</title><rect x="26.6" y="453" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="29.59" y="463.5" ></text>
</g>
<g >
<title>_Py_TryXGetRef (4,475,546 samples, 0.03%)</title><rect x="162.5" y="229" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="165.50" y="239.5" ></text>
</g>
<g >
<title>r_object (4,485,429 samples, 0.03%)</title><rect x="161.7" y="421" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="164.73" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="373" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.19" y="383.5" ></text>
</g>
<g >
<title>finalize_interp_types (4,865,650 samples, 0.04%)</title><rect x="318.0" y="1189" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="320.96" y="1199.5" ></text>
</g>
<g >
<title>type_new_init_subclass (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="565" width="0.4" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="1142.92" y="575.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="709" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1161.44" y="719.5" ></text>
</g>
<g >
<title>_PyObject_Call (4,377,767 samples, 0.03%)</title><rect x="163.2" y="421" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="166.25" y="431.5" ></text>
</g>
<g >
<title>object_vacall (4,383,060 samples, 0.03%)</title><rect x="32.7" y="581" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.74" y="591.5" ></text>
</g>
<g >
<title>_PyVectorcall_NARGS (4,498,492 samples, 0.03%)</title><rect x="809.7" y="1013" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="812.68" y="1023.5" ></text>
</g>
<g >
<title>do_richcompare (130,442,606 samples, 0.95%)</title><rect x="792.7" y="1045" width="11.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="795.70" y="1055.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (35,823,000 samples, 0.26%)</title><rect x="1116.9" y="693" width="3.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1119.85" y="703.5" ></text>
</g>
<g >
<title>import_name (8,913,326 samples, 0.06%)</title><rect x="164.0" y="1285" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="167.01" y="1295.5" ></text>
</g>
<g >
<title>_PyThreadState_PopFrame (13,494,323 samples, 0.10%)</title><rect x="78.8" y="1285" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="81.77" y="1295.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,492,904 samples, 0.03%)</title><rect x="43.9" y="645" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="46.91" y="655.5" ></text>
</g>
<g >
<title>PyDict_SetItem (13,494,288 samples, 0.10%)</title><rect x="53.7" y="1285" width="1.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="56.68" y="1295.5" ></text>
</g>
<g >
<title>import_name (5,745,542 samples, 0.04%)</title><rect x="1133.7" y="1077" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1136.75" y="1087.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="709" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1135.63" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (4,063,892 samples, 0.03%)</title><rect x="49.1" y="661" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="52.09" y="671.5" ></text>
</g>
<g >
<title>_PyStack_AsDict (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="949" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1137.01" y="959.5" ></text>
</g>
<g >
<title>path_openat (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="501" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1135.27" y="511.5" ></text>
</g>
<g >
<title>_PyType_LookupRef (94,457,124 samples, 0.69%)</title><rect x="1078.6" y="981" width="8.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1081.65" y="991.5" ></text>
</g>
<g >
<title>_mi_page_malloc (40,483,356 samples, 0.29%)</title><rect x="685.0" y="901" width="3.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="688.03" y="911.5" ></text>
</g>
<g >
<title>exc_page_fault (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="341" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1162.19" y="351.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,433,858 samples, 0.03%)</title><rect x="162.1" y="437" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="165.12" y="447.5" ></text>
</g>
<g >
<title>_Py_NewReference (8,996,217 samples, 0.07%)</title><rect x="218.8" y="1285" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="221.79" y="1295.5" ></text>
</g>
<g >
<title>benchlib_pyo3::&lt;impl benchlib_pyo3::py_return_int::MakeDef&gt;::_PYO3_DEF::trampoline (269,888,860 samples, 1.96%)</title><rect x="893.8" y="997" width="23.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="896.80" y="1007.5" >b..</text>
</g>
<g >
<title>_PyBytes_FromSize (4,239,150 samples, 0.03%)</title><rect x="162.9" y="501" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="165.88" y="511.5" ></text>
</g>
<g >
<title>_PyObject_TryGetInstanceAttribute (22,489,868 samples, 0.16%)</title><rect x="199.9" y="1301" width="1.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="202.89" y="1311.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,475,328 samples, 0.03%)</title><rect x="33.1" y="693" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="36.11" y="703.5" ></text>
</g>
<g >
<title>object_vacall (4,481,255 samples, 0.03%)</title><rect x="25.8" y="741" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.82" y="751.5" ></text>
</g>
<g >
<title>gc_visit_heaps (4,448,400 samples, 0.03%)</title><rect x="33.5" y="597" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="36.50" y="607.5" ></text>
</g>
<g >
<title>slot_tp_new (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="757" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1142.92" y="767.5" ></text>
</g>
<g >
<title>_Py_atomic_compare_exchange_ssize (4,503,688 samples, 0.03%)</title><rect x="320.0" y="1093" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="322.97" y="1103.5" ></text>
</g>
<g >
<title>mi_checked_ptr_segment (8,996,511 samples, 0.07%)</title><rect x="627.1" y="917" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="630.14" y="927.5" ></text>
</g>
<g >
<title>builtin_exec_impl (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="725" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1135.63" y="735.5" ></text>
</g>
<g >
<title>pyo3::impl_::trampoline::trampoline (107,954,819 samples, 0.78%)</title><rect x="906.2" y="965" width="9.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="909.15" y="975.5" ></text>
</g>
<g >
<title>DK_UNICODE_ENTRIES (13,494,342 samples, 0.10%)</title><rect x="642.6" y="981" width="1.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="645.58" y="991.5" ></text>
</g>
<g >
<title>mi_heap_area_visitor (8,946,758 samples, 0.07%)</title><rect x="1118.8" y="469" width="0.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1121.77" y="479.5" ></text>
</g>
<g >
<title>_PyType_GetDict (26,986,097 samples, 0.20%)</title><rect x="1076.3" y="965" width="2.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1079.33" y="975.5" ></text>
</g>
<g >
<title>import_name (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1237" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1142.92" y="1247.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,063,892 samples, 0.03%)</title><rect x="49.1" y="581" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="52.09" y="591.5" ></text>
</g>
<g >
<title>_Py_TryXGetRef (4,483,564 samples, 0.03%)</title><rect x="1118.0" y="229" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1121.00" y="239.5" ></text>
</g>
<g >
<title>object_vacall (4,440,989 samples, 0.03%)</title><rect x="164.4" y="1221" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="167.39" y="1231.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_NOARGS (1,290,936,382 samples, 9.39%)</title><rect x="806.2" y="1029" width="110.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="809.20" y="1039.5" >cfunction_vec..</text>
</g>
<g >
<title>pyo3::gil::GILGuard::assume (49,478,900 samples, 0.36%)</title><rect x="895.0" y="917" width="4.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="897.96" y="927.5" ></text>
</g>
<g >
<title>object_vacall (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="917" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.82" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="693" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1142.92" y="703.5" ></text>
</g>
<g >
<title>gc_visit_heaps (8,996,448 samples, 0.07%)</title><rect x="316.8" y="1141" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="319.78" y="1151.5" ></text>
</g>
<g >
<title>mi_heap_visit_pages (4,508,963 samples, 0.03%)</title><rect x="319.6" y="1093" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="322.58" y="1103.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="901" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1161.44" y="911.5" ></text>
</g>
<g >
<title>import_find_and_load (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1141" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1161.44" y="1151.5" ></text>
</g>
<g >
<title>mi_page_extend_free (4,450,819 samples, 0.03%)</title><rect x="25.4" y="277" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="28.44" y="287.5" ></text>
</g>
<g >
<title>import_find_and_load (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="949" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1161.82" y="959.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint32_relaxed (4,497,974 samples, 0.03%)</title><rect x="317.2" y="981" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="320.17" y="991.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (53,979,406 samples, 0.39%)</title><rect x="65.6" y="1285" width="4.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="68.65" y="1295.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint32_relaxed (35,983,508 samples, 0.26%)</title><rect x="727.1" y="997" width="3.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="730.09" y="1007.5" ></text>
</g>
<g >
<title>lookup_tp_dict (13,494,688 samples, 0.10%)</title><rect x="97.3" y="1269" width="1.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="100.29" y="1279.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="709" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1161.82" y="719.5" ></text>
</g>
<g >
<title>do_lookup (4,063,892 samples, 0.03%)</title><rect x="49.1" y="117" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="52.09" y="127.5" ></text>
</g>
<g >
<title>PyNumber_InPlaceAdd (44,981,140 samples, 0.33%)</title><rect x="27.7" y="1301" width="3.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="30.73" y="1311.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (49,258,000 samples, 0.36%)</title><rect x="1116.1" y="869" width="4.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1119.08" y="879.5" ></text>
</g>
<g >
<title>PyImport_ImportFrozenModule (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="1109" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1136.39" y="1119.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="837" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1122.93" y="847.5" ></text>
</g>
<g >
<title>mi_block_set_next (4,450,819 samples, 0.03%)</title><rect x="25.4" y="245" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="28.44" y="255.5" ></text>
</g>
<g >
<title>import_name (13,304,576 samples, 0.10%)</title><rect x="26.6" y="741" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="29.59" y="751.5" ></text>
</g>
<g >
<title>insertdict (76,471,129 samples, 0.56%)</title><rect x="1151.9" y="1301" width="6.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1154.88" y="1311.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1173" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="164.73" y="1183.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,450,819 samples, 0.03%)</title><rect x="25.4" y="789" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="28.44" y="799.5" ></text>
</g>
<g >
<title>pyinit_main (12,707,587 samples, 0.09%)</title><rect x="1133.7" y="1189" width="1.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1136.75" y="1199.5" ></text>
</g>
<g >
<title>_PyObject_MiFree (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="117" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1142.92" y="127.5" ></text>
</g>
<g >
<title>mi_find_page (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="869" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1137.01" y="879.5" ></text>
</g>
<g >
<title>PyObject_GenericGetAttr (4,477,690 samples, 0.03%)</title><rect x="31.6" y="501" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="34.59" y="511.5" ></text>
</g>
<g >
<title>_PyCode_New (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="501" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1161.82" y="511.5" ></text>
</g>
<g >
<title>_PyObject_MiMalloc (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="421" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1161.82" y="431.5" ></text>
</g>
<g >
<title>PyObject_IsTrue (31,487,233 samples, 0.23%)</title><rect x="783.0" y="1061" width="2.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="786.05" y="1071.5" ></text>
</g>
<g >
<title>filemap_read (4,453,660 samples, 0.03%)</title><rect x="32.0" y="229" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="34.97" y="239.5" ></text>
</g>
<g >
<title>mi_block_nextx (4,440,989 samples, 0.03%)</title><rect x="164.4" y="85" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="167.39" y="95.5" ></text>
</g>
<g >
<title>Py_BytesMain (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1301" width="0.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="46.91" y="1311.5" ></text>
</g>
<g >
<title>builtin___import___impl (4,475,328 samples, 0.03%)</title><rect x="33.1" y="645" width="0.4" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="36.11" y="655.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,478,886 samples, 0.03%)</title><rect x="201.8" y="789" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="204.81" y="799.5" ></text>
</g>
<g >
<title>benchlib_pyo3::&lt;impl benchlib_pyo3::py_return_int::MakeDef&gt;::_PYO3_DEF::trampoline (17,991,683 samples, 0.13%)</title><rect x="1136.4" y="1301" width="1.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1139.45" y="1311.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,063,892 samples, 0.03%)</title><rect x="49.1" y="597" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="52.09" y="607.5" ></text>
</g>
<g >
<title>import_name (8,909,404 samples, 0.06%)</title><rect x="162.1" y="869" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="165.12" y="879.5" ></text>
</g>
<g >
<title>pyinit_core (4,194,608 samples, 0.03%)</title><rect x="1133.4" y="1189" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1136.39" y="1199.5" ></text>
</g>
<g >
<title>dictkeys_get_index (35,983,937 samples, 0.26%)</title><rect x="663.0" y="949" width="3.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="666.03" y="959.5" ></text>
</g>
<g >
<title>method_vectorcall (4,433,858 samples, 0.03%)</title><rect x="162.1" y="533" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="165.12" y="543.5" ></text>
</g>
<g >
<title>object_vacall (4,440,989 samples, 0.03%)</title><rect x="164.4" y="709" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="167.39" y="719.5" ></text>
</g>
<g >
<title>_Py_atomic_load_int8_relaxed (4,497,952 samples, 0.03%)</title><rect x="1099.5" y="949" width="0.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1102.49" y="959.5" ></text>
</g>
<g >
<title>Py_INCREF (44,982,281 samples, 0.33%)</title><rect x="766.1" y="997" width="3.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="769.07" y="1007.5" ></text>
</g>
<g >
<title>builtin_exec_impl (13,386,853 samples, 0.10%)</title><rect x="33.1" y="821" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="36.11" y="831.5" ></text>
</g>
<g >
<title>builtin___import___impl (4,472,337 samples, 0.03%)</title><rect x="164.0" y="1157" width="0.4" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="167.01" y="1167.5" ></text>
</g>
<g >
<title>tp_new_wrapper (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="613" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1142.92" y="623.5" ></text>
</g>
<g >
<title>gc_collect_main (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="549" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1135.63" y="559.5" ></text>
</g>
<g >
<title>_Py_DecRefSharedIsDead (4,503,688 samples, 0.03%)</title><rect x="320.0" y="1109" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="322.97" y="1119.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,931,350 samples, 0.06%)</title><rect x="31.6" y="549" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="34.59" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,383,060 samples, 0.03%)</title><rect x="32.7" y="661" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.74" y="671.5" ></text>
</g>
<g >
<title>_PyObject_TryGetInstanceAttribute (26,988,621 samples, 0.20%)</title><rect x="90.3" y="1285" width="2.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="93.34" y="1295.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,239,150 samples, 0.03%)</title><rect x="162.9" y="677" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="165.88" y="687.5" ></text>
</g>
<g >
<title>object_vacall (4,478,886 samples, 0.03%)</title><rect x="201.8" y="805" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="204.81" y="815.5" ></text>
</g>
<g >
<title>builtin___import__ (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1269" width="0.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="165.12" y="1279.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (8,931,350 samples, 0.06%)</title><rect x="31.6" y="901" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="34.59" y="911.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (8,931,350 samples, 0.06%)</title><rect x="31.6" y="709" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="34.59" y="719.5" ></text>
</g>
<g >
<title>_Py_qsbr_quiescent_state (53,976,873 samples, 0.39%)</title><rect x="1127.3" y="1061" width="4.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1130.25" y="1071.5" ></text>
</g>
<g >
<title>[python3.13] (364,359,750 samples, 2.65%)</title><rect x="49.4" y="1301" width="31.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="52.44" y="1311.5" >[p..</text>
</g>
<g >
<title>import_name (13,304,576 samples, 0.10%)</title><rect x="26.6" y="1125" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="29.59" y="1135.5" ></text>
</g>
<g >
<title>mi_heap_visit_blocks (4,470,482 samples, 0.03%)</title><rect x="26.6" y="533" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="29.59" y="543.5" ></text>
</g>
<g >
<title>import_find_and_load (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1077" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1162.19" y="1087.5" ></text>
</g>
<g >
<title>_PyObject_GC_NewVar (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="485" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1161.82" y="495.5" ></text>
</g>
<g >
<title>import_name (22,244,792 samples, 0.16%)</title><rect x="32.4" y="1157" width="1.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="35.35" y="1167.5" ></text>
</g>
<g >
<title>{closure#0}&lt;pyo3::impl_::trampoline::noargs::{closure_env#0}, *mut pyo3_ffi::object::PyObject&gt; (31,486,934 samples, 0.23%)</title><rect x="116.6" y="1221" width="2.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="119.58" y="1231.5" ></text>
</g>
<g >
<title>gc_visit_heaps (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="965" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1136.39" y="975.5" ></text>
</g>
<g >
<title>decrement_gil_count (80,966,163 samples, 0.59%)</title><rect x="908.5" y="933" width="6.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="911.47" y="943.5" ></text>
</g>
<g >
<title>import_find_and_load (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1205" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1142.92" y="1215.5" ></text>
</g>
<g >
<title>slot_tp_init (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="805" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1122.93" y="815.5" ></text>
</g>
<g >
<title>py_get_system_clock (8,996,360 samples, 0.07%)</title><rect x="111.6" y="1285" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="114.57" y="1295.5" ></text>
</g>
<g >
<title>_Py_atomic_load_int16_relaxed (4,477,879 samples, 0.03%)</title><rect x="26.2" y="357" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="29.20" y="367.5" ></text>
</g>
<g >
<title>run_mod (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1269" width="0.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="204.81" y="1279.5" ></text>
</g>
<g >
<title>cfunction_enter_call (26,987,480 samples, 0.20%)</title><rect x="811.2" y="1013" width="2.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="814.22" y="1023.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4,450,819 samples, 0.03%)</title><rect x="25.4" y="149" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="28.44" y="159.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1157" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1142.92" y="1167.5" ></text>
</g>
<g >
<title>do_lookup (287,872,924 samples, 2.09%)</title><rect x="1044.7" y="917" width="24.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1047.69" y="927.5" >d..</text>
</g>
<g >
<title>object_vacall (4,463,125 samples, 0.03%)</title><rect x="33.9" y="517" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="36.88" y="527.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,477,879 samples, 0.03%)</title><rect x="26.2" y="645" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="29.20" y="655.5" ></text>
</g>
<g >
<title>builtin_exec (8,931,350 samples, 0.06%)</title><rect x="31.6" y="693" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="34.59" y="703.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="293" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1135.63" y="303.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,936,670 samples, 0.06%)</title><rect x="43.9" y="885" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="46.91" y="895.5" ></text>
</g>
<g >
<title>Py_INCREF (40,479,650 samples, 0.29%)</title><rect x="1070.5" y="981" width="3.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1073.55" y="991.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,475,328 samples, 0.03%)</title><rect x="33.1" y="709" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="36.11" y="719.5" ></text>
</g>
<g >
<title>drop_in_place&lt;pyo3::gil::GILGuard&gt; (26,987,180 samples, 0.20%)</title><rect x="119.3" y="1269" width="2.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="122.29" y="1279.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="549" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1122.93" y="559.5" ></text>
</g>
<g >
<title>builtin_exec (22,244,792 samples, 0.16%)</title><rect x="32.4" y="1221" width="1.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="35.35" y="1231.5" ></text>
</g>
<g >
<title>_PyRun_StringFlagsWithName (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="549" width="1.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1120.24" y="559.5" ></text>
</g>
<g >
<title>update_refs (4,496,781 samples, 0.03%)</title><rect x="318.8" y="1013" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="321.81" y="1023.5" ></text>
</g>
<g >
<title>_Py_atomic_load_ssize_relaxed (4,492,904 samples, 0.03%)</title><rect x="43.9" y="325" width="0.4" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="46.91" y="335.5" ></text>
</g>
<g >
<title>mi_heap_visit_pages (8,996,448 samples, 0.07%)</title><rect x="316.8" y="1077" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="319.78" y="1087.5" ></text>
</g>
<g >
<title>_PyFrame_ClearLocals (4,482,849 samples, 0.03%)</title><rect x="1118.4" y="581" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1121.39" y="591.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="917" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1136.39" y="927.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="645" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1162.19" y="655.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="853" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1135.63" y="863.5" ></text>
</g>
<g >
<title>r_object (4,492,904 samples, 0.03%)</title><rect x="43.9" y="517" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="46.91" y="527.5" ></text>
</g>
<g >
<title>_PyBytes_FromSize (4,440,989 samples, 0.03%)</title><rect x="164.4" y="229" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="167.39" y="239.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="677" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1162.19" y="687.5" ></text>
</g>
<g >
<title>builtin___import__ (4,475,328 samples, 0.03%)</title><rect x="33.1" y="661" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="36.11" y="671.5" ></text>
</g>
<g >
<title>import_name (4,477,879 samples, 0.03%)</title><rect x="26.2" y="981" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="29.20" y="991.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,440,989 samples, 0.03%)</title><rect x="164.4" y="1077" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="167.39" y="1087.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,455,522 samples, 0.03%)</title><rect x="163.6" y="549" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="166.62" y="559.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="901" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1142.92" y="911.5" ></text>
</g>
<g >
<title>update_one_slot (4,475,546 samples, 0.03%)</title><rect x="162.5" y="293" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="165.50" y="303.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,415,815 samples, 0.03%)</title><rect x="1133.0" y="437" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1136.01" y="447.5" ></text>
</g>
<g >
<title>_PyFrame_ClearExceptCode (89,953,093 samples, 0.65%)</title><rect x="985.6" y="1029" width="7.8" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="988.65" y="1039.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,474,879 samples, 0.03%)</title><rect x="32.4" y="1125" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="35.35" y="1135.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4,481,255 samples, 0.03%)</title><rect x="25.8" y="357" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="28.82" y="367.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas_page (4,508,963 samples, 0.03%)</title><rect x="319.6" y="1077" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="322.58" y="1087.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,472,337 samples, 0.03%)</title><rect x="164.0" y="869" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.01" y="879.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (274,382,881 samples, 1.99%)</title><rect x="706.6" y="1029" width="23.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="709.64" y="1039.5" >_..</text>
</g>
<g >
<title>PyObject_Vectorcall (4,433,858 samples, 0.03%)</title><rect x="162.1" y="405" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="165.12" y="415.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (22,244,792 samples, 0.16%)</title><rect x="32.4" y="1141" width="1.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="35.35" y="1151.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,440,989 samples, 0.03%)</title><rect x="164.4" y="581" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="167.39" y="591.5" ></text>
</g>
<g >
<title>_PyBytes_FromSize (4,474,879 samples, 0.03%)</title><rect x="32.4" y="517" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="35.35" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,477,879 samples, 0.03%)</title><rect x="26.2" y="885" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="29.20" y="895.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,383,060 samples, 0.03%)</title><rect x="32.7" y="741" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.74" y="751.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,239,150 samples, 0.03%)</title><rect x="162.9" y="709" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="165.88" y="719.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,478,886 samples, 0.03%)</title><rect x="201.8" y="389" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="204.81" y="399.5" ></text>
</g>
<g >
<title>_Py_atomic_compare_exchange_uint8 (98,958,736 samples, 0.72%)</title><rect x="597.0" y="997" width="8.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="600.04" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1093" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="28.82" y="1103.5" ></text>
</g>
<g >
<title>intern_common (4,477,879 samples, 0.03%)</title><rect x="26.2" y="485" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="29.20" y="495.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1125" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1161.44" y="1135.5" ></text>
</g>
<g >
<title>mi_block_set_nextx (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="677" width="0.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="1136.75" y="687.5" ></text>
</g>
<g >
<title>_Py_object_freelists_GET (17,992,372 samples, 0.13%)</title><rect x="881.8" y="949" width="1.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="884.84" y="959.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1125" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1142.92" y="1135.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,443,766 samples, 0.03%)</title><rect x="44.3" y="661" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="47.29" y="671.5" ></text>
</g>
<g >
<title>_Py_dict_lookup_threadsafe (4,479,687 samples, 0.03%)</title><rect x="1119.5" y="533" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1122.54" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (12,986,526 samples, 0.09%)</title><rect x="1132.3" y="965" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1135.27" y="975.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4,481,255 samples, 0.03%)</title><rect x="25.8" y="341" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="28.82" y="351.5" ></text>
</g>
<g >
<title>_Py_HandlePending (4,472,337 samples, 0.03%)</title><rect x="164.0" y="661" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="167.01" y="671.5" ></text>
</g>
<g >
<title>visit_clear_unreachable (4,498,474 samples, 0.03%)</title><rect x="316.8" y="965" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="319.78" y="975.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,450,819 samples, 0.03%)</title><rect x="25.4" y="677" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="28.44" y="687.5" ></text>
</g>
<g >
<title>_Py_atomic_store_uint32_relaxed (4,463,125 samples, 0.03%)</title><rect x="33.9" y="421" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="36.88" y="431.5" ></text>
</g>
<g >
<title>update_refs (4,470,666 samples, 0.03%)</title><rect x="1119.2" y="437" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1122.16" y="447.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="709" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1142.92" y="719.5" ></text>
</g>
<g >
<title>object_vacall (4,450,819 samples, 0.03%)</title><rect x="25.4" y="837" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.44" y="847.5" ></text>
</g>
<g >
<title>PyDict_SetItem (4,443,766 samples, 0.03%)</title><rect x="44.3" y="389" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="47.29" y="399.5" ></text>
</g>
<g >
<title>mi_heap_visit_blocks (4,508,963 samples, 0.03%)</title><rect x="319.6" y="1125" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="322.58" y="1135.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="757" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1122.93" y="767.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1093" width="1.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="165.88" y="1103.5" ></text>
</g>
<g >
<title>object_vacall (12,986,526 samples, 0.09%)</title><rect x="1132.3" y="997" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1135.27" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="485" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1120.24" y="495.5" ></text>
</g>
<g >
<title>unicode_get_hash (4,492,904 samples, 0.03%)</title><rect x="43.9" y="341" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="46.91" y="351.5" ></text>
</g>
<g >
<title>managed_static_type_state_get (17,991,080 samples, 0.13%)</title><rect x="1077.1" y="917" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1080.11" y="927.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint32_relaxed (22,490,804 samples, 0.16%)</title><rect x="780.3" y="981" width="2.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="783.35" y="991.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (12,986,526 samples, 0.09%)</title><rect x="1132.3" y="981" width="1.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1135.27" y="991.5" ></text>
</g>
<g >
<title>find_name_in_mro (4,475,546 samples, 0.03%)</title><rect x="162.5" y="277" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="165.50" y="287.5" ></text>
</g>
<g >
<title>object_vacall (4,474,486 samples, 0.03%)</title><rect x="27.3" y="485" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="30.34" y="495.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,450,819 samples, 0.03%)</title><rect x="25.4" y="965" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="28.44" y="975.5" ></text>
</g>
<g >
<title>decrement_gil_count (22,490,608 samples, 0.16%)</title><rect x="11.9" y="1285" width="2.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="14.93" y="1295.5" ></text>
</g>
<g >
<title>object_vacall (4,472,337 samples, 0.03%)</title><rect x="164.0" y="901" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="167.01" y="911.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,477,690 samples, 0.03%)</title><rect x="31.6" y="453" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="34.59" y="463.5" ></text>
</g>
<g >
<title>sre_match (8,976,892 samples, 0.07%)</title><rect x="1116.1" y="661" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1119.08" y="671.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4,498,486 samples, 0.03%)</title><rect x="672.7" y="981" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="675.68" y="991.5" ></text>
</g>
<g >
<title>lambda_param_no_default_rule (4,440,989 samples, 0.03%)</title><rect x="164.4" y="309" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="167.39" y="319.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,909,404 samples, 0.06%)</title><rect x="162.1" y="597" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="165.12" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,472,337 samples, 0.03%)</title><rect x="164.0" y="1205" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.01" y="1215.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,909,404 samples, 0.06%)</title><rect x="162.1" y="773" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.12" y="783.5" ></text>
</g>
<g >
<title>op_from_block (4,508,963 samples, 0.03%)</title><rect x="319.6" y="1013" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="322.58" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="597" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1135.63" y="607.5" ></text>
</g>
<g >
<title>builtin_exec (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1061" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="28.82" y="1071.5" ></text>
</g>
<g >
<title>_PyType_IsReady (26,989,559 samples, 0.20%)</title><rect x="772.2" y="997" width="2.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="775.24" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="373" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1120.24" y="383.5" ></text>
</g>
<g >
<title>update_one_slot (4,377,767 samples, 0.03%)</title><rect x="163.2" y="325" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="166.25" y="335.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (58,476,299 samples, 0.43%)</title><rect x="35.8" y="1301" width="5.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="38.80" y="1311.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,497,468 samples, 0.03%)</title><rect x="666.1" y="981" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="669.12" y="991.5" ></text>
</g>
<g >
<title>pyrun_file (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1285" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="204.81" y="1295.5" ></text>
</g>
<g >
<title>pymain_main (16,902,195 samples, 0.12%)</title><rect x="1133.4" y="1237" width="1.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1136.39" y="1247.5" ></text>
</g>
<g >
<title>kmem_cache_free (4,475,546 samples, 0.03%)</title><rect x="162.5" y="69" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="165.50" y="79.5" ></text>
</g>
<g >
<title>_PyPegen_run_parser (4,440,989 samples, 0.03%)</title><rect x="164.4" y="469" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="167.39" y="479.5" ></text>
</g>
<g >
<title>_PyType_FromMetaclass_impl (1,796,000 samples, 0.01%)</title><rect x="1133.6" y="1093" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1136.59" y="1103.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="629" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1135.63" y="639.5" ></text>
</g>
<g >
<title>builtin___build_class__ (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="805" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1142.92" y="815.5" ></text>
</g>
<g >
<title>import_find_and_load (4,383,060 samples, 0.03%)</title><rect x="32.7" y="613" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="35.74" y="623.5" ></text>
</g>
<g >
<title>builtin___import___impl (4,440,989 samples, 0.03%)</title><rect x="164.4" y="965" width="0.4" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="167.39" y="975.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="997" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1137.24" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1029" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.88" y="1039.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (17,769,913 samples, 0.13%)</title><rect x="32.7" y="1061" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.74" y="1071.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1173" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="165.12" y="1183.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="965" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1142.92" y="975.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,415,815 samples, 0.03%)</title><rect x="1133.0" y="533" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1136.01" y="543.5" ></text>
</g>
<g >
<title>Py_INCREF (17,993,240 samples, 0.13%)</title><rect x="710.9" y="1013" width="1.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="713.89" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,478,886 samples, 0.03%)</title><rect x="201.8" y="453" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="204.81" y="463.5" ></text>
</g>
<g >
<title>pyo3::conversions::std::num::&lt;impl pyo3::conversion::IntoPyObject for i32&gt;::into_pyobject (4,498,252 samples, 0.03%)</title><rect x="782.3" y="981" width="0.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="785.28" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,931,350 samples, 0.06%)</title><rect x="31.6" y="533" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="34.59" y="543.5" ></text>
</g>
<g >
<title>unmarshal_frozen_code (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="501" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1162.19" y="511.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1077" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="28.82" y="1087.5" ></text>
</g>
<g >
<title>set_contains_key (4,454,646 samples, 0.03%)</title><rect x="243.1" y="1269" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="246.08" y="1279.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,304,576 samples, 0.10%)</title><rect x="26.6" y="645" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="29.59" y="655.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,063,892 samples, 0.03%)</title><rect x="49.1" y="837" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="52.09" y="847.5" ></text>
</g>
<g >
<title>PyImport_ImportFrozenModuleObject (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="1093" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1136.39" y="1103.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (49,258,000 samples, 0.36%)</title><rect x="1116.1" y="949" width="4.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1119.08" y="959.5" ></text>
</g>
<g >
<title>mark_reachable (4,472,337 samples, 0.03%)</title><rect x="164.0" y="453" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="167.01" y="463.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="821" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1142.92" y="831.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1205" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="204.81" y="1215.5" ></text>
</g>
<g >
<title>_PyList_AppendTakeRefListResize (4,433,858 samples, 0.03%)</title><rect x="162.1" y="309" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="165.12" y="319.5" ></text>
</g>
<g >
<title>r_object (4,492,904 samples, 0.03%)</title><rect x="43.9" y="565" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="46.91" y="575.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="981" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1162.19" y="991.5" ></text>
</g>
<g >
<title>visit_decref (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="437" width="0.4" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1161.44" y="447.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,985,509 samples, 0.01%)</title><rect x="45.4" y="1301" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="48.45" y="1311.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,478,886 samples, 0.03%)</title><rect x="201.8" y="469" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="204.81" y="479.5" ></text>
</g>
<g >
<title>_PyLong_CompactValue (58,475,622 samples, 0.43%)</title><rect x="694.7" y="981" width="5.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="697.68" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,383,060 samples, 0.03%)</title><rect x="32.7" y="933" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="35.74" y="943.5" ></text>
</g>
<g >
<title>mi_block_set_nextx (4,474,879 samples, 0.03%)</title><rect x="32.4" y="341" width="0.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="35.35" y="351.5" ></text>
</g>
<g >
<title>Py_XDECREF (17,993,645 samples, 0.13%)</title><rect x="1156.1" y="1285" width="1.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1159.12" y="1295.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,415,815 samples, 0.03%)</title><rect x="1133.0" y="565" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1136.01" y="575.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,485,429 samples, 0.03%)</title><rect x="161.7" y="853" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="164.73" y="863.5" ></text>
</g>
<g >
<title>dict_traverse (4,979,668 samples, 0.04%)</title><rect x="318.4" y="1013" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="321.38" y="1023.5" ></text>
</g>
<g >
<title>PyCell_GetRef (4,455,522 samples, 0.03%)</title><rect x="163.6" y="437" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="166.62" y="447.5" ></text>
</g>
<g >
<title>exc_page_fault (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="741" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1137.01" y="751.5" ></text>
</g>
<g >
<title>_Py_TryXGetRef (4,498,434 samples, 0.03%)</title><rect x="752.6" y="949" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="755.56" y="959.5" ></text>
</g>
<g >
<title>cfunction_call (4,377,767 samples, 0.03%)</title><rect x="163.2" y="405" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="166.25" y="415.5" ></text>
</g>
<g >
<title>_Py_atomic_store_uint32_relaxed (148,431,495 samples, 1.08%)</title><rect x="940.1" y="1045" width="12.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="943.11" y="1055.5" ></text>
</g>
<g >
<title>gc_visit_heaps_lock_held (4,508,963 samples, 0.03%)</title><rect x="319.6" y="1141" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="322.58" y="1151.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas_page (4,470,482 samples, 0.03%)</title><rect x="26.6" y="485" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="29.59" y="495.5" ></text>
</g>
<g >
<title>object_vacall (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1269" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.82" y="1279.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (17,769,913 samples, 0.13%)</title><rect x="32.7" y="981" width="1.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.74" y="991.5" ></text>
</g>
<g >
<title>builtin_exec_impl (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="565" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1120.24" y="575.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1285" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="164.73" y="1295.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="837" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1137.24" y="847.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="949" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1137.53" y="959.5" ></text>
</g>
<g >
<title>r_object (4,477,879 samples, 0.03%)</title><rect x="26.2" y="581" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="29.20" y="591.5" ></text>
</g>
<g >
<title>_PyErr_WarnFormatV (4,478,886 samples, 0.03%)</title><rect x="201.8" y="677" width="0.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="204.81" y="687.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (13,072,439 samples, 0.10%)</title><rect x="162.9" y="997" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="165.88" y="1007.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,063,892 samples, 0.03%)</title><rect x="49.1" y="405" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="52.09" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1109" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="204.81" y="1119.5" ></text>
</g>
<g >
<title>builtin_exec (13,072,439 samples, 0.10%)</title><rect x="162.9" y="885" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="165.88" y="895.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="677" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1161.82" y="687.5" ></text>
</g>
<g >
<title>marshal_loads_impl (4,474,879 samples, 0.03%)</title><rect x="32.4" y="661" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="35.35" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,455,522 samples, 0.03%)</title><rect x="163.6" y="581" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="166.62" y="591.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,485,429 samples, 0.03%)</title><rect x="161.7" y="981" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="164.73" y="991.5" ></text>
</g>
<g >
<title>tick_nohz_handler (4,481,255 samples, 0.03%)</title><rect x="25.8" y="293" width="0.4" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="28.82" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4,498,092 samples, 0.03%)</title><rect x="803.5" y="949" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="806.50" y="959.5" ></text>
</g>
<g >
<title>gc_visit_heaps_lock_held (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="485" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1135.63" y="495.5" ></text>
</g>
<g >
<title>_PyFrame_ClearExceptCode (31,485,432 samples, 0.23%)</title><rect x="206.8" y="1285" width="2.7" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="209.83" y="1295.5" ></text>
</g>
<g >
<title>slot_tp_init (4,478,886 samples, 0.03%)</title><rect x="201.8" y="949" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="204.81" y="959.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint32_relaxed (31,487,974 samples, 0.23%)</title><rect x="967.1" y="997" width="2.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="970.12" y="1007.5" ></text>
</g>
<g >
<title>update_refs (4,508,963 samples, 0.03%)</title><rect x="319.6" y="1029" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="322.58" y="1039.5" ></text>
</g>
<g >
<title>_PyTypes_InitTypes (1,796,000 samples, 0.01%)</title><rect x="1133.6" y="1125" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1136.59" y="1135.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,359,608 samples, 0.03%)</title><rect x="27.0" y="485" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="29.97" y="495.5" ></text>
</g>
<g >
<title>builtin___import___impl (4,477,879 samples, 0.03%)</title><rect x="26.2" y="1173" width="0.4" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="29.20" y="1183.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,440,989 samples, 0.03%)</title><rect x="164.4" y="885" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="167.39" y="895.5" ></text>
</g>
<g >
<title>_Py_HandlePending (8,946,758 samples, 0.07%)</title><rect x="1118.8" y="629" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1121.77" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="693" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1135.63" y="703.5" ></text>
</g>
<g >
<title>pyo3::gil::GILGuard::assume (8,995,473 samples, 0.07%)</title><rect x="1135.7" y="1237" width="0.7" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1138.68" y="1247.5" ></text>
</g>
<g >
<title>long_dealloc (53,977,602 samples, 0.39%)</title><rect x="632.2" y="965" width="4.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="635.16" y="975.5" ></text>
</g>
<g >
<title>_PyUnicode_COMPACT_DATA (4,498,421 samples, 0.03%)</title><rect x="1059.7" y="853" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1062.74" y="863.5" ></text>
</g>
<g >
<title>gc_collect_main (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="1013" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1136.39" y="1023.5" ></text>
</g>
<g >
<title>dictresize (4,477,879 samples, 0.03%)</title><rect x="26.2" y="405" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="29.20" y="415.5" ></text>
</g>
<g >
<title>_Py_atomic_load_ptr_relaxed (4,485,429 samples, 0.03%)</title><rect x="161.7" y="277" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="164.73" y="287.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas (4,472,337 samples, 0.03%)</title><rect x="164.0" y="549" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="167.01" y="559.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,474,879 samples, 0.03%)</title><rect x="32.4" y="885" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="35.35" y="895.5" ></text>
</g>
<g >
<title>bytes_decode_impl (4,063,892 samples, 0.03%)</title><rect x="49.1" y="773" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="52.09" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="725" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1137.24" y="735.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,440,989 samples, 0.03%)</title><rect x="164.4" y="677" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.39" y="687.5" ></text>
</g>
<g >
<title>_Py_TryIncrefCompare (4,498,434 samples, 0.03%)</title><rect x="752.6" y="933" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="755.56" y="943.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (89,964,182 samples, 0.65%)</title><rect x="192.2" y="1301" width="7.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="195.17" y="1311.5" ></text>
</g>
<g >
<title>_Py_hashtable_get_entry (4,481,255 samples, 0.03%)</title><rect x="25.8" y="453" width="0.4" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="28.82" y="463.5" ></text>
</g>
<g >
<title>_io_FileIO___init___impl (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="645" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1135.27" y="655.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1157" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="28.44" y="1167.5" ></text>
</g>
<g >
<title>pyo3::gil::GILGuard::assume (35,985,219 samples, 0.26%)</title><rect x="896.1" y="901" width="3.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="899.12" y="911.5" ></text>
</g>
<g >
<title>import_name (4,478,886 samples, 0.03%)</title><rect x="201.8" y="549" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="204.81" y="559.5" ></text>
</g>
<g >
<title>_Py_TryIncref (17,992,303 samples, 0.13%)</title><rect x="1113.0" y="1029" width="1.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1116.00" y="1039.5" ></text>
</g>
<g >
<title>_imp_get_frozen_object (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="693" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1137.24" y="703.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="629" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1122.93" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1285" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="28.82" y="1295.5" ></text>
</g>
<g >
<title>_Py_dict_lookup_threadsafe (508,275,235 samples, 3.70%)</title><rect x="260.8" y="1301" width="43.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="263.82" y="1311.5" >_Py_..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,911,525 samples, 0.06%)</title><rect x="33.5" y="693" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="36.50" y="703.5" ></text>
</g>
<g >
<title>mi_page_free_list_extend (4,450,819 samples, 0.03%)</title><rect x="25.4" y="261" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="28.44" y="271.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,450,819 samples, 0.03%)</title><rect x="25.4" y="709" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="28.44" y="719.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (8,931,350 samples, 0.06%)</title><rect x="31.6" y="1157" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="34.59" y="1167.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,474,486 samples, 0.03%)</title><rect x="27.3" y="501" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="30.34" y="511.5" ></text>
</g>
<g >
<title>run_eval_code_obj (4,485,429 samples, 0.03%)</title><rect x="161.7" y="741" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="164.73" y="751.5" ></text>
</g>
<g >
<title>update_process_times (4,498,092 samples, 0.03%)</title><rect x="803.5" y="917" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="806.50" y="927.5" ></text>
</g>
<g >
<title>_mi_heap_area_visit_blocks (8,946,758 samples, 0.07%)</title><rect x="1118.8" y="453" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1121.77" y="463.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1029" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="46.91" y="1039.5" ></text>
</g>
<g >
<title>_PyUnicode_InternImmortal (4,485,429 samples, 0.03%)</title><rect x="161.7" y="405" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="164.73" y="415.5" ></text>
</g>
<g >
<title>_Py_dict_lookup_threadsafe (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="901" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1137.53" y="911.5" ></text>
</g>
<g >
<title>_PyStaticType_GetState (8,995,576 samples, 0.07%)</title><rect x="1103.3" y="997" width="0.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1106.35" y="1007.5" ></text>
</g>
<g >
<title>pymain_init (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1301" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1162.19" y="1311.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallDictTstate (4,485,429 samples, 0.03%)</title><rect x="161.7" y="901" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="164.73" y="911.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,477,879 samples, 0.03%)</title><rect x="26.2" y="1157" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="29.20" y="1167.5" ></text>
</g>
<g >
<title>slot_tp_init (49,258,000 samples, 0.36%)</title><rect x="1116.1" y="1029" width="4.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1119.08" y="1039.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,481,255 samples, 0.03%)</title><rect x="25.8" y="757" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="28.82" y="767.5" ></text>
</g>
<g >
<title>import_find_and_load (4,481,255 samples, 0.03%)</title><rect x="25.8" y="965" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="28.82" y="975.5" ></text>
</g>
<g >
<title>gc_collect_main (4,448,400 samples, 0.03%)</title><rect x="33.5" y="645" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="36.50" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="1109" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1137.53" y="1119.5" ></text>
</g>
<g >
<title>gc_collect_internal (4,979,668 samples, 0.04%)</title><rect x="318.4" y="1157" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="321.38" y="1167.5" ></text>
</g>
<g >
<title>_mi_page_free_collect (8,996,330 samples, 0.07%)</title><rect x="692.4" y="949" width="0.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="695.36" y="959.5" ></text>
</g>
<g >
<title>pyinit_main (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1269" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1162.19" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,453,660 samples, 0.03%)</title><rect x="32.0" y="277" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="34.97" y="287.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,304,576 samples, 0.10%)</title><rect x="26.6" y="949" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="29.59" y="959.5" ></text>
</g>
<g >
<title>tp_new_wrapper (4,377,767 samples, 0.03%)</title><rect x="163.2" y="389" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="166.25" y="399.5" ></text>
</g>
<g >
<title>long_add (116,948,994 samples, 0.85%)</title><rect x="693.1" y="1013" width="10.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="696.13" y="1023.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_unicode (22,490,270 samples, 0.16%)</title><rect x="235.8" y="1285" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="238.75" y="1295.5" ></text>
</g>
<g >
<title>insertion_resize (4,477,879 samples, 0.03%)</title><rect x="26.2" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="29.20" y="431.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,481,255 samples, 0.03%)</title><rect x="25.8" y="693" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="28.82" y="703.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,440,989 samples, 0.03%)</title><rect x="164.4" y="1125" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="167.39" y="1135.5" ></text>
</g>
<g >
<title>sync_regs (4,498,274 samples, 0.03%)</title><rect x="1086.8" y="997" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1089.75" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,450,819 samples, 0.03%)</title><rect x="25.4" y="581" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="28.44" y="591.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas_page (4,448,400 samples, 0.03%)</title><rect x="33.5" y="517" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="36.50" y="527.5" ></text>
</g>
<g >
<title>list_append_impl (4,433,858 samples, 0.03%)</title><rect x="162.1" y="341" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="165.12" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_handler (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="245" width="0.4" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1135.63" y="255.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (13,072,439 samples, 0.10%)</title><rect x="162.9" y="965" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="165.88" y="975.5" ></text>
</g>
<g >
<title>builtin_exec (8,909,404 samples, 0.06%)</title><rect x="162.1" y="741" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="165.12" y="751.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,909,404 samples, 0.06%)</title><rect x="162.1" y="965" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.12" y="975.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (4,359,608 samples, 0.03%)</title><rect x="27.0" y="277" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="29.97" y="287.5" ></text>
</g>
<g >
<title>_PyFrame_ClearLocals (40,484,969 samples, 0.29%)</title><rect x="989.9" y="1013" width="3.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="992.89" y="1023.5" ></text>
</g>
<g >
<title>try&lt;core::result::Result&lt;*mut pyo3_ffi::object::PyObject, pyo3::err::PyErr&gt;, pyo3::impl_::trampoline::trampoline::{closure_env#0}&lt;pyo3::impl_::trampoline::noargs::{closure_env#0}, *mut pyo3_ffi::object::PyObject&gt;&gt; (49,480,116 samples, 0.36%)</title><rect x="899.2" y="949" width="4.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="902.21" y="959.5" ></text>
</g>
<g >
<title>PyBool_FromLong (4,497,980 samples, 0.03%)</title><rect x="13.9" y="1301" width="0.3" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="16.86" y="1311.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (13,386,853 samples, 0.10%)</title><rect x="33.1" y="853" width="1.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="36.11" y="863.5" ></text>
</g>
<g >
<title>mi_page_queue_find_free_ex (4,474,879 samples, 0.03%)</title><rect x="32.4" y="453" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="35.35" y="463.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,479,687 samples, 0.03%)</title><rect x="1119.5" y="581" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1122.54" y="591.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,474,879 samples, 0.03%)</title><rect x="32.4" y="1093" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="35.35" y="1103.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="933" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1137.53" y="943.5" ></text>
</g>
<g >
<title>clock_gettime (22,487,773 samples, 0.16%)</title><rect x="109.6" y="1285" width="2.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="112.64" y="1295.5" ></text>
</g>
<g >
<title>mi_find_page (4,359,608 samples, 0.03%)</title><rect x="27.0" y="389" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="29.97" y="399.5" ></text>
</g>
<g >
<title>init_interp_main (12,707,587 samples, 0.09%)</title><rect x="1133.7" y="1173" width="1.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1136.75" y="1183.5" ></text>
</g>
<g >
<title>r_object (4,485,429 samples, 0.03%)</title><rect x="161.7" y="485" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="164.73" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,455,522 samples, 0.03%)</title><rect x="163.6" y="613" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="166.62" y="623.5" ></text>
</g>
<g >
<title>binary_op1 (17,993,276 samples, 0.13%)</title><rect x="30.0" y="1269" width="1.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="33.04" y="1279.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="789" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1122.93" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="869" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1136.75" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,478,886 samples, 0.03%)</title><rect x="201.8" y="565" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="204.81" y="575.5" ></text>
</g>
<g >
<title>_PyLong_FromMedium (130,443,099 samples, 0.95%)</title><rect x="681.9" y="1013" width="11.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="684.94" y="1023.5" ></text>
</g>
<g >
<title>insertdict (647,726,774 samples, 4.71%)</title><rect x="610.9" y="1013" width="55.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="613.94" y="1023.5" >inser..</text>
</g>
<g >
<title>import_name (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1077" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="28.44" y="1087.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,834,094 samples, 0.06%)</title><rect x="27.0" y="565" width="0.7" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="29.97" y="575.5" ></text>
</g>
<g >
<title>gc_collect_main (9,012,651 samples, 0.07%)</title><rect x="319.6" y="1205" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="322.58" y="1215.5" ></text>
</g>
<g >
<title>object_vacall (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="533" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1122.93" y="543.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas (8,996,448 samples, 0.07%)</title><rect x="316.8" y="1093" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="319.78" y="1103.5" ></text>
</g>
<g >
<title>compare_unicode_unicode_threadsafe (22,491,826 samples, 0.16%)</title><rect x="758.4" y="917" width="1.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="761.35" y="927.5" ></text>
</g>
<g >
<title>type_call (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="821" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1122.93" y="831.5" ></text>
</g>
<g >
<title>_PySeqLock_BeginRead (4,471,430 samples, 0.03%)</title><rect x="95.0" y="1285" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="97.98" y="1295.5" ></text>
</g>
<g >
<title>object_vacall (8,931,350 samples, 0.06%)</title><rect x="31.6" y="757" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="34.59" y="767.5" ></text>
</g>
<g >
<title>dictkeys_get_index (22,490,160 samples, 0.16%)</title><rect x="1097.9" y="965" width="2.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1100.94" y="975.5" ></text>
</g>
<g >
<title>do_anonymous_page (4,359,608 samples, 0.03%)</title><rect x="27.0" y="197" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="29.97" y="207.5" ></text>
</g>
<g >
<title>type_new_impl (4,377,767 samples, 0.03%)</title><rect x="163.2" y="357" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="166.25" y="367.5" ></text>
</g>
<g >
<title>builtin_exec (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="469" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1122.93" y="479.5" ></text>
</g>
<g >
<title>import_name (4,415,815 samples, 0.03%)</title><rect x="1133.0" y="485" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1136.01" y="495.5" ></text>
</g>
<g >
<title>builtin_exec (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1109" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1142.92" y="1119.5" ></text>
</g>
<g >
<title>builtin_exec_impl (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1061" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="165.88" y="1071.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="501" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1142.92" y="511.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="1061" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1137.24" y="1071.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (211,408,941 samples, 1.54%)</title><rect x="785.8" y="1061" width="18.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="788.75" y="1071.5" ></text>
</g>
<g >
<title>read_object (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="597" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1161.82" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,304,576 samples, 0.10%)</title><rect x="26.6" y="837" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="29.59" y="847.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="549" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1162.19" y="559.5" ></text>
</g>
<g >
<title>builtin_exec (4,472,337 samples, 0.03%)</title><rect x="164.0" y="1029" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="167.01" y="1039.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4,498,486 samples, 0.03%)</title><rect x="672.7" y="997" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="675.68" y="1007.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="741" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1137.24" y="751.5" ></text>
</g>
<g >
<title>mi_segment_check_free (4,778,680 samples, 0.03%)</title><rect x="317.6" y="1157" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="320.55" y="1167.5" ></text>
</g>
<g >
<title>_Py_module_getattro (4,497,468 samples, 0.03%)</title><rect x="666.1" y="997" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="669.12" y="1007.5" ></text>
</g>
<g >
<title>method_vectorcall (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1013" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="164.73" y="1023.5" ></text>
</g>
<g >
<title>_Py_IsOwnedByCurrentThread (4,495,617 samples, 0.03%)</title><rect x="319.2" y="1125" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="322.19" y="1135.5" ></text>
</g>
<g >
<title>update_refs (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="373" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1135.63" y="383.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,909,404 samples, 0.06%)</title><rect x="162.1" y="693" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.12" y="703.5" ></text>
</g>
<g >
<title>import_find_and_load (4,463,125 samples, 0.03%)</title><rect x="33.9" y="549" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="36.88" y="559.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (49,258,000 samples, 0.36%)</title><rect x="1116.1" y="965" width="4.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1119.08" y="975.5" ></text>
</g>
<g >
<title>Py_DECREF (4,478,886 samples, 0.03%)</title><rect x="201.8" y="357" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="204.81" y="367.5" ></text>
</g>
<g >
<title>object_vacall (4,475,328 samples, 0.03%)</title><rect x="33.1" y="725" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="36.11" y="735.5" ></text>
</g>
<g >
<title>PyModule_ExecDef (4,475,546 samples, 0.03%)</title><rect x="162.5" y="517" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="165.50" y="527.5" ></text>
</g>
<g >
<title>builtin_exec_impl (13,304,576 samples, 0.10%)</title><rect x="26.6" y="1173" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="29.59" y="1183.5" ></text>
</g>
<g >
<title>lookup_tp_dict (31,486,548 samples, 0.23%)</title><rect x="1101.4" y="1013" width="2.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1104.42" y="1023.5" ></text>
</g>
<g >
<title>pyo3::gil::GILGuard::assume (22,491,255 samples, 0.16%)</title><rect x="904.2" y="965" width="2.0" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="907.22" y="975.5" ></text>
</g>
<g >
<title>_PyDictKeys_StringLookupSplit (53,978,854 samples, 0.39%)</title><rect x="716.7" y="997" width="4.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="719.67" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,931,350 samples, 0.06%)</title><rect x="31.6" y="917" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="34.59" y="927.5" ></text>
</g>
<g >
<title>clear_thread_frame (4,482,849 samples, 0.03%)</title><rect x="1118.4" y="613" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1121.39" y="623.5" ></text>
</g>
<g >
<title>cfunction_call (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="437" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1142.92" y="447.5" ></text>
</g>
<g >
<title>Py_INCREF (4,383,060 samples, 0.03%)</title><rect x="32.7" y="437" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="35.74" y="447.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="965" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1137.01" y="975.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,440,989 samples, 0.03%)</title><rect x="164.4" y="565" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="167.39" y="575.5" ></text>
</g>
<g >
<title>_PyStaticType_GetState (17,992,877 samples, 0.13%)</title><rect x="773.0" y="949" width="1.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="776.02" y="959.5" ></text>
</g>
<g >
<title>builtin_exec (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="917" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1136.75" y="927.5" ></text>
</g>
<g >
<title>object_vacall (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="965" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1137.53" y="975.5" ></text>
</g>
<g >
<title>_PyObject_Call (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1045" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="164.73" y="1055.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,911,525 samples, 0.06%)</title><rect x="33.5" y="677" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="36.50" y="687.5" ></text>
</g>
<g >
<title>mi_find_page (4,239,150 samples, 0.03%)</title><rect x="162.9" y="469" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="165.88" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,383,060 samples, 0.03%)</title><rect x="32.7" y="453" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.74" y="463.5" ></text>
</g>
<g >
<title>_Py_dict_lookup (4,492,904 samples, 0.03%)</title><rect x="43.9" y="405" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="46.91" y="415.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="1013" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1137.53" y="1023.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas_page (4,496,781 samples, 0.03%)</title><rect x="318.8" y="1061" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="321.81" y="1071.5" ></text>
</g>
<g >
<title>_PyType_IsReady (26,986,097 samples, 0.20%)</title><rect x="1076.3" y="981" width="2.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1079.33" y="991.5" ></text>
</g>
<g >
<title>_PyObject_HashFast (4,377,767 samples, 0.03%)</title><rect x="163.2" y="293" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="166.25" y="303.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,317,921,969 samples, 9.58%)</title><rect x="803.9" y="1045" width="113.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="806.89" y="1055.5" >_PyObject_Vec..</text>
</g>
<g >
<title>_PyCriticalSection_BeginMutex (260,892,087 samples, 1.90%)</title><rect x="572.3" y="1013" width="22.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="575.35" y="1023.5" >_..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1061" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="46.91" y="1071.5" ></text>
</g>
<g >
<title>object_vacall (4,474,879 samples, 0.03%)</title><rect x="32.4" y="1109" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.35" y="1119.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,478,886 samples, 0.03%)</title><rect x="201.8" y="773" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="204.81" y="783.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (31,477,596 samples, 0.23%)</title><rect x="209.5" y="1285" width="2.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="212.53" y="1295.5" ></text>
</g>
<g >
<title>_PyObject_GC_New (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="837" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1136.75" y="847.5" ></text>
</g>
<g >
<title>import_name (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="869" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1135.63" y="879.5" ></text>
</g>
<g >
<title>_PyType_IsReady (53,977,737 samples, 0.39%)</title><rect x="187.5" y="1285" width="4.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="190.54" y="1295.5" ></text>
</g>
<g >
<title>object_vacall (8,911,525 samples, 0.06%)</title><rect x="33.5" y="709" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="36.50" y="719.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,485,429 samples, 0.03%)</title><rect x="161.7" y="677" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="164.73" y="687.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4,498,383 samples, 0.03%)</title><rect x="1131.9" y="1045" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1134.89" y="1055.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="693" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1161.82" y="703.5" ></text>
</g>
<g >
<title>builtin_exec (4,063,892 samples, 0.03%)</title><rect x="49.1" y="421" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="52.09" y="431.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,481,255 samples, 0.03%)</title><rect x="25.8" y="885" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="28.82" y="895.5" ></text>
</g>
<g >
<title>object_vacall (4,481,255 samples, 0.03%)</title><rect x="25.8" y="933" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.82" y="943.5" ></text>
</g>
<g >
<title>_Py_TryIncrefFast (17,992,690 samples, 0.13%)</title><rect x="1055.9" y="869" width="1.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1058.88" y="879.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,063,892 samples, 0.03%)</title><rect x="49.1" y="917" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="52.09" y="927.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="949" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1135.27" y="959.5" ></text>
</g>
<g >
<title>pycore_interp_init (4,194,608 samples, 0.03%)</title><rect x="1133.4" y="1157" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1136.39" y="1167.5" ></text>
</g>
<g >
<title>_PyPegen_fill_token (4,440,989 samples, 0.03%)</title><rect x="164.4" y="277" width="0.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="167.39" y="287.5" ></text>
</g>
<g >
<title>_PyDict_NotifyEvent (8,996,541 samples, 0.07%)</title><rect x="1157.7" y="1285" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1160.67" y="1295.5" ></text>
</g>
<g >
<title>deduce_unreachable_heap (8,996,448 samples, 0.07%)</title><rect x="316.8" y="1157" width="0.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="319.78" y="1167.5" ></text>
</g>
<g >
<title>Py_INCREF (4,498,161 samples, 0.03%)</title><rect x="880.7" y="949" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="883.68" y="959.5" ></text>
</g>
<g >
<title>mi_heap_malloc_small_zero (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="357" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1161.82" y="367.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,433,858 samples, 0.03%)</title><rect x="162.1" y="549" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="165.12" y="559.5" ></text>
</g>
<g >
<title>builtin_exec (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="741" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1135.63" y="751.5" ></text>
</g>
<g >
<title>intern_code_constants (4,481,255 samples, 0.03%)</title><rect x="25.8" y="501" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="28.82" y="511.5" ></text>
</g>
<g >
<title>list___reversed___impl (4,485,198 samples, 0.03%)</title><rect x="227.6" y="1269" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="230.65" y="1279.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (4,485,429 samples, 0.03%)</title><rect x="161.7" y="965" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="164.73" y="975.5" ></text>
</g>
<g >
<title>builtin_exec_impl (8,909,404 samples, 0.06%)</title><rect x="162.1" y="725" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="165.12" y="735.5" ></text>
</g>
<g >
<title>_Py_MakeRecCheck (26,987,480 samples, 0.20%)</title><rect x="811.2" y="981" width="2.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="814.22" y="991.5" ></text>
</g>
<g >
<title>object_vacall (4,440,989 samples, 0.03%)</title><rect x="164.4" y="1045" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="167.39" y="1055.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="789" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1142.92" y="799.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (4,477,690 samples, 0.03%)</title><rect x="31.6" y="485" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="34.59" y="495.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,383,060 samples, 0.03%)</title><rect x="32.7" y="629" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="35.74" y="639.5" ></text>
</g>
<g >
<title>PyNumber_InPlaceAdd (17,993,297 samples, 0.13%)</title><rect x="54.8" y="1285" width="1.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="57.84" y="1295.5" ></text>
</g>
<g >
<title>mi_block_set_nextx (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="773" width="0.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="1137.01" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,072,439 samples, 0.10%)</title><rect x="162.9" y="837" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.88" y="847.5" ></text>
</g>
<g >
<title>_PyEvalFramePushAndInit (215,904,028 samples, 1.57%)</title><rect x="958.6" y="1061" width="18.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="961.63" y="1071.5" ></text>
</g>
<g >
<title>gc_collect_internal (4,448,400 samples, 0.03%)</title><rect x="33.5" y="629" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="36.50" y="639.5" ></text>
</g>
<g >
<title>_Py_atomic_load_ssize_relaxed (17,992,036 samples, 0.13%)</title><rect x="761.1" y="965" width="1.5" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="764.05" y="975.5" ></text>
</g>
<g >
<title>_PyLong_CompactValue (35,984,565 samples, 0.26%)</title><rect x="633.7" y="949" width="3.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="636.71" y="959.5" ></text>
</g>
<g >
<title>import_find_and_load (4,440,989 samples, 0.03%)</title><rect x="164.4" y="741" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="167.39" y="751.5" ></text>
</g>
<g >
<title>do_lookup (490,298,577 samples, 3.56%)</title><rect x="521.0" y="997" width="42.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="524.02" y="1007.5" >do_..</text>
</g>
<g >
<title>builtin_exec (4,474,879 samples, 0.03%)</title><rect x="32.4" y="901" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="35.35" y="911.5" ></text>
</g>
<g >
<title>import_find_and_load (4,063,892 samples, 0.03%)</title><rect x="49.1" y="517" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="52.09" y="527.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,440,989 samples, 0.03%)</title><rect x="164.4" y="693" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="167.39" y="703.5" ></text>
</g>
<g >
<title>sched_tick (4,498,383 samples, 0.03%)</title><rect x="1131.9" y="949" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1134.89" y="959.5" ></text>
</g>
<g >
<title>new_reference (8,996,217 samples, 0.07%)</title><rect x="218.8" y="1269" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="221.79" y="1279.5" ></text>
</g>
<g >
<title>_Py_ThreadId (4,383,060 samples, 0.03%)</title><rect x="32.7" y="405" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="35.74" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,440,989 samples, 0.03%)</title><rect x="164.4" y="789" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.39" y="799.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (8,911,525 samples, 0.06%)</title><rect x="33.5" y="725" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="36.50" y="735.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="501" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1120.24" y="511.5" ></text>
</g>
<g >
<title>listiter_next (4,483,564 samples, 0.03%)</title><rect x="1118.0" y="261" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1121.00" y="271.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_unicode_threadsafe (49,480,625 samples, 0.36%)</title><rect x="717.1" y="965" width="4.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="720.06" y="975.5" ></text>
</g>
<g >
<title>object_vacall (4,485,429 samples, 0.03%)</title><rect x="161.7" y="629" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="164.73" y="639.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (9,800,558 samples, 0.07%)</title><rect x="1134.8" y="1301" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1137.84" y="1311.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint32_relaxed (4,498,511 samples, 0.03%)</title><rect x="1055.5" y="869" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1058.50" y="879.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (13,304,576 samples, 0.10%)</title><rect x="26.6" y="773" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="29.59" y="783.5" ></text>
</g>
<g >
<title>_Py_atomic_store_uint32_relaxed (8,995,955 samples, 0.07%)</title><rect x="765.3" y="981" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="768.30" y="991.5" ></text>
</g>
<g >
<title>Py_DECREF (22,487,397 samples, 0.16%)</title><rect x="159.8" y="1285" width="1.9" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="162.81" y="1295.5" ></text>
</g>
<g >
<title>_imp_get_frozen_object (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="533" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1162.19" y="543.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,450,819 samples, 0.03%)</title><rect x="25.4" y="613" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="28.44" y="623.5" ></text>
</g>
<g >
<title>import_find_and_load (8,911,525 samples, 0.06%)</title><rect x="33.5" y="741" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="36.50" y="751.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_unicode_threadsafe (121,449,878 samples, 0.88%)</title><rect x="123.1" y="1285" width="10.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="126.14" y="1295.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (4,383,060 samples, 0.03%)</title><rect x="32.7" y="485" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="35.74" y="495.5" ></text>
</g>
<g >
<title>method_vectorcall_FASTCALL_KEYWORDS_METHOD (8,976,892 samples, 0.07%)</title><rect x="1116.1" y="709" width="0.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1119.08" y="719.5" ></text>
</g>
<g >
<title>type_call (4,377,767 samples, 0.03%)</title><rect x="163.2" y="549" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="166.25" y="559.5" ></text>
</g>
<g >
<title>mi_page_queue_find_free_ex (4,359,608 samples, 0.03%)</title><rect x="27.0" y="357" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="29.97" y="367.5" ></text>
</g>
<g >
<title>_mi_page_malloc (8,996,877 samples, 0.07%)</title><rect x="691.2" y="981" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="694.20" y="991.5" ></text>
</g>
<g >
<title>compare_unicode_unicode (4,492,904 samples, 0.03%)</title><rect x="43.9" y="357" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="46.91" y="367.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (4,450,819 samples, 0.03%)</title><rect x="25.4" y="213" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="28.44" y="223.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas_page (4,472,337 samples, 0.03%)</title><rect x="164.0" y="517" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="167.01" y="527.5" ></text>
</g>
<g >
<title>_PyType_GetDict (13,495,024 samples, 0.10%)</title><rect x="215.7" y="1285" width="1.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="218.70" y="1295.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="965" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1137.24" y="975.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="213" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1142.92" y="223.5" ></text>
</g>
<g >
<title>_PyObject_GC_IS_TRACKED (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="421" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1161.44" y="431.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (17,991,569 samples, 0.13%)</title><rect x="897.7" y="885" width="1.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="900.66" y="895.5" ></text>
</g>
<g >
<title>Py_InitializeFromConfig (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1285" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1162.19" y="1295.5" ></text>
</g>
<g >
<title>builtin___import___impl (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1061" width="0.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="52.09" y="1071.5" ></text>
</g>
<g >
<title>gc_visit_heaps (4,470,482 samples, 0.03%)</title><rect x="26.6" y="565" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="29.59" y="575.5" ></text>
</g>
<g >
<title>_Py_ThreadId (4,474,486 samples, 0.03%)</title><rect x="27.3" y="405" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="30.34" y="415.5" ></text>
</g>
<g >
<title>builtin___import___impl (4,474,879 samples, 0.03%)</title><rect x="32.4" y="1029" width="0.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="35.35" y="1039.5" ></text>
</g>
<g >
<title>mi_slice_first (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="69" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1142.92" y="79.5" ></text>
</g>
<g >
<title>builtin___import___impl (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1109" width="0.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1162.19" y="1119.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,472,337 samples, 0.03%)</title><rect x="164.0" y="917" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="167.01" y="927.5" ></text>
</g>
<g >
<title>import_name (4,481,255 samples, 0.03%)</title><rect x="25.8" y="805" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="28.82" y="815.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (4,478,886 samples, 0.03%)</title><rect x="201.8" y="901" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="204.81" y="911.5" ></text>
</g>
<g >
<title>object_vacall (4,455,522 samples, 0.03%)</title><rect x="163.6" y="565" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="166.62" y="575.5" ></text>
</g>
<g >
<title>make_type (4,475,546 samples, 0.03%)</title><rect x="162.5" y="437" width="0.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="165.50" y="447.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,478,886 samples, 0.03%)</title><rect x="201.8" y="997" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="204.81" y="1007.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,492,904 samples, 0.03%)</title><rect x="43.9" y="661" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="46.91" y="671.5" ></text>
</g>
<g >
<title>builtin_exec_impl (13,072,439 samples, 0.10%)</title><rect x="162.9" y="869" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="165.88" y="879.5" ></text>
</g>
<g >
<title>mi_heap_area_visitor (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="405" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1135.63" y="415.5" ></text>
</g>
<g >
<title>_PyCode_New (4,481,255 samples, 0.03%)</title><rect x="25.8" y="517" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="28.82" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1221" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.88" y="1231.5" ></text>
</g>
<g >
<title>gc_collect_main (4,979,668 samples, 0.04%)</title><rect x="318.4" y="1173" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="321.38" y="1183.5" ></text>
</g>
<g >
<title>Py_DECREF (22,491,059 samples, 0.16%)</title><rect x="983.7" y="1029" width="1.9" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="986.72" y="1039.5" ></text>
</g>
<g >
<title>mi_block_nextx (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="309" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1161.82" y="319.5" ></text>
</g>
<g >
<title>_Py_TryIncrefFast (4,498,434 samples, 0.03%)</title><rect x="752.6" y="917" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="755.56" y="927.5" ></text>
</g>
<g >
<title>r_object (4,492,904 samples, 0.03%)</title><rect x="43.9" y="501" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="46.91" y="511.5" ></text>
</g>
<g >
<title>gc_collect_main (4,472,337 samples, 0.03%)</title><rect x="164.0" y="645" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="167.01" y="655.5" ></text>
</g>
<g >
<title>tick_nohz_handler (4,498,092 samples, 0.03%)</title><rect x="803.5" y="933" width="0.4" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="806.50" y="943.5" ></text>
</g>
<g >
<title>type_call (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1157" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="164.73" y="1167.5" ></text>
</g>
<g >
<title>import_find_and_load (4,475,328 samples, 0.03%)</title><rect x="33.1" y="613" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="36.11" y="623.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint32_relaxed (4,475,546 samples, 0.03%)</title><rect x="162.5" y="181" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="165.50" y="191.5" ></text>
</g>
<g >
<title>_DK_ENTRIES (13,494,342 samples, 0.10%)</title><rect x="642.6" y="965" width="1.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="645.58" y="975.5" ></text>
</g>
<g >
<title>astmodule_exec (4,475,546 samples, 0.03%)</title><rect x="162.5" y="501" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="165.50" y="511.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,450,819 samples, 0.03%)</title><rect x="25.4" y="645" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="28.44" y="655.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="901" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1135.63" y="911.5" ></text>
</g>
<g >
<title>PyObject_CallNoArgs (4,433,858 samples, 0.03%)</title><rect x="162.1" y="565" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="165.12" y="575.5" ></text>
</g>
<g >
<title>task_tick_fair (4,498,383 samples, 0.03%)</title><rect x="1131.9" y="933" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1134.89" y="943.5" ></text>
</g>
<g >
<title>_Py_HandlePending (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="1029" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1136.39" y="1039.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,063,892 samples, 0.03%)</title><rect x="49.1" y="885" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="52.09" y="895.5" ></text>
</g>
<g >
<title>mi_heap_visit_pages (4,448,400 samples, 0.03%)</title><rect x="33.5" y="533" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="36.50" y="543.5" ></text>
</g>
<g >
<title>Py_BytesMain (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1285" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="52.09" y="1295.5" ></text>
</g>
<g >
<title>_PyObject_HashFast (94,460,392 samples, 0.69%)</title><rect x="563.1" y="1045" width="8.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="566.08" y="1055.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,383,060 samples, 0.03%)</title><rect x="32.7" y="725" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="35.74" y="735.5" ></text>
</g>
<g >
<title>PyDict_GetItemRef (53,980,383 samples, 0.39%)</title><rect x="80.7" y="1285" width="4.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="83.70" y="1295.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint32_relaxed (4,498,390 samples, 0.03%)</title><rect x="939.7" y="1045" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="942.73" y="1055.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,931,350 samples, 0.06%)</title><rect x="31.6" y="725" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="34.59" y="735.5" ></text>
</g>
<g >
<title>object_vacall (4,472,337 samples, 0.03%)</title><rect x="164.0" y="709" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="167.01" y="719.5" ></text>
</g>
<g >
<title>r_object (4,492,904 samples, 0.03%)</title><rect x="43.9" y="485" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="46.91" y="495.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,450,819 samples, 0.03%)</title><rect x="25.4" y="533" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="28.44" y="543.5" ></text>
</g>
<g >
<title>mi_block_set_next (4,474,879 samples, 0.03%)</title><rect x="32.4" y="357" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="35.35" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="325" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1135.63" y="335.5" ></text>
</g>
<g >
<title>memcmp@plt (4,496,847 samples, 0.03%)</title><rect x="1068.6" y="869" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1071.62" y="879.5" ></text>
</g>
<g >
<title>import_find_and_load (4,474,486 samples, 0.03%)</title><rect x="27.3" y="517" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="30.34" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,931,350 samples, 0.06%)</title><rect x="31.6" y="1029" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="34.59" y="1039.5" ></text>
</g>
<g >
<title>_mi_malloc_generic (4,359,608 samples, 0.03%)</title><rect x="27.0" y="405" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="29.97" y="415.5" ></text>
</g>
<g >
<title>Py_RunMain (9,518,311,791 samples, 69.20%)</title><rect x="316.8" y="1237" width="816.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="319.78" y="1247.5" >Py_RunMain</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (5,745,542 samples, 0.04%)</title><rect x="1133.7" y="981" width="0.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1136.75" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,443,766 samples, 0.03%)</title><rect x="44.3" y="485" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="47.29" y="495.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint32_relaxed (8,995,922 samples, 0.07%)</title><rect x="1113.8" y="997" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1116.77" y="1007.5" ></text>
</g>
<g >
<title>_Py_ThreadId (4,495,617 samples, 0.03%)</title><rect x="319.2" y="1109" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="322.19" y="1119.5" ></text>
</g>
<g >
<title>builtin___import___impl (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1189" width="0.4" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="28.82" y="1199.5" ></text>
</g>
<g >
<title>builtin_exec (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1045" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1161.44" y="1055.5" ></text>
</g>
<g >
<title>builtin_exec_impl (8,936,670 samples, 0.06%)</title><rect x="43.9" y="821" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="46.91" y="831.5" ></text>
</g>
<g >
<title>builtin_exec_impl (13,304,576 samples, 0.10%)</title><rect x="26.6" y="981" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="29.59" y="991.5" ></text>
</g>
<g >
<title>builtin___import__ (8,936,670 samples, 0.06%)</title><rect x="43.9" y="981" width="0.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="46.91" y="991.5" ></text>
</g>
<g >
<title>_PyObject_MiFree (31,487,731 samples, 0.23%)</title><rect x="625.2" y="949" width="2.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="628.21" y="959.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas_page (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="885" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1136.39" y="895.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="405" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1122.93" y="415.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="613" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1162.19" y="623.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,472,337 samples, 0.03%)</title><rect x="164.0" y="1045" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="167.01" y="1055.5" ></text>
</g>
<g >
<title>PyErr_WarnFormat (4,478,886 samples, 0.03%)</title><rect x="201.8" y="693" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="204.81" y="703.5" ></text>
</g>
<g >
<title>Py_XDECREF (4,482,849 samples, 0.03%)</title><rect x="1118.4" y="565" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1121.39" y="575.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,475,328 samples, 0.03%)</title><rect x="33.1" y="565" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="36.11" y="575.5" ></text>
</g>
<g >
<title>hrtimer_update_next_event (4,474,879 samples, 0.03%)</title><rect x="32.4" y="261" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="35.35" y="271.5" ></text>
</g>
<g >
<title>float_richcompare (44,980,967 samples, 0.33%)</title><rect x="1143.0" y="1301" width="3.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1146.01" y="1311.5" ></text>
</g>
<g >
<title>__tls_get_addr (13,494,521 samples, 0.10%)</title><rect x="314.5" y="1301" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="317.47" y="1311.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (13,072,439 samples, 0.10%)</title><rect x="162.9" y="933" width="1.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="165.88" y="943.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (8,931,350 samples, 0.06%)</title><rect x="31.6" y="581" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="34.59" y="591.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,478,886 samples, 0.03%)</title><rect x="201.8" y="437" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="204.81" y="447.5" ></text>
</g>
<g >
<title>gc_is_unreachable (4,498,474 samples, 0.03%)</title><rect x="316.8" y="949" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="319.78" y="959.5" ></text>
</g>
<g >
<title>mi_page_fresh_alloc (4,474,879 samples, 0.03%)</title><rect x="32.4" y="421" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="35.35" y="431.5" ></text>
</g>
<g >
<title>func_dealloc (4,272,266 samples, 0.03%)</title><rect x="227.3" y="1285" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="230.28" y="1295.5" ></text>
</g>
<g >
<title>import_name (4,477,879 samples, 0.03%)</title><rect x="26.2" y="789" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="29.20" y="799.5" ></text>
</g>
<g >
<title>r_object (4,492,904 samples, 0.03%)</title><rect x="43.9" y="533" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="46.91" y="543.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1125" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="28.44" y="1135.5" ></text>
</g>
<g >
<title>r_object (4,481,255 samples, 0.03%)</title><rect x="25.8" y="549" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="28.82" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1141" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="28.82" y="1151.5" ></text>
</g>
<g >
<title>_PyDict_GetItemRef_KnownHash (67,461,880 samples, 0.49%)</title><rect x="18.1" y="1285" width="5.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="21.10" y="1295.5" ></text>
</g>
<g >
<title>pytime_add (31,475,699 samples, 0.23%)</title><rect x="876.8" y="949" width="2.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="879.82" y="959.5" ></text>
</g>
<g >
<title>r_object (4,474,879 samples, 0.03%)</title><rect x="32.4" y="581" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="35.35" y="591.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas_page (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="421" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1135.63" y="431.5" ></text>
</g>
<g >
<title>init_types (4,475,546 samples, 0.03%)</title><rect x="162.5" y="453" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="165.50" y="463.5" ></text>
</g>
<g >
<title>_Py_NewReference (22,490,227 samples, 0.16%)</title><rect x="255.8" y="1301" width="1.9" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="258.81" y="1311.5" ></text>
</g>
<g >
<title>type_traverse (4,448,400 samples, 0.03%)</title><rect x="33.5" y="437" width="0.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="36.50" y="447.5" ></text>
</g>
<g >
<title>type_call (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1077" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="204.81" y="1087.5" ></text>
</g>
<g >
<title>import_find_and_load (8,931,350 samples, 0.06%)</title><rect x="31.6" y="1173" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="34.59" y="1183.5" ></text>
</g>
<g >
<title>init_import_site (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1237" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1162.19" y="1247.5" ></text>
</g>
<g >
<title>_Py_TryIncrefCompare (58,476,108 samples, 0.43%)</title><rect x="509.8" y="997" width="5.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="512.83" y="1007.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (35,823,000 samples, 0.26%)</title><rect x="1116.9" y="661" width="3.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1119.85" y="671.5" ></text>
</g>
<g >
<title>rcu_core (4,475,546 samples, 0.03%)</title><rect x="162.5" y="101" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="165.50" y="111.5" ></text>
</g>
<g >
<title>_PyInterpreterState_GET (8,996,756 samples, 0.07%)</title><rect x="608.2" y="1013" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="611.23" y="1023.5" ></text>
</g>
<g >
<title>_DK_ENTRIES (17,993,275 samples, 0.13%)</title><rect x="621.0" y="981" width="1.5" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="623.97" y="991.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (4,440,989 samples, 0.03%)</title><rect x="164.4" y="245" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="167.39" y="255.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (242,901,482 samples, 1.77%)</title><rect x="171.3" y="1301" width="20.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="174.33" y="1311.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,474,879 samples, 0.03%)</title><rect x="32.4" y="725" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="35.35" y="735.5" ></text>
</g>
<g >
<title>import_name (13,304,576 samples, 0.10%)</title><rect x="26.6" y="933" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="29.59" y="943.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,474,879 samples, 0.03%)</title><rect x="32.4" y="709" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="35.35" y="719.5" ></text>
</g>
<g >
<title>__libc_start_main (9,535,213,986 samples, 69.33%)</title><rect x="316.8" y="1285" width="818.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="319.78" y="1295.5" >__libc_start_main</text>
</g>
<g >
<title>mi_heap_visit_areas (8,946,758 samples, 0.07%)</title><rect x="1118.8" y="517" width="0.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1121.77" y="527.5" ></text>
</g>
<g >
<title>PyObject_Malloc (67,467,063 samples, 0.49%)</title><rect x="682.7" y="997" width="5.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="685.71" y="1007.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,474,879 samples, 0.03%)</title><rect x="32.4" y="1013" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="35.35" y="1023.5" ></text>
</g>
<g >
<title>import_find_and_load (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1221" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="165.12" y="1231.5" ></text>
</g>
<g >
<title>_Py_Finalize (41,625,495 samples, 0.30%)</title><rect x="316.8" y="1221" width="3.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="319.78" y="1231.5" ></text>
</g>
<g >
<title>vma_alloc_folio_noprof (4,450,819 samples, 0.03%)</title><rect x="25.4" y="117" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="28.44" y="127.5" ></text>
</g>
<g >
<title>op_from_block (4,470,482 samples, 0.03%)</title><rect x="26.6" y="421" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="29.59" y="431.5" ></text>
</g>
<g >
<title>gc_collect_internal (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="997" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1136.39" y="1007.5" ></text>
</g>
<g >
<title>object_vacall (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="805" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1135.63" y="815.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,931,350 samples, 0.06%)</title><rect x="31.6" y="741" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="34.59" y="751.5" ></text>
</g>
<g >
<title>mi_heap_area_visitor (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="501" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1161.44" y="511.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (8,931,350 samples, 0.06%)</title><rect x="31.6" y="1093" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="34.59" y="1103.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (5,745,542 samples, 0.04%)</title><rect x="1133.7" y="1093" width="0.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1136.75" y="1103.5" ></text>
</g>
<g >
<title>mi_page_free_list_extend (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="709" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1136.75" y="719.5" ></text>
</g>
<g >
<title>_PyObject_CallNoArgs (4,453,660 samples, 0.03%)</title><rect x="32.0" y="421" width="0.4" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="34.97" y="431.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallDictTstate (35,823,000 samples, 0.26%)</title><rect x="1116.9" y="677" width="3.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1119.85" y="687.5" ></text>
</g>
<g >
<title>run_eval_code_obj (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1253" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="204.81" y="1263.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (13,072,439 samples, 0.10%)</title><rect x="162.9" y="853" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="165.88" y="863.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="1077" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1137.53" y="1087.5" ></text>
</g>
<g >
<title>_mi_malloc_generic (4,239,150 samples, 0.03%)</title><rect x="162.9" y="485" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="165.88" y="495.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,440,989 samples, 0.03%)</title><rect x="164.4" y="1109" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.39" y="1119.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="773" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1161.82" y="783.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="885" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1142.92" y="895.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (35,986,032 samples, 0.26%)</title><rect x="911.9" y="869" width="3.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="914.94" y="879.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4,498,383 samples, 0.03%)</title><rect x="1131.9" y="1029" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1134.89" y="1039.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,063,892 samples, 0.03%)</title><rect x="49.1" y="469" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="52.09" y="479.5" ></text>
</g>
<g >
<title>PyObject_CallMethod (5,745,542 samples, 0.04%)</title><rect x="1133.7" y="1125" width="0.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1136.75" y="1135.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="693" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1122.93" y="703.5" ></text>
</g>
<g >
<title>import_find_and_load (4,477,879 samples, 0.03%)</title><rect x="26.2" y="949" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="29.20" y="959.5" ></text>
</g>
<g >
<title>do_lookup (4,492,904 samples, 0.03%)</title><rect x="43.9" y="373" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="46.91" y="383.5" ></text>
</g>
<g >
<title>PyImport_Import (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="1125" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1137.53" y="1135.5" ></text>
</g>
<g >
<title>update_refs (4,979,668 samples, 0.04%)</title><rect x="318.4" y="1029" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="321.38" y="1039.5" ></text>
</g>
<g >
<title>run_eval_code_obj (9,476,686,296 samples, 68.90%)</title><rect x="320.4" y="1109" width="813.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="323.35" y="1119.5" >run_eval_code_obj</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (13,072,439 samples, 0.10%)</title><rect x="162.9" y="773" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="165.88" y="783.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (8,931,350 samples, 0.06%)</title><rect x="31.6" y="773" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="34.59" y="783.5" ></text>
</g>
<g >
<title>import_name (4,472,337 samples, 0.03%)</title><rect x="164.0" y="773" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="167.01" y="783.5" ></text>
</g>
<g >
<title>ensure_shared_on_read (22,491,399 samples, 0.16%)</title><rect x="752.9" y="949" width="2.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="755.95" y="959.5" ></text>
</g>
<g >
<title>_PyThreadState_PushFrame (17,991,054 samples, 0.13%)</title><rect x="969.8" y="1045" width="1.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="972.83" y="1055.5" ></text>
</g>
<g >
<title>PyObject_GenericGetAttr (26,988,857 samples, 0.20%)</title><rect x="38.5" y="1285" width="2.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="41.50" y="1295.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,063,892 samples, 0.03%)</title><rect x="49.1" y="821" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="52.09" y="831.5" ></text>
</g>
<g >
<title>pymain_run_python (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1269" width="0.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="46.91" y="1279.5" ></text>
</g>
<g >
<title>_Py_hashtable_get_entry_generic (4,481,255 samples, 0.03%)</title><rect x="25.8" y="437" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="28.82" y="447.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1205" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1161.44" y="1215.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1301" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="28.44" y="1311.5" ></text>
</g>
<g >
<title>mi_heap_area_visitor (4,470,482 samples, 0.03%)</title><rect x="26.6" y="469" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="29.59" y="479.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="917" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1135.27" y="927.5" ></text>
</g>
<g >
<title>import_find_and_load (13,072,439 samples, 0.10%)</title><rect x="162.9" y="981" width="1.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="165.88" y="991.5" ></text>
</g>
<g >
<title>deduce_unreachable_heap (4,496,781 samples, 0.03%)</title><rect x="318.8" y="1157" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="321.81" y="1167.5" ></text>
</g>
<g >
<title>PyFloat_FromDouble (35,985,130 samples, 0.26%)</title><rect x="880.3" y="981" width="3.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="883.30" y="991.5" ></text>
</g>
<g >
<title>binary_iop1 (17,993,276 samples, 0.13%)</title><rect x="30.0" y="1285" width="1.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="33.04" y="1295.5" ></text>
</g>
<g >
<title>[libc.so.6] (98,955,789 samples, 0.72%)</title><rect x="1060.1" y="869" width="8.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1063.13" y="879.5" ></text>
</g>
<g >
<title>sched_tick (4,498,092 samples, 0.03%)</title><rect x="803.5" y="901" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="806.50" y="911.5" ></text>
</g>
<g >
<title>{closure#0} (35,985,346 samples, 0.26%)</title><rect x="899.2" y="901" width="3.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="902.21" y="911.5" ></text>
</g>
<g >
<title>r_object (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="613" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1137.24" y="623.5" ></text>
</g>
<g >
<title>read_object (4,474,879 samples, 0.03%)</title><rect x="32.4" y="645" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="35.35" y="655.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,474,879 samples, 0.03%)</title><rect x="32.4" y="949" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="35.35" y="959.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,475,328 samples, 0.03%)</title><rect x="33.1" y="677" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="36.11" y="687.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,383,060 samples, 0.03%)</title><rect x="32.7" y="901" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="35.74" y="911.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,440,989 samples, 0.03%)</title><rect x="164.4" y="661" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="167.39" y="671.5" ></text>
</g>
<g >
<title>update_process_times (4,508,963 samples, 0.03%)</title><rect x="319.6" y="901" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="322.58" y="911.5" ></text>
</g>
<g >
<title>do_lookup (31,488,027 samples, 0.23%)</title><rect x="718.6" y="949" width="2.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="721.60" y="959.5" ></text>
</g>
<g >
<title>builtin_exec (8,931,350 samples, 0.06%)</title><rect x="31.6" y="885" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="34.59" y="895.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (4,478,886 samples, 0.03%)</title><rect x="201.8" y="597" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="204.81" y="607.5" ></text>
</g>
<g >
<title>gc_visit_heaps_lock_held (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="949" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1136.39" y="959.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,475,328 samples, 0.03%)</title><rect x="33.1" y="741" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="36.11" y="751.5" ></text>
</g>
<g >
<title>_DK_ENTRIES (13,494,933 samples, 0.10%)</title><rect x="757.2" y="917" width="1.2" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="760.19" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,909,404 samples, 0.06%)</title><rect x="162.1" y="885" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.12" y="895.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (13,304,576 samples, 0.10%)</title><rect x="26.6" y="1077" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="29.59" y="1087.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="741" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1122.93" y="751.5" ></text>
</g>
<g >
<title>into_bound_py_any&lt;i32&gt; (35,985,346 samples, 0.26%)</title><rect x="899.2" y="821" width="3.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="902.21" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,475,328 samples, 0.03%)</title><rect x="33.1" y="549" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="36.11" y="559.5" ></text>
</g>
<g >
<title>deduce_unreachable_heap (8,946,758 samples, 0.07%)</title><rect x="1118.8" y="581" width="0.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1121.77" y="591.5" ></text>
</g>
<g >
<title>mi_slice_first (4,498,002 samples, 0.03%)</title><rect x="626.8" y="901" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="629.76" y="911.5" ></text>
</g>
<g >
<title>builtin_exec (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="933" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1135.63" y="943.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint64_relaxed (35,985,796 samples, 0.26%)</title><rect x="730.2" y="1029" width="3.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="733.18" y="1039.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (4,383,060 samples, 0.03%)</title><rect x="32.7" y="533" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="35.74" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,481,255 samples, 0.03%)</title><rect x="25.8" y="981" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="28.82" y="991.5" ></text>
</g>
<g >
<title>gc_alloc (4,359,608 samples, 0.03%)</title><rect x="27.0" y="437" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="29.97" y="447.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallDictTstate (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="725" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1142.92" y="735.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas (4,496,781 samples, 0.03%)</title><rect x="318.8" y="1093" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="321.81" y="1103.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4,508,963 samples, 0.03%)</title><rect x="319.6" y="933" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="322.58" y="943.5" ></text>
</g>
<g >
<title>_mi_abandoned_collect (4,778,680 samples, 0.03%)</title><rect x="317.6" y="1173" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="320.55" y="1183.5" ></text>
</g>
<g >
<title>_PyObject_MiMalloc (4,440,989 samples, 0.03%)</title><rect x="164.4" y="197" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="167.39" y="207.5" ></text>
</g>
<g >
<title>type_call (35,823,000 samples, 0.26%)</title><rect x="1116.9" y="725" width="3.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1119.85" y="735.5" ></text>
</g>
<g >
<title>_Py_TryIncrefFast (58,476,108 samples, 0.43%)</title><rect x="509.8" y="981" width="5.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="512.83" y="991.5" ></text>
</g>
<g >
<title>PyImport_ImportModule (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1173" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="52.09" y="1183.5" ></text>
</g>
<g >
<title>PyDict_GetItemRef (49,479,869 samples, 0.36%)</title><rect x="49.4" y="1285" width="4.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="52.44" y="1295.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_unicode_threadsafe (80,967,871 samples, 0.59%)</title><rect x="1092.9" y="997" width="7.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1095.93" y="1007.5" ></text>
</g>
<g >
<title>PyObject_CallMethodOneArg (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="229" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1142.92" y="239.5" ></text>
</g>
<g >
<title>__tls_get_addr (17,993,650 samples, 0.13%)</title><rect x="896.1" y="885" width="1.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="899.12" y="895.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,383,060 samples, 0.03%)</title><rect x="32.7" y="869" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="35.74" y="879.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (4,359,608 samples, 0.03%)</title><rect x="27.0" y="181" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="29.97" y="191.5" ></text>
</g>
<g >
<title>read_object (4,239,150 samples, 0.03%)</title><rect x="162.9" y="629" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="165.88" y="639.5" ></text>
</g>
<g >
<title>_loop1_101_rule (4,440,989 samples, 0.03%)</title><rect x="164.4" y="325" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="167.39" y="335.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,440,989 samples, 0.03%)</title><rect x="164.4" y="757" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="167.39" y="767.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,474,879 samples, 0.03%)</title><rect x="32.4" y="757" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="35.35" y="767.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1029" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1162.19" y="1039.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="949" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1136.75" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,472,337 samples, 0.03%)</title><rect x="164.0" y="981" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.01" y="991.5" ></text>
</g>
<g >
<title>builtin_exec (13,304,576 samples, 0.10%)</title><rect x="26.6" y="997" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="29.59" y="1007.5" ></text>
</g>
<g >
<title>pymain_run_file_obj (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1237" width="0.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="46.91" y="1247.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,440,989 samples, 0.03%)</title><rect x="164.4" y="1029" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="167.39" y="1039.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,063,892 samples, 0.03%)</title><rect x="49.1" y="613" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="52.09" y="623.5" ></text>
</g>
<g >
<title>builtin_exec (8,936,670 samples, 0.06%)</title><rect x="43.9" y="837" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="46.91" y="847.5" ></text>
</g>
<g >
<title>mi_find_page (4,450,819 samples, 0.03%)</title><rect x="25.4" y="325" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="28.44" y="335.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,383,060 samples, 0.03%)</title><rect x="32.7" y="469" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="35.74" y="479.5" ></text>
</g>
<g >
<title>benchlib_pyo3::&lt;impl benchlib_pyo3::py_return_int::MakeDef&gt;::_PYO3_DEF::trampoline (8,996,747 samples, 0.07%)</title><rect x="44.7" y="1285" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="47.67" y="1295.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_NOARGS (4,498,435 samples, 0.03%)</title><rect x="782.7" y="1045" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="785.66" y="1055.5" ></text>
</g>
<g >
<title>mi_page_fresh (4,474,879 samples, 0.03%)</title><rect x="32.4" y="437" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.35" y="447.5" ></text>
</g>
<g >
<title>builtin_exec_impl (8,931,350 samples, 0.06%)</title><rect x="31.6" y="1061" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="34.59" y="1071.5" ></text>
</g>
<g >
<title>clock_gettime@plt (4,498,224 samples, 0.03%)</title><rect x="874.5" y="965" width="0.4" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="877.51" y="975.5" ></text>
</g>
<g >
<title>_mi_page_malloc (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="341" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1161.82" y="351.5" ></text>
</g>
<g >
<title>_PyObject_Call (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="661" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.92" y="671.5" ></text>
</g>
<g >
<title>import_find_and_load (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1045" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="28.44" y="1055.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,475,328 samples, 0.03%)</title><rect x="33.1" y="485" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="36.11" y="495.5" ></text>
</g>
<g >
<title>type_new (4,475,546 samples, 0.03%)</title><rect x="162.5" y="341" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="165.50" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1173" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="28.44" y="1183.5" ></text>
</g>
<g >
<title>list_get_item_ref (4,483,564 samples, 0.03%)</title><rect x="1118.0" y="245" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1121.00" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (4,359,608 samples, 0.03%)</title><rect x="27.0" y="245" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="29.97" y="255.5" ></text>
</g>
<g >
<title>mark_reachable (4,498,474 samples, 0.03%)</title><rect x="316.8" y="997" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="319.78" y="1007.5" ></text>
</g>
<g >
<title>_PyFloat_ExactDealloc (44,982,698 samples, 0.33%)</title><rect x="952.8" y="1029" width="3.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="955.85" y="1039.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="645" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1122.93" y="655.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,477,879 samples, 0.03%)</title><rect x="26.2" y="677" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="29.20" y="687.5" ></text>
</g>
<g >
<title>run_mod (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1173" width="0.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="46.91" y="1183.5" ></text>
</g>
<g >
<title>delete_garbage (4,495,617 samples, 0.03%)</title><rect x="319.2" y="1157" width="0.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="322.19" y="1167.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,304,576 samples, 0.10%)</title><rect x="26.6" y="1029" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="29.59" y="1039.5" ></text>
</g>
<g >
<title>builtin_exec (4,443,766 samples, 0.03%)</title><rect x="44.3" y="645" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="47.29" y="655.5" ></text>
</g>
<g >
<title>lambda_parameters_rule (4,440,989 samples, 0.03%)</title><rect x="164.4" y="357" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="167.39" y="367.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (17,769,913 samples, 0.13%)</title><rect x="32.7" y="1045" width="1.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="35.74" y="1055.5" ></text>
</g>
<g >
<title>_PyObject_MallocWithType (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="805" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1136.75" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,474,879 samples, 0.03%)</title><rect x="32.4" y="853" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.35" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (17,782,455 samples, 0.13%)</title><rect x="26.2" y="1221" width="1.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="29.20" y="1231.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,440,989 samples, 0.03%)</title><rect x="164.4" y="1189" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.39" y="1199.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (4,239,150 samples, 0.03%)</title><rect x="162.9" y="197" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="165.88" y="207.5" ></text>
</g>
<g >
<title>_PyObject_Call (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="469" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.92" y="479.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (13,493,807 samples, 0.10%)</title><rect x="42.7" y="1301" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="45.75" y="1311.5" ></text>
</g>
<g >
<title>catch_unwind&lt;pyo3::impl_::trampoline::trampoline::{closure_env#0}&lt;pyo3::impl_::trampoline::noargs::{closure_env#0}, *mut pyo3_ffi::object::PyObject&gt;, core::result::Result&lt;*mut pyo3_ffi::object::PyObject, pyo3::err::PyErr&gt;&gt; (49,480,116 samples, 0.36%)</title><rect x="899.2" y="965" width="4.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="902.21" y="975.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="309" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1135.63" y="319.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,443,766 samples, 0.03%)</title><rect x="44.3" y="629" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="47.29" y="639.5" ></text>
</g>
<g >
<title>_mi_heap_area_visit_blocks (4,496,781 samples, 0.03%)</title><rect x="318.8" y="1029" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="321.81" y="1039.5" ></text>
</g>
<g >
<title>builtin_exec (17,769,913 samples, 0.13%)</title><rect x="32.7" y="1029" width="1.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="35.74" y="1039.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,477,879 samples, 0.03%)</title><rect x="26.2" y="837" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="29.20" y="847.5" ></text>
</g>
<g >
<title>object_vacall (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="933" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.44" y="943.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,475,328 samples, 0.03%)</title><rect x="33.1" y="469" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="36.11" y="479.5" ></text>
</g>
<g >
<title>type_new_impl (4,475,546 samples, 0.03%)</title><rect x="162.5" y="325" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="165.50" y="335.5" ></text>
</g>
<g >
<title>import_name (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1045" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1142.92" y="1055.5" ></text>
</g>
<g >
<title>do_call&lt;pyo3::impl_::trampoline::trampoline::{closure_env#0}&lt;pyo3::impl_::trampoline::noargs::{closure_env#0}, *mut pyo3_ffi::object::PyObject&gt;, core::result::Result&lt;*mut pyo3_ffi::object::PyObject, pyo3::err::PyErr&gt;&gt; (31,486,934 samples, 0.23%)</title><rect x="116.6" y="1237" width="2.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="119.58" y="1247.5" ></text>
</g>
<g >
<title>map_into_ptr&lt;i32, pyo3::err::PyErr&gt; (35,985,346 samples, 0.26%)</title><rect x="899.2" y="869" width="3.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="902.21" y="879.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4,239,150 samples, 0.03%)</title><rect x="162.9" y="213" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="165.88" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4,475,546 samples, 0.03%)</title><rect x="162.5" y="149" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="165.50" y="159.5" ></text>
</g>
<g >
<title>new_reference (4,498,331 samples, 0.03%)</title><rect x="881.5" y="933" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="884.45" y="943.5" ></text>
</g>
<g >
<title>_PyEval_FrameClearAndPop (188,915,072 samples, 1.37%)</title><rect x="977.2" y="1061" width="16.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="980.16" y="1071.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,463,125 samples, 0.03%)</title><rect x="33.9" y="485" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="36.88" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (22,244,792 samples, 0.16%)</title><rect x="32.4" y="1189" width="1.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="35.35" y="1199.5" ></text>
</g>
<g >
<title>object_vacall (4,415,815 samples, 0.03%)</title><rect x="1133.0" y="421" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1136.01" y="431.5" ></text>
</g>
<g >
<title>PyDict_GetItemRef (260,892,895 samples, 1.90%)</title><rect x="740.2" y="997" width="22.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="743.21" y="1007.5" >P..</text>
</g>
<g >
<title>builtin_exec_impl (4,472,337 samples, 0.03%)</title><rect x="164.0" y="1013" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="167.01" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,478,886 samples, 0.03%)</title><rect x="201.8" y="373" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="204.81" y="383.5" ></text>
</g>
<g >
<title>marshal_loads (4,477,879 samples, 0.03%)</title><rect x="26.2" y="629" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="29.20" y="639.5" ></text>
</g>
<g >
<title>fixup_slot_dispatchers (4,475,546 samples, 0.03%)</title><rect x="162.5" y="309" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="165.50" y="319.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (8,936,670 samples, 0.06%)</title><rect x="43.9" y="757" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="46.91" y="767.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1093" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1142.92" y="1103.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,440,989 samples, 0.03%)</title><rect x="164.4" y="549" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="167.39" y="559.5" ></text>
</g>
<g >
<title>set_traverse (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="821" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1136.39" y="831.5" ></text>
</g>
<g >
<title>lambdef_rule (4,440,989 samples, 0.03%)</title><rect x="164.4" y="389" width="0.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="167.39" y="399.5" ></text>
</g>
<g >
<title>import_name (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1173" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1161.44" y="1183.5" ></text>
</g>
<g >
<title>bpf_lsm_inode_permission (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="453" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1135.27" y="463.5" ></text>
</g>
<g >
<title>import_find_and_load (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="437" width="1.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1120.24" y="447.5" ></text>
</g>
<g >
<title>import_find_and_load (4,415,815 samples, 0.03%)</title><rect x="1133.0" y="453" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1136.01" y="463.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,474,879 samples, 0.03%)</title><rect x="32.4" y="1077" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.35" y="1087.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="869" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1162.19" y="879.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="837" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1161.44" y="847.5" ></text>
</g>
<g >
<title>_imp_get_frozen_object_impl (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="677" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1137.24" y="687.5" ></text>
</g>
<g >
<title>builtin_exec (4,440,989 samples, 0.03%)</title><rect x="164.4" y="1157" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="167.39" y="1167.5" ></text>
</g>
<g >
<title>import_find_and_load (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1077" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="46.91" y="1087.5" ></text>
</g>
<g >
<title>gc_alloc (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="469" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1161.82" y="479.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1125" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="164.73" y="1135.5" ></text>
</g>
<g >
<title>pytime_mul (8,996,703 samples, 0.07%)</title><rect x="879.5" y="949" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="882.52" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,485,429 samples, 0.03%)</title><rect x="161.7" y="597" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="164.73" y="607.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (8,833,289 samples, 0.06%)</title><rect x="163.2" y="709" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="166.25" y="719.5" ></text>
</g>
<g >
<title>object_vacall (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1301" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.44" y="1311.5" ></text>
</g>
<g >
<title>gc_visit_heaps (4,496,781 samples, 0.03%)</title><rect x="318.8" y="1141" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="321.81" y="1151.5" ></text>
</g>
<g >
<title>_Py_atomic_compare_exchange_uint8 (229,405,252 samples, 1.67%)</title><rect x="575.0" y="981" width="19.7" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="578.05" y="991.5" ></text>
</g>
<g >
<title>mi_find_page (4,474,879 samples, 0.03%)</title><rect x="32.4" y="485" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="35.35" y="495.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (8,931,350 samples, 0.06%)</title><rect x="31.6" y="853" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="34.59" y="863.5" ></text>
</g>
<g >
<title>object_vacall (4,472,337 samples, 0.03%)</title><rect x="164.0" y="1093" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="167.01" y="1103.5" ></text>
</g>
<g >
<title>gc_collect_internal (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="533" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1135.63" y="543.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,474,879 samples, 0.03%)</title><rect x="32.4" y="693" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="35.35" y="703.5" ></text>
</g>
<g >
<title>lookup_tp_dict (26,989,559 samples, 0.20%)</title><rect x="772.2" y="965" width="2.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="775.24" y="975.5" ></text>
</g>
<g >
<title>mi_heap_area_visitor (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="869" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1136.39" y="879.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_split (4,498,558 samples, 0.03%)</title><rect x="201.4" y="1269" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="204.43" y="1279.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_split (85,465,902 samples, 0.62%)</title><rect x="1092.5" y="1013" width="7.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1095.54" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="741" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1142.92" y="751.5" ></text>
</g>
<g >
<title>initialize_token (4,440,989 samples, 0.03%)</title><rect x="164.4" y="261" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="167.39" y="271.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (9,476,686,296 samples, 68.90%)</title><rect x="320.4" y="1077" width="813.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="323.35" y="1087.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>builtin_exec (4,477,879 samples, 0.03%)</title><rect x="26.2" y="853" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="29.20" y="863.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,478,886 samples, 0.03%)</title><rect x="201.8" y="501" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="204.81" y="511.5" ></text>
</g>
<g >
<title>builtin_exec (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="917" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1142.92" y="927.5" ></text>
</g>
<g >
<title>import_name (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="821" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1137.24" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,477,879 samples, 0.03%)</title><rect x="26.2" y="997" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="29.20" y="1007.5" ></text>
</g>
<g >
<title>__ct_user_exit (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="709" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1137.01" y="719.5" ></text>
</g>
<g >
<title>_Py_module_getattro (782,650,814 samples, 5.69%)</title><rect x="1020.0" y="1029" width="67.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1022.99" y="1039.5" >_Py_mod..</text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,440,989 samples, 0.03%)</title><rect x="164.4" y="853" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="167.39" y="863.5" ></text>
</g>
<g >
<title>import_ensure_initialized (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="261" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1142.92" y="271.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,478,886 samples, 0.03%)</title><rect x="201.8" y="853" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="204.81" y="863.5" ></text>
</g>
<g >
<title>type_call (4,485,429 samples, 0.03%)</title><rect x="161.7" y="949" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="164.73" y="959.5" ></text>
</g>
<g >
<title>PyDict_SetDefaultRef (4,492,904 samples, 0.03%)</title><rect x="43.9" y="437" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="46.91" y="447.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (13,304,576 samples, 0.10%)</title><rect x="26.6" y="917" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="29.59" y="927.5" ></text>
</g>
<g >
<title>_Py_dict_lookup_threadsafe (4,475,546 samples, 0.03%)</title><rect x="162.5" y="245" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="165.50" y="255.5" ></text>
</g>
<g >
<title>r_object (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="581" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1161.82" y="591.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1221" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="28.44" y="1231.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="709" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1122.93" y="719.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,909,404 samples, 0.06%)</title><rect x="162.1" y="581" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.12" y="591.5" ></text>
</g>
<g >
<title>Py_DECREF (4,481,043 samples, 0.03%)</title><rect x="1117.6" y="277" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1120.62" y="287.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,485,429 samples, 0.03%)</title><rect x="161.7" y="613" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="164.73" y="623.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="549" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1161.44" y="559.5" ></text>
</g>
<g >
<title>insertdict (4,443,766 samples, 0.03%)</title><rect x="44.3" y="341" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="47.29" y="351.5" ></text>
</g>
<g >
<title>Py_DECREF (8,996,665 samples, 0.07%)</title><rect x="992.6" y="981" width="0.8" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="995.59" y="991.5" ></text>
</g>
<g >
<title>builtin_exec_impl (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="709" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1162.19" y="719.5" ></text>
</g>
<g >
<title>run_mod (9,476,686,296 samples, 68.90%)</title><rect x="320.4" y="1125" width="813.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="323.35" y="1135.5" >run_mod</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,498,274 samples, 0.03%)</title><rect x="1086.8" y="1013" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1089.75" y="1023.5" ></text>
</g>
<g >
<title>builtin_exec (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="341" width="1.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1120.24" y="351.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="389" width="1.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1120.24" y="399.5" ></text>
</g>
<g >
<title>_PyRun_AnyFileObject (9,476,686,296 samples, 68.90%)</title><rect x="320.4" y="1173" width="813.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="323.35" y="1183.5" >_PyRun_AnyFileObject</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1189" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="165.88" y="1199.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="293" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1162.19" y="303.5" ></text>
</g>
<g >
<title>{closure#0} (22,490,608 samples, 0.16%)</title><rect x="11.9" y="1253" width="2.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="14.93" y="1263.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,985,509 samples, 0.01%)</title><rect x="45.4" y="1285" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="48.45" y="1295.5" ></text>
</g>
<g >
<title>_Py_MergeZeroLocalRefcount (26,990,071 samples, 0.20%)</title><rect x="627.9" y="965" width="2.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="630.92" y="975.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (49,258,000 samples, 0.36%)</title><rect x="1116.1" y="1061" width="4.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1119.08" y="1071.5" ></text>
</g>
<g >
<title>_mi_heap_area_visit_blocks (4,508,963 samples, 0.03%)</title><rect x="319.6" y="1045" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="322.58" y="1055.5" ></text>
</g>
<g >
<title>_PyThreadState_GET (4,498,397 samples, 0.03%)</title><rect x="956.3" y="981" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="959.32" y="991.5" ></text>
</g>
<g >
<title>method_vectorcall_FASTCALL_KEYWORDS (4,063,892 samples, 0.03%)</title><rect x="49.1" y="805" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="52.09" y="815.5" ></text>
</g>
<g >
<title>_Py_MakeRecCheck (31,487,383 samples, 0.23%)</title><rect x="787.7" y="1029" width="2.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="790.68" y="1039.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,485,429 samples, 0.03%)</title><rect x="161.7" y="565" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="164.73" y="575.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,433,858 samples, 0.03%)</title><rect x="162.1" y="517" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="165.12" y="527.5" ></text>
</g>
<g >
<title>import_find_and_load (8,931,350 samples, 0.06%)</title><rect x="31.6" y="597" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="34.59" y="607.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="485" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1122.93" y="495.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint16_relaxed (53,972,907 samples, 0.39%)</title><rect x="1122.6" y="1061" width="4.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1125.62" y="1071.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,475,328 samples, 0.03%)</title><rect x="33.1" y="501" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="36.11" y="511.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,450,819 samples, 0.03%)</title><rect x="25.4" y="917" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="28.44" y="927.5" ></text>
</g>
<g >
<title>r_object (4,481,255 samples, 0.03%)</title><rect x="25.8" y="565" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="28.82" y="575.5" ></text>
</g>
<g >
<title>import_name (4,472,337 samples, 0.03%)</title><rect x="164.0" y="965" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="167.01" y="975.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (8,936,670 samples, 0.06%)</title><rect x="43.9" y="949" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="46.91" y="959.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,450,819 samples, 0.03%)</title><rect x="25.4" y="805" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="28.44" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (35,823,000 samples, 0.26%)</title><rect x="1116.9" y="645" width="3.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1119.85" y="655.5" ></text>
</g>
<g >
<title>setitem_take2_lock_held (17,988,003 samples, 0.13%)</title><rect x="23.9" y="1269" width="1.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="26.89" y="1279.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="1061" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1136.39" y="1071.5" ></text>
</g>
<g >
<title>PyMutex_LockFast (229,405,252 samples, 1.67%)</title><rect x="575.0" y="997" width="19.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="578.05" y="1007.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,474,486 samples, 0.03%)</title><rect x="27.3" y="469" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="30.34" y="479.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="181" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1142.92" y="191.5" ></text>
</g>
<g >
<title>ensure_shared_on_read (13,487,757 samples, 0.10%)</title><rect x="1043.1" y="933" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1046.15" y="943.5" ></text>
</g>
<g >
<title>PyObject_Call (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="677" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1142.92" y="687.5" ></text>
</g>
<g >
<title>import_name (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1061" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="165.12" y="1071.5" ></text>
</g>
<g >
<title>type_call (49,258,000 samples, 0.36%)</title><rect x="1116.1" y="1045" width="4.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1119.08" y="1055.5" ></text>
</g>
<g >
<title>_io__Buffered_read (4,453,660 samples, 0.03%)</title><rect x="32.0" y="469" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="34.97" y="479.5" ></text>
</g>
<g >
<title>mi_heap_visit_areas_page (8,946,758 samples, 0.07%)</title><rect x="1118.8" y="485" width="0.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1121.77" y="495.5" ></text>
</g>
<g >
<title>_start (9,535,213,986 samples, 69.33%)</title><rect x="316.8" y="1301" width="818.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="319.78" y="1311.5" >_start</text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="901" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1137.24" y="911.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,383,060 samples, 0.03%)</title><rect x="32.7" y="821" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="35.74" y="831.5" ></text>
</g>
<g >
<title>import_find_and_load (4,478,886 samples, 0.03%)</title><rect x="201.8" y="837" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="204.81" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,063,892 samples, 0.03%)</title><rect x="49.1" y="629" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="52.09" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,386,853 samples, 0.10%)</title><rect x="33.1" y="869" width="1.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="36.11" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1285" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="28.44" y="1295.5" ></text>
</g>
<g >
<title>assume (49,478,900 samples, 0.36%)</title><rect x="895.0" y="965" width="4.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="897.96" y="975.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="325" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1142.92" y="335.5" ></text>
</g>
<g >
<title>r_object (4,481,255 samples, 0.03%)</title><rect x="25.8" y="597" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="28.82" y="607.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1093" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="164.73" y="1103.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,477,690 samples, 0.03%)</title><rect x="31.6" y="437" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="34.59" y="447.5" ></text>
</g>
<g >
<title>PyLong_FromLong (17,993,308 samples, 0.13%)</title><rect x="86.1" y="1285" width="1.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="89.10" y="1295.5" ></text>
</g>
<g >
<title>lambda_param_rule (4,440,989 samples, 0.03%)</title><rect x="164.4" y="293" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="167.39" y="303.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,415,815 samples, 0.03%)</title><rect x="1133.0" y="517" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1136.01" y="527.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,472,337 samples, 0.03%)</title><rect x="164.0" y="1141" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="167.01" y="1151.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (13,304,576 samples, 0.10%)</title><rect x="26.6" y="965" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="29.59" y="975.5" ></text>
</g>
<g >
<title>update_refs (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="837" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1136.39" y="847.5" ></text>
</g>
<g >
<title>initialize_locals (67,465,431 samples, 0.49%)</title><rect x="971.4" y="1045" width="5.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="974.37" y="1055.5" ></text>
</g>
<g >
<title>DK_UNICODE_ENTRIES (17,993,275 samples, 0.13%)</title><rect x="621.0" y="997" width="1.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="623.97" y="1007.5" ></text>
</g>
<g >
<title>_Py_HandlePending (4,448,400 samples, 0.03%)</title><rect x="33.5" y="661" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="36.50" y="671.5" ></text>
</g>
<g >
<title>import_find_and_load (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1029" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="165.12" y="1039.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="869" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1142.92" y="879.5" ></text>
</g>
<g >
<title>dict_setdefault_ref_lock_held (4,485,429 samples, 0.03%)</title><rect x="161.7" y="357" width="0.4" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="164.73" y="367.5" ></text>
</g>
<g >
<title>py_get_system_clock (764,650,706 samples, 5.56%)</title><rect x="814.7" y="981" width="65.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="817.69" y="991.5" >py_get_..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="901" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1161.82" y="911.5" ></text>
</g>
<g >
<title>_PyCriticalSection_End (4,455,522 samples, 0.03%)</title><rect x="163.6" y="421" width="0.4" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="166.62" y="431.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (21,981,843 samples, 0.16%)</title><rect x="162.1" y="1285" width="1.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="165.12" y="1295.5" ></text>
</g>
<g >
<title>_PyCodec_LookupTextEncoding (4,063,892 samples, 0.03%)</title><rect x="49.1" y="693" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="52.09" y="703.5" ></text>
</g>
<g >
<title>do_anonymous_page (4,450,819 samples, 0.03%)</title><rect x="25.4" y="133" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="28.44" y="143.5" ></text>
</g>
<g >
<title>_mi_prim_thread_id (13,494,803 samples, 0.10%)</title><rect x="625.6" y="917" width="1.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="628.60" y="927.5" ></text>
</g>
<g >
<title>object_vacall (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="677" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1122.93" y="687.5" ></text>
</g>
<g >
<title>_Py_dict_lookup (310,364,618 samples, 2.26%)</title><rect x="639.5" y="997" width="26.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="642.49" y="1007.5" >_..</text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="757" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1135.63" y="767.5" ></text>
</g>
<g >
<title>object_vacall (4,383,060 samples, 0.03%)</title><rect x="32.7" y="773" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="35.74" y="783.5" ></text>
</g>
<g >
<title>do_lookup (17,992,264 samples, 0.13%)</title><rect x="1188.5" y="1285" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1191.46" y="1295.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,931,350 samples, 0.06%)</title><rect x="31.6" y="1125" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="34.59" y="1135.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="821" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1161.82" y="831.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1141" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1142.92" y="1151.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="277" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1142.92" y="287.5" ></text>
</g>
<g >
<title>_io_FileIO___init__ (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="661" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1135.27" y="671.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (13,493,807 samples, 0.10%)</title><rect x="42.7" y="1285" width="1.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="45.75" y="1295.5" ></text>
</g>
<g >
<title>import_name (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="469" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1120.24" y="479.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,443,766 samples, 0.03%)</title><rect x="44.3" y="437" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="47.29" y="447.5" ></text>
</g>
<g >
<title>import_name (4,440,989 samples, 0.03%)</title><rect x="164.4" y="1093" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="167.39" y="1103.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallDictTstate (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="773" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1122.93" y="783.5" ></text>
</g>
<g >
<title>exec_code_in_module (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="1077" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1136.39" y="1087.5" ></text>
</g>
<g >
<title>_mi_heap_malloc_zero_ex (62,968,733 samples, 0.46%)</title><rect x="683.1" y="933" width="5.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="686.10" y="943.5" ></text>
</g>
<g >
<title>slot_tp_init (4,485,429 samples, 0.03%)</title><rect x="161.7" y="933" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="164.73" y="943.5" ></text>
</g>
<g >
<title>_PyType_LookupRef (94,461,311 samples, 0.69%)</title><rect x="774.6" y="997" width="8.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="777.56" y="1007.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,383,060 samples, 0.03%)</title><rect x="32.7" y="677" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="35.74" y="687.5" ></text>
</g>
<g >
<title>_mi_deferred_free (4,498,393 samples, 0.03%)</title><rect x="690.8" y="981" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="693.82" y="991.5" ></text>
</g>
<g >
<title>object_vacall (31,176,142 samples, 0.23%)</title><rect x="31.6" y="1285" width="2.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="34.59" y="1295.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1125" width="1.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="165.88" y="1135.5" ></text>
</g>
<g >
<title>PyImport_Import (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1157" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="52.09" y="1167.5" ></text>
</g>
<g >
<title>try_charge_memcg (4,359,608 samples, 0.03%)</title><rect x="27.0" y="149" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="29.97" y="159.5" ></text>
</g>
<g >
<title>read_object (4,485,429 samples, 0.03%)</title><rect x="161.7" y="501" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="164.73" y="511.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,383,060 samples, 0.03%)</title><rect x="32.7" y="757" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="35.74" y="767.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL (4,478,886 samples, 0.03%)</title><rect x="201.8" y="757" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="204.81" y="767.5" ></text>
</g>
<g >
<title>marshal_loads_impl (4,481,255 samples, 0.03%)</title><rect x="25.8" y="629" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="28.82" y="639.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="421" width="1.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1120.24" y="431.5" ></text>
</g>
<g >
<title>_PyThreadState_PushFrame (8,996,404 samples, 0.07%)</title><rect x="243.5" y="1301" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="246.46" y="1311.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,477,879 samples, 0.03%)</title><rect x="26.2" y="933" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="29.20" y="943.5" ></text>
</g>
<g >
<title>return_int (4,498,054 samples, 0.03%)</title><rect x="1164.9" y="1301" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1167.92" y="1311.5" ></text>
</g>
<g >
<title>mi_find_free_page (4,239,150 samples, 0.03%)</title><rect x="162.9" y="453" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="165.88" y="463.5" ></text>
</g>
<g >
<title>r_object (4,477,879 samples, 0.03%)</title><rect x="26.2" y="533" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="29.20" y="543.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,475,328 samples, 0.03%)</title><rect x="33.1" y="597" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="36.11" y="607.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (13,304,576 samples, 0.10%)</title><rect x="26.6" y="1157" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="29.59" y="1167.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,440,989 samples, 0.03%)</title><rect x="164.4" y="1205" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="167.39" y="1215.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,475,546 samples, 0.03%)</title><rect x="162.5" y="165" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="165.50" y="175.5" ></text>
</g>
<g >
<title>_Py_EnterRecursiveCallTstate (44,982,345 samples, 0.33%)</title><rect x="786.5" y="1045" width="3.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="789.52" y="1055.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1205" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="164.73" y="1215.5" ></text>
</g>
<g >
<title>type_call (4,478,886 samples, 0.03%)</title><rect x="201.8" y="965" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="204.81" y="975.5" ></text>
</g>
<g >
<title>import_find_and_load (4,455,522 samples, 0.03%)</title><rect x="163.6" y="597" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="166.62" y="607.5" ></text>
</g>
<g >
<title>r_object (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="549" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1161.82" y="559.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="597" width="1.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1120.24" y="607.5" ></text>
</g>
<g >
<title>_PyFrame_SetStackPointer (40,483,863 samples, 0.29%)</title><rect x="994.5" y="1061" width="3.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="997.52" y="1071.5" ></text>
</g>
<g >
<title>_PyObject_Call (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="453" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1142.92" y="463.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,478,886 samples, 0.03%)</title><rect x="201.8" y="533" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="204.81" y="543.5" ></text>
</g>
<g >
<title>handle_mm_fault (4,450,819 samples, 0.03%)</title><rect x="25.4" y="165" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="28.44" y="175.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_unicode_threadsafe (292,371,271 samples, 2.13%)</title><rect x="1044.3" y="933" width="25.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1047.30" y="943.5" >u..</text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (4,383,060 samples, 0.03%)</title><rect x="32.7" y="501" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="35.74" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="565" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1162.19" y="575.5" ></text>
</g>
<g >
<title>{closure#0} (80,966,163 samples, 0.59%)</title><rect x="908.5" y="901" width="6.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="911.47" y="911.5" ></text>
</g>
<g >
<title>builtin_exec (4,455,522 samples, 0.03%)</title><rect x="163.6" y="501" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="166.62" y="511.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint8_relaxed (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="389" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1161.44" y="399.5" ></text>
</g>
<g >
<title>builtin_exec (4,485,429 samples, 0.03%)</title><rect x="161.7" y="805" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="164.73" y="815.5" ></text>
</g>
<g >
<title>builtin_exec (13,304,576 samples, 0.10%)</title><rect x="26.6" y="805" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="29.59" y="815.5" ></text>
</g>
<g >
<title>mi_find_free_page (4,474,879 samples, 0.03%)</title><rect x="32.4" y="469" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="35.35" y="479.5" ></text>
</g>
<g >
<title>gc_collect_main (4,470,482 samples, 0.03%)</title><rect x="26.6" y="613" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="29.59" y="623.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="1045" width="0.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1136.39" y="1055.5" ></text>
</g>
<g >
<title>visit_clear_unreachable (4,448,400 samples, 0.03%)</title><rect x="33.5" y="421" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="36.50" y="431.5" ></text>
</g>
<g >
<title>sched_tick (4,508,963 samples, 0.03%)</title><rect x="319.6" y="885" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="322.58" y="895.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,359,608 samples, 0.03%)</title><rect x="27.0" y="533" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="29.97" y="543.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4,474,879 samples, 0.03%)</title><rect x="32.4" y="277" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="35.35" y="287.5" ></text>
</g>
<g >
<title>do_lookup (4,485,429 samples, 0.03%)</title><rect x="161.7" y="309" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="164.73" y="319.5" ></text>
</g>
<g >
<title>unmarshal_frozen_code (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="661" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1137.24" y="671.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="245" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1162.19" y="255.5" ></text>
</g>
<g >
<title>mi_free (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="101" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1142.92" y="111.5" ></text>
</g>
<g >
<title>builtin_exec (8,931,350 samples, 0.06%)</title><rect x="31.6" y="1077" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="34.59" y="1087.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,443,766 samples, 0.03%)</title><rect x="44.3" y="533" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="47.29" y="543.5" ></text>
</g>
<g >
<title>gc_collect_main (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="645" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1161.44" y="655.5" ></text>
</g>
<g >
<title>mi_find_free_page (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="853" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1137.01" y="863.5" ></text>
</g>
<g >
<title>slot_tp_init (49,258,000 samples, 0.36%)</title><rect x="1116.1" y="917" width="4.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1119.08" y="927.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,485,429 samples, 0.03%)</title><rect x="161.7" y="549" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="164.73" y="559.5" ></text>
</g>
<g >
<title>type_new_init (4,450,819 samples, 0.03%)</title><rect x="25.4" y="421" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="28.44" y="431.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_NOARGS (35,987,286 samples, 0.26%)</title><rect x="224.2" y="1285" width="3.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="227.19" y="1295.5" ></text>
</g>
<g >
<title>_Py_atomic_load_ptr_relaxed (107,956,394 samples, 0.78%)</title><rect x="653.8" y="933" width="9.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="656.77" y="943.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,472,337 samples, 0.03%)</title><rect x="164.0" y="885" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="167.01" y="895.5" ></text>
</g>
<g >
<title>pymain_init (16,902,195 samples, 0.12%)</title><rect x="1133.4" y="1221" width="1.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1136.39" y="1231.5" ></text>
</g>
<g >
<title>managed_static_type_index_get (17,992,877 samples, 0.13%)</title><rect x="773.0" y="917" width="1.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="776.02" y="927.5" ></text>
</g>
<g >
<title>import_name (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="885" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1162.19" y="895.5" ></text>
</g>
<g >
<title>build_indices_unicode (4,477,879 samples, 0.03%)</title><rect x="26.2" y="389" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="29.20" y="399.5" ></text>
</g>
<g >
<title>try_with&lt;core::cell::Cell&lt;isize&gt;, pyo3::gil::increment_gil_count::{closure_env#0},  (8,995,473 samples, 0.07%)</title><rect x="1135.7" y="1269" width="0.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1138.68" y="1279.5" ></text>
</g>
<g >
<title>type_new_impl (4,063,892 samples, 0.03%)</title><rect x="49.1" y="229" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="52.09" y="239.5" ></text>
</g>
<g >
<title>_PyDict_SetItem_Take2 (4,443,766 samples, 0.03%)</title><rect x="44.3" y="373" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="47.29" y="383.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,443,766 samples, 0.03%)</title><rect x="44.3" y="501" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="47.29" y="511.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,453,660 samples, 0.03%)</title><rect x="32.0" y="517" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="34.97" y="527.5" ></text>
</g>
<g >
<title>_PyThreadState_GET (22,489,476 samples, 0.16%)</title><rect x="917.0" y="1045" width="1.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="919.96" y="1055.5" ></text>
</g>
<g >
<title>marshal_loads (4,492,904 samples, 0.03%)</title><rect x="43.9" y="613" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="46.91" y="623.5" ></text>
</g>
<g >
<title>PyType_HasFeature (8,995,904 samples, 0.07%)</title><rect x="571.6" y="1045" width="0.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="574.57" y="1055.5" ></text>
</g>
<g >
<title>insert_combined_dict (4,443,766 samples, 0.03%)</title><rect x="44.3" y="325" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="47.29" y="335.5" ></text>
</g>
<g >
<title>_mi_malloc_generic (26,990,027 samples, 0.20%)</title><rect x="690.8" y="997" width="2.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="693.82" y="1007.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,481,255 samples, 0.03%)</title><rect x="25.8" y="821" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="28.82" y="831.5" ></text>
</g>
<g >
<title>open64 (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="629" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1135.27" y="639.5" ></text>
</g>
<g >
<title>pyo3::impl_::trampoline::trampoline (251,896,604 samples, 1.83%)</title><rect x="893.8" y="981" width="21.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="896.80" y="991.5" >p..</text>
</g>
<g >
<title>slot_tp_init (35,823,000 samples, 0.26%)</title><rect x="1116.9" y="709" width="3.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1119.85" y="719.5" ></text>
</g>
<g >
<title>Py_RunMain (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1285" width="0.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="46.91" y="1295.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,472,337 samples, 0.03%)</title><rect x="164.0" y="677" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.01" y="687.5" ></text>
</g>
<g >
<title>_mi_heap_area_visit_blocks (4,979,668 samples, 0.04%)</title><rect x="318.4" y="1045" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="321.38" y="1055.5" ></text>
</g>
<g >
<title>builtin___build_class__ (4,063,892 samples, 0.03%)</title><rect x="49.1" y="309" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="52.09" y="319.5" ></text>
</g>
<g >
<title>gc_collect_main (8,992,398 samples, 0.07%)</title><rect x="318.8" y="1189" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="321.81" y="1199.5" ></text>
</g>
<g >
<title>import_name (4,450,819 samples, 0.03%)</title><rect x="25.4" y="885" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="28.44" y="895.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime_field (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="197" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1135.63" y="207.5" ></text>
</g>
<g >
<title>_PyDict_NotifyEvent (31,487,987 samples, 0.23%)</title><rect x="636.8" y="997" width="2.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="639.79" y="1007.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="933" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1161.82" y="943.5" ></text>
</g>
<g >
<title>mi_heap_area_visitor (4,448,400 samples, 0.03%)</title><rect x="33.5" y="501" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="36.50" y="511.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="357" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1162.19" y="367.5" ></text>
</g>
<g >
<title>_mi_malloc_generic (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="885" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1137.01" y="895.5" ></text>
</g>
<g >
<title>do_anonymous_page (4,239,150 samples, 0.03%)</title><rect x="162.9" y="277" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="165.88" y="287.5" ></text>
</g>
<g >
<title>_PyThreadState_HasStackSpace (17,991,054 samples, 0.13%)</title><rect x="969.8" y="1029" width="1.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="972.83" y="1039.5" ></text>
</g>
<g >
<title>import_find_and_load (4,478,886 samples, 0.03%)</title><rect x="201.8" y="517" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="204.81" y="527.5" ></text>
</g>
<g >
<title>object_vacall (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="949" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1137.24" y="959.5" ></text>
</g>
<g >
<title>benchlib_pyo3::__pyfunction_py_return_int (40,484,118 samples, 0.29%)</title><rect x="309.4" y="1285" width="3.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="312.45" y="1295.5" ></text>
</g>
<g >
<title>_PyVectorcall_Call (44,799,892 samples, 0.33%)</title><rect x="1116.1" y="805" width="3.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1119.08" y="815.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,477,879 samples, 0.03%)</title><rect x="26.2" y="1125" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="29.20" y="1135.5" ></text>
</g>
<g >
<title>expressions_rule (4,440,989 samples, 0.03%)</title><rect x="164.4" y="421" width="0.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="167.39" y="431.5" ></text>
</g>
<g >
<title>slot_tp_init (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1173" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="204.81" y="1183.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,440,989 samples, 0.03%)</title><rect x="164.4" y="1061" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="167.39" y="1071.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (8,909,404 samples, 0.06%)</title><rect x="162.1" y="629" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="165.12" y="639.5" ></text>
</g>
<g >
<title>object_vacall (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="405" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1120.24" y="415.5" ></text>
</g>
<g >
<title>builtin_exec (4,415,815 samples, 0.03%)</title><rect x="1133.0" y="549" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1136.01" y="559.5" ></text>
</g>
<g >
<title>_PyLong_Add (98,956,625 samples, 0.72%)</title><rect x="694.7" y="997" width="8.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="697.68" y="1007.5" ></text>
</g>
<g >
<title>Py_DECREF (17,993,645 samples, 0.13%)</title><rect x="1156.1" y="1269" width="1.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1159.12" y="1279.5" ></text>
</g>
<g >
<title>expression_rule (4,440,989 samples, 0.03%)</title><rect x="164.4" y="405" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="167.39" y="415.5" ></text>
</g>
<g >
<title>type_new (4,450,819 samples, 0.03%)</title><rect x="25.4" y="453" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="28.44" y="463.5" ></text>
</g>
<g >
<title>mi_heap_visit_blocks (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="565" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1161.44" y="575.5" ></text>
</g>
<g >
<title>update_refs (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="469" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1161.44" y="479.5" ></text>
</g>
<g >
<title>pytime_fromtimespec (62,964,083 samples, 0.46%)</title><rect x="874.9" y="965" width="5.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="877.89" y="975.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint32_acquire (8,996,382 samples, 0.07%)</title><rect x="1114.5" y="1029" width="0.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1117.54" y="1039.5" ></text>
</g>
<g >
<title>marshal_loads (4,239,150 samples, 0.03%)</title><rect x="162.9" y="661" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="165.88" y="671.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint32_acquire (17,988,157 samples, 0.13%)</title><rect x="725.5" y="997" width="1.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="728.55" y="1007.5" ></text>
</g>
<g >
<title>_PyObject_HAS_GC_BITS (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="405" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1161.44" y="415.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="581" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1135.63" y="591.5" ></text>
</g>
<g >
<title>_Py_MergeZeroLocalRefcount (8,996,749 samples, 0.07%)</title><rect x="939.0" y="1045" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="941.95" y="1055.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="837" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1161.82" y="847.5" ></text>
</g>
<g >
<title>[libc.so.6] (44,542,722 samples, 0.32%)</title><rect x="45.6" y="1301" width="3.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="48.62" y="1311.5" ></text>
</g>
<g >
<title>_PyObject_HashFast (22,489,620 samples, 0.16%)</title><rect x="609.0" y="1013" width="1.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="612.01" y="1023.5" ></text>
</g>
<g >
<title>_PyMutex_Unlock (107,955,285 samples, 0.78%)</title><rect x="596.3" y="1013" width="9.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="599.27" y="1023.5" ></text>
</g>
<g >
<title>mi_heap_visit_pages (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="533" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1161.44" y="543.5" ></text>
</g>
<g >
<title>Py_DECREF (4,482,849 samples, 0.03%)</title><rect x="1118.4" y="549" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1121.39" y="559.5" ></text>
</g>
<g >
<title>method_vectorcall_O (4,433,858 samples, 0.03%)</title><rect x="162.1" y="373" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="165.12" y="383.5" ></text>
</g>
<g >
<title>_PyObject_CallFunctionVa (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="837" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1135.27" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,931,350 samples, 0.06%)</title><rect x="31.6" y="837" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="34.59" y="847.5" ></text>
</g>
<g >
<title>run_mod (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="533" width="1.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1120.24" y="543.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1205" width="0.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="46.91" y="1215.5" ></text>
</g>
<g >
<title>try_with&lt;core::cell::Cell&lt;isize&gt;, pyo3::gil::increment_gil_count::{closure_env#0},  (49,478,900 samples, 0.36%)</title><rect x="895.0" y="933" width="4.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="897.96" y="943.5" ></text>
</g>
<g >
<title>_mi_heap_malloc_zero (4,440,989 samples, 0.03%)</title><rect x="164.4" y="165" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="167.39" y="175.5" ></text>
</g>
<g >
<title>_DK_ENTRIES (22,483,632 samples, 0.16%)</title><rect x="1045.1" y="901" width="1.9" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1048.08" y="911.5" ></text>
</g>
<g >
<title>_PyType_GetDict (26,989,559 samples, 0.20%)</title><rect x="772.2" y="981" width="2.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="775.24" y="991.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,475,328 samples, 0.03%)</title><rect x="33.1" y="533" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="36.11" y="543.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (8,931,350 samples, 0.06%)</title><rect x="31.6" y="805" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="34.59" y="815.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (8,976,892 samples, 0.07%)</title><rect x="1116.1" y="741" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1119.08" y="751.5" ></text>
</g>
<g >
<title>mi_block_next (13,494,194 samples, 0.10%)</title><rect x="687.3" y="885" width="1.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="690.34" y="895.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="757" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1162.19" y="767.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="997" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1142.92" y="1007.5" ></text>
</g>
<g >
<title>gc_visit_heaps_lock_held (8,946,758 samples, 0.07%)</title><rect x="1118.8" y="549" width="0.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1121.77" y="559.5" ></text>
</g>
<g >
<title>_PyIOBase_check_readable (4,469,071 samples, 0.03%)</title><rect x="164.8" y="1301" width="0.4" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="167.77" y="1311.5" ></text>
</g>
<g >
<title>pyo3::conversions::std::num::&lt;impl pyo3::conversion::IntoPyObject for i32&gt;::into_pyobject (35,985,346 samples, 0.26%)</title><rect x="899.2" y="805" width="3.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="902.21" y="815.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4,508,963 samples, 0.03%)</title><rect x="319.6" y="965" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="322.58" y="975.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,485,429 samples, 0.03%)</title><rect x="161.7" y="821" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="164.73" y="831.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,909,404 samples, 0.06%)</title><rect x="162.1" y="981" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="165.12" y="991.5" ></text>
</g>
<g >
<title>import_find_and_load (13,304,576 samples, 0.10%)</title><rect x="26.6" y="1093" width="1.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="29.59" y="1103.5" ></text>
</g>
<g >
<title>_PyFrame_ClearExceptCode (4,482,849 samples, 0.03%)</title><rect x="1118.4" y="597" width="0.4" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="1121.39" y="607.5" ></text>
</g>
<g >
<title>irqentry_enter (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="725" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1137.01" y="735.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,450,819 samples, 0.03%)</title><rect x="25.4" y="565" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="28.44" y="575.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4,508,963 samples, 0.03%)</title><rect x="319.6" y="949" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="322.58" y="959.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,472,337 samples, 0.03%)</title><rect x="164.0" y="1221" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="167.01" y="1231.5" ></text>
</g>
<g >
<title>_PyDict_SetItem_Take2 (1,097,539,906 samples, 7.98%)</title><rect x="572.3" y="1045" width="94.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="575.35" y="1055.5" >_PyDict_Set..</text>
</g>
<g >
<title>builtin_exec_impl (4,485,429 samples, 0.03%)</title><rect x="161.7" y="789" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="164.73" y="799.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,463,125 samples, 0.03%)</title><rect x="33.9" y="533" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="36.88" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,072,439 samples, 0.10%)</title><rect x="162.9" y="917" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.88" y="927.5" ></text>
</g>
<g >
<title>_Py_TryXGetRef (4,498,313 samples, 0.03%)</title><rect x="1042.8" y="933" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1045.76" y="943.5" ></text>
</g>
<g >
<title>builtin_exec (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="853" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1161.82" y="863.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (4,474,879 samples, 0.03%)</title><rect x="32.4" y="533" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="35.35" y="543.5" ></text>
</g>
<g >
<title>benchlib_pyo3::__pyfunction_py_return_int (22,491,668 samples, 0.16%)</title><rect x="1138.0" y="1301" width="1.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1140.99" y="1311.5" ></text>
</g>
<g >
<title>builtin___import__ (4,474,879 samples, 0.03%)</title><rect x="32.4" y="1045" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="35.35" y="1055.5" ></text>
</g>
<g >
<title>_PyObject_CallFunctionVa (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="1077" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1137.24" y="1087.5" ></text>
</g>
<g >
<title>PyImport_Import (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="389" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1142.92" y="399.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="629" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1120.24" y="639.5" ></text>
</g>
<g >
<title>import_find_and_load (4,440,989 samples, 0.03%)</title><rect x="164.4" y="933" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="167.39" y="943.5" ></text>
</g>
<g >
<title>_PyType_IsReady (31,486,548 samples, 0.23%)</title><rect x="1101.4" y="1045" width="2.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1104.42" y="1055.5" ></text>
</g>
<g >
<title>builtin___build_class__ (4,450,819 samples, 0.03%)</title><rect x="25.4" y="517" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="28.44" y="527.5" ></text>
</g>
<g >
<title>builtin_exec_impl (8,834,094 samples, 0.06%)</title><rect x="27.0" y="597" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="29.97" y="607.5" ></text>
</g>
<g >
<title>setitem_take2_lock_held (710,700,588 samples, 5.17%)</title><rect x="605.5" y="1029" width="61.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="608.53" y="1039.5" >setite..</text>
</g>
<g >
<title>builtin_exec_impl (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="901" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1136.75" y="911.5" ></text>
</g>
<g >
<title>builtin_exec (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1077" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="165.88" y="1087.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="917" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1137.24" y="927.5" ></text>
</g>
<g >
<title>pyo3::conversions::std::num::&lt;impl pyo3::conversion::IntoPyObject for i32&gt;::into_pyobject (40,483,233 samples, 0.29%)</title><rect x="112.3" y="1285" width="3.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="115.34" y="1295.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1269" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1142.92" y="1279.5" ></text>
</g>
<g >
<title>_mi_heap_area_visit_blocks (4,472,337 samples, 0.03%)</title><rect x="164.0" y="485" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="167.01" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="581" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1135.27" y="591.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,063,892 samples, 0.03%)</title><rect x="49.1" y="645" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="52.09" y="655.5" ></text>
</g>
<g >
<title>mi_heap_malloc_small_zero (4,440,989 samples, 0.03%)</title><rect x="164.4" y="133" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="167.39" y="143.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,472,337 samples, 0.03%)</title><rect x="164.0" y="1109" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="167.01" y="1119.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,463,125 samples, 0.03%)</title><rect x="33.9" y="565" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="36.88" y="575.5" ></text>
</g>
<g >
<title>init_importlib_external (5,745,542 samples, 0.04%)</title><rect x="1133.7" y="1141" width="0.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1136.75" y="1151.5" ></text>
</g>
<g >
<title>meth_dealloc (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="149" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1142.92" y="159.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1045" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="165.88" y="1055.5" ></text>
</g>
<g >
<title>PyObject_Call (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1061" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="164.73" y="1071.5" ></text>
</g>
<g >
<title>import_name (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="661" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1162.19" y="671.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4,498,092 samples, 0.03%)</title><rect x="803.5" y="981" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="806.50" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="821" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1135.63" y="831.5" ></text>
</g>
<g >
<title>type_new (4,377,767 samples, 0.03%)</title><rect x="163.2" y="373" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="166.25" y="383.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,063,892 samples, 0.03%)</title><rect x="49.1" y="341" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="52.09" y="351.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,479,687 samples, 0.03%)</title><rect x="1119.5" y="565" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1122.54" y="575.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallDictTstate (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="549" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1142.92" y="559.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (4,475,546 samples, 0.03%)</title><rect x="162.5" y="37" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="165.50" y="47.5" ></text>
</g>
<g >
<title>mi_page_queue_find_free_ex (4,239,150 samples, 0.03%)</title><rect x="162.9" y="437" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="165.88" y="447.5" ></text>
</g>
<g >
<title>builtin___import___impl (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="853" width="0.4" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1161.44" y="863.5" ></text>
</g>
<g >
<title>tupleiter_next (4,463,125 samples, 0.03%)</title><rect x="33.9" y="469" width="0.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="36.88" y="479.5" ></text>
</g>
<g >
<title>_Py_IsOwnedByCurrentThread (4,474,486 samples, 0.03%)</title><rect x="27.3" y="421" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="30.34" y="431.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallDictTstate (4,450,819 samples, 0.03%)</title><rect x="25.4" y="501" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="28.44" y="511.5" ></text>
</g>
<g >
<title>builtin_exec (4,477,879 samples, 0.03%)</title><rect x="26.2" y="1045" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="29.20" y="1055.5" ></text>
</g>
<g >
<title>_PyType_IsReady (26,988,513 samples, 0.20%)</title><rect x="197.6" y="1285" width="2.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="200.57" y="1295.5" ></text>
</g>
<g >
<title>__pte_offset_map_lock (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="261" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1162.19" y="271.5" ></text>
</g>
<g >
<title>get_float_freelist (17,992,372 samples, 0.13%)</title><rect x="881.8" y="965" width="1.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="884.84" y="975.5" ></text>
</g>
<g >
<title>object_vacall (8,909,404 samples, 0.06%)</title><rect x="162.1" y="997" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="165.12" y="1007.5" ></text>
</g>
<g >
<title>builtin_exec (13,386,853 samples, 0.10%)</title><rect x="33.1" y="837" width="1.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="36.11" y="847.5" ></text>
</g>
<g >
<title>ensure_shared_on_read (4,479,687 samples, 0.03%)</title><rect x="1119.5" y="517" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1122.54" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="757" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1135.27" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,450,819 samples, 0.03%)</title><rect x="25.4" y="661" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="28.44" y="671.5" ></text>
</g>
<g >
<title>pyrun_file (9,476,686,296 samples, 68.90%)</title><rect x="320.4" y="1141" width="813.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="323.35" y="1151.5" >pyrun_file</text>
</g>
<g >
<title>Py_SET_TYPE (8,996,249 samples, 0.07%)</title><rect x="689.7" y="981" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="692.66" y="991.5" ></text>
</g>
<g >
<title>builtin_exec (8,833,289 samples, 0.06%)</title><rect x="163.2" y="693" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="166.25" y="703.5" ></text>
</g>
<g >
<title>new_reference (22,490,227 samples, 0.16%)</title><rect x="255.8" y="1285" width="1.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="258.81" y="1295.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1093" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1161.44" y="1103.5" ></text>
</g>
<g >
<title>r_object (4,474,879 samples, 0.03%)</title><rect x="32.4" y="629" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="35.35" y="639.5" ></text>
</g>
<g >
<title>Py_DECREF (4,495,617 samples, 0.03%)</title><rect x="319.2" y="1141" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="322.19" y="1151.5" ></text>
</g>
<g >
<title>perf_event_task_tick (4,508,963 samples, 0.03%)</title><rect x="319.6" y="869" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="322.58" y="879.5" ></text>
</g>
<g >
<title>gc_collect_internal (4,470,482 samples, 0.03%)</title><rect x="26.6" y="597" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="29.59" y="607.5" ></text>
</g>
<g >
<title>_Py_initialize_generic (1,796,000 samples, 0.01%)</title><rect x="1133.6" y="1109" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1136.59" y="1119.5" ></text>
</g>
<g >
<title>init_sys_streams (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="1157" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1137.53" y="1167.5" ></text>
</g>
<g >
<title>object_vacall (13,072,439 samples, 0.10%)</title><rect x="162.9" y="949" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="165.88" y="959.5" ></text>
</g>
<g >
<title>PyImport_Import (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="1109" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1137.24" y="1119.5" ></text>
</g>
<g >
<title>r_object (4,474,879 samples, 0.03%)</title><rect x="32.4" y="549" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="35.35" y="559.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="837" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1162.19" y="847.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (71,971,687 samples, 0.52%)</title><rect x="72.6" y="1285" width="6.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="75.59" y="1295.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="517" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1122.93" y="527.5" ></text>
</g>
<g >
<title>_PyCriticalSection_Begin (260,892,087 samples, 1.90%)</title><rect x="572.3" y="1029" width="22.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="575.35" y="1039.5" >_..</text>
</g>
<g >
<title>_raw_spin_lock (4,498,092 samples, 0.03%)</title><rect x="803.5" y="869" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="806.50" y="879.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_NOARGS (4,453,660 samples, 0.03%)</title><rect x="32.0" y="389" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="34.97" y="399.5" ></text>
</g>
<g >
<title>builtin_exec (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="725" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1162.19" y="735.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="773" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1161.44" y="783.5" ></text>
</g>
<g >
<title>PyTime_AsSecondsDouble (13,494,485 samples, 0.10%)</title><rect x="87.6" y="1285" width="1.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="90.64" y="1295.5" ></text>
</g>
<g >
<title>_Py_dict_lookup_threadsafe (427,305,997 samples, 3.11%)</title><rect x="1032.7" y="949" width="36.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1035.73" y="959.5" >_Py..</text>
</g>
<g >
<title>import_find_and_load (4,472,337 samples, 0.03%)</title><rect x="164.0" y="741" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="167.01" y="751.5" ></text>
</g>
<g >
<title>_Py_module_getattro_impl (575,762,190 samples, 4.19%)</title><rect x="733.3" y="1029" width="49.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="736.27" y="1039.5" >_Py_..</text>
</g>
<g >
<title>object_vacall (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="821" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.19" y="831.5" ></text>
</g>
<g >
<title>_Py_NewRef (49,480,602 samples, 0.36%)</title><rect x="965.6" y="1029" width="4.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="968.58" y="1039.5" ></text>
</g>
<g >
<title>float_richcompare (89,961,923 samples, 0.65%)</title><rect x="796.2" y="1029" width="7.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="799.17" y="1039.5" ></text>
</g>
<g >
<title>type_call (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="773" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1142.92" y="783.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint64_relaxed (8,996,496 samples, 0.07%)</title><rect x="1019.2" y="1013" width="0.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1022.22" y="1023.5" ></text>
</g>
<g >
<title>_imp_get_frozen_object_impl (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="517" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1162.19" y="527.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (4,478,886 samples, 0.03%)</title><rect x="201.8" y="981" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="204.81" y="991.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint32_relaxed (22,487,354 samples, 0.16%)</title><rect x="1084.8" y="965" width="2.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1087.82" y="975.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,909,404 samples, 0.06%)</title><rect x="162.1" y="789" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="165.12" y="799.5" ></text>
</g>
<g >
<title>Py_DECREF (4,474,486 samples, 0.03%)</title><rect x="27.3" y="437" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="30.34" y="447.5" ></text>
</g>
<g >
<title>PyObject_Malloc (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="437" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1161.82" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_handler (4,508,963 samples, 0.03%)</title><rect x="319.6" y="917" width="0.4" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="322.58" y="927.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,072,439 samples, 0.10%)</title><rect x="162.9" y="725" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="165.88" y="735.5" ></text>
</g>
<g >
<title>mi_block_next (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="325" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1161.82" y="335.5" ></text>
</g>
<g >
<title>managed_static_type_state_get (17,992,877 samples, 0.13%)</title><rect x="773.0" y="933" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="776.02" y="943.5" ></text>
</g>
<g >
<title>object_vacall (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="597" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.19" y="607.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="789" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1162.19" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,063,892 samples, 0.03%)</title><rect x="49.1" y="373" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="52.09" y="383.5" ></text>
</g>
<g >
<title>PyType_HasFeature (35,985,796 samples, 0.26%)</title><rect x="730.2" y="1045" width="3.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="733.18" y="1055.5" ></text>
</g>
<g >
<title>_PyEval_FrameClearAndPop (31,483,830 samples, 0.23%)</title><rect x="204.1" y="1285" width="2.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="207.13" y="1295.5" ></text>
</g>
<g >
<title>codec_getitem_checked (4,063,892 samples, 0.03%)</title><rect x="49.1" y="709" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="52.09" y="719.5" ></text>
</g>
<g >
<title>_PyDictKeys_StringLookupSplit (85,465,902 samples, 0.62%)</title><rect x="1092.5" y="1029" width="7.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1095.54" y="1039.5" ></text>
</g>
<g >
<title>update_process_times (4,498,383 samples, 0.03%)</title><rect x="1131.9" y="965" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1134.89" y="975.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="837" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1142.92" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="693" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1161.44" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,936,670 samples, 0.06%)</title><rect x="43.9" y="677" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="46.91" y="687.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="773" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1135.63" y="783.5" ></text>
</g>
<g >
<title>mark_heap_visitor (4,472,337 samples, 0.03%)</title><rect x="164.0" y="469" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="167.01" y="479.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,415,815 samples, 0.03%)</title><rect x="1133.0" y="405" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1136.01" y="415.5" ></text>
</g>
<g >
<title>float_dealloc (44,982,698 samples, 0.33%)</title><rect x="952.8" y="1045" width="3.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="955.85" y="1055.5" ></text>
</g>
<g >
<title>builtin_exec (3,413,644 samples, 0.02%)</title><rect x="1134.2" y="885" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1137.24" y="895.5" ></text>
</g>
<g >
<title>mi_page_free_list_extend (4,359,608 samples, 0.03%)</title><rect x="27.0" y="325" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="29.97" y="335.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,474,879 samples, 0.03%)</title><rect x="32.4" y="821" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="35.35" y="831.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="869" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1161.82" y="879.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,477,690 samples, 0.03%)</title><rect x="31.6" y="389" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="34.59" y="399.5" ></text>
</g>
<g >
<title>PyDict_GetItemRef (458,793,164 samples, 3.34%)</title><rect x="1030.0" y="981" width="39.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1033.03" y="991.5" >PyD..</text>
</g>
<g >
<title>gc_collect_internal (9,012,651 samples, 0.07%)</title><rect x="319.6" y="1189" width="0.8" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="322.58" y="1199.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,481,255 samples, 0.03%)</title><rect x="25.8" y="677" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="28.82" y="687.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,443,766 samples, 0.03%)</title><rect x="44.3" y="565" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="47.29" y="575.5" ></text>
</g>
<g >
<title>_Py_TryIncrefFast (4,475,546 samples, 0.03%)</title><rect x="162.5" y="197" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="165.50" y="207.5" ></text>
</g>
<g >
<title>import_name (4,455,522 samples, 0.03%)</title><rect x="163.6" y="629" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="166.62" y="639.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (8,913,326 samples, 0.06%)</title><rect x="164.0" y="1269" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="167.01" y="1279.5" ></text>
</g>
<g >
<title>builtin_exec (4,443,766 samples, 0.03%)</title><rect x="44.3" y="453" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="47.29" y="463.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4,450,819 samples, 0.03%)</title><rect x="25.4" y="69" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="28.44" y="79.5" ></text>
</g>
<g >
<title>_PyFrame_Initialize (31,482,545 samples, 0.23%)</title><rect x="139.4" y="1285" width="2.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="142.35" y="1295.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (8,931,350 samples, 0.06%)</title><rect x="31.6" y="661" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="34.59" y="671.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4,474,879 samples, 0.03%)</title><rect x="32.4" y="293" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="35.35" y="303.5" ></text>
</g>
<g >
<title>_PyObject_HashFast (17,992,036 samples, 0.13%)</title><rect x="761.1" y="981" width="1.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="764.05" y="991.5" ></text>
</g>
<g >
<title>builtin_exec (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="581" width="1.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1120.24" y="591.5" ></text>
</g>
<g >
<title>subtype_traverse (4,496,781 samples, 0.03%)</title><rect x="318.8" y="997" width="0.4" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="321.81" y="1007.5" ></text>
</g>
<g >
<title>r_object (4,481,255 samples, 0.03%)</title><rect x="25.8" y="581" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="28.82" y="591.5" ></text>
</g>
<g >
<title>import_name (13,072,439 samples, 0.10%)</title><rect x="162.9" y="1205" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="165.88" y="1215.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_unicode_threadsafe (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="885" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1137.53" y="895.5" ></text>
</g>
<g >
<title>builtin_exec_impl (8,833,289 samples, 0.06%)</title><rect x="163.2" y="677" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="166.25" y="687.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1125" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="204.81" y="1135.5" ></text>
</g>
<g >
<title>marshal_loads (4,474,879 samples, 0.03%)</title><rect x="32.4" y="677" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="35.35" y="687.5" ></text>
</g>
<g >
<title>object_vacall (8,936,670 samples, 0.06%)</title><rect x="43.9" y="901" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="46.91" y="911.5" ></text>
</g>
<g >
<title>builtin_exec (4,440,989 samples, 0.03%)</title><rect x="164.4" y="837" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="167.39" y="847.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallDictTstate (49,258,000 samples, 0.36%)</title><rect x="1116.1" y="997" width="4.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1119.08" y="1007.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (13,386,853 samples, 0.10%)</title><rect x="33.1" y="885" width="1.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="36.11" y="895.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1093" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="46.91" y="1103.5" ></text>
</g>
<g >
<title>r_object (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="565" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1161.82" y="575.5" ></text>
</g>
<g >
<title>Py_INCREF (4,463,125 samples, 0.03%)</title><rect x="33.9" y="437" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="36.88" y="447.5" ></text>
</g>
<g >
<title>pymain_run_python (9,476,686,296 samples, 68.90%)</title><rect x="320.4" y="1221" width="813.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="323.35" y="1231.5" >pymain_run_python</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (13,304,576 samples, 0.10%)</title><rect x="26.6" y="1109" width="1.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="29.59" y="1119.5" ></text>
</g>
<g >
<title>_Py_TryIncrefFast (8,995,441 samples, 0.07%)</title><rect x="721.3" y="981" width="0.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="724.30" y="991.5" ></text>
</g>
<g >
<title>mi_heap_area_visitor (4,508,963 samples, 0.03%)</title><rect x="319.6" y="1061" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="322.58" y="1071.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2,659,843 samples, 0.02%)</title><rect x="1134.0" y="757" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1137.01" y="767.5" ></text>
</g>
<g >
<title>builtin_exec_impl (22,244,792 samples, 0.16%)</title><rect x="32.4" y="1205" width="1.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="35.35" y="1215.5" ></text>
</g>
<g >
<title>import_find_and_load (4,474,879 samples, 0.03%)</title><rect x="32.4" y="997" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="35.35" y="1007.5" ></text>
</g>
<g >
<title>object_vacall (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1125" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.82" y="1135.5" ></text>
</g>
<g >
<title>object_vacall (4,478,886 samples, 0.03%)</title><rect x="201.8" y="485" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="204.81" y="495.5" ></text>
</g>
<g >
<title>import_find_and_load (4,485,429 samples, 0.03%)</title><rect x="161.7" y="661" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="164.73" y="671.5" ></text>
</g>
<g >
<title>gc_visit_heaps (8,946,758 samples, 0.07%)</title><rect x="1118.8" y="565" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1121.77" y="575.5" ></text>
</g>
<g >
<title>builtin___import__ (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="309" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1142.92" y="319.5" ></text>
</g>
<g >
<title>type_call (49,258,000 samples, 0.36%)</title><rect x="1116.1" y="933" width="4.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1119.08" y="943.5" ></text>
</g>
<g >
<title>_DK_ENTRIES (80,966,367 samples, 0.59%)</title><rect x="528.4" y="981" width="6.9" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="531.35" y="991.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1253" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="28.44" y="1263.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,453,660 samples, 0.03%)</title><rect x="32.0" y="309" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="34.97" y="319.5" ></text>
</g>
<g >
<title>{closure#0}&lt;i32, pyo3::err::PyErr&gt; (17,991,302 samples, 0.13%)</title><rect x="312.9" y="1253" width="1.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="315.92" y="1263.5" ></text>
</g>
<g >
<title>builtin_exec (4,450,819 samples, 0.03%)</title><rect x="25.4" y="949" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="28.44" y="959.5" ></text>
</g>
<g >
<title>type_call (4,475,546 samples, 0.03%)</title><rect x="162.5" y="357" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="165.50" y="367.5" ></text>
</g>
<g >
<title>Py_DECREF (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="165" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1142.92" y="175.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (13,304,576 samples, 0.10%)</title><rect x="26.6" y="1045" width="1.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="29.59" y="1055.5" ></text>
</g>
<g >
<title>_PyLong_FromSTwoDigits (40,481,003 samples, 0.29%)</title><rect x="699.7" y="981" width="3.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="702.69" y="991.5" ></text>
</g>
<g >
<title>object_vacall (5,745,542 samples, 0.04%)</title><rect x="1133.7" y="1013" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1136.75" y="1023.5" ></text>
</g>
<g >
<title>_Py_dict_lookup (4,485,429 samples, 0.03%)</title><rect x="161.7" y="341" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="164.73" y="351.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (8,909,404 samples, 0.06%)</title><rect x="162.1" y="661" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="165.12" y="671.5" ></text>
</g>
<g >
<title>{closure#0}&lt;pyo3::impl_::trampoline::noargs::{closure_env#0}, *mut pyo3_ffi::object::PyObject&gt; (35,985,346 samples, 0.26%)</title><rect x="899.2" y="917" width="3.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="902.21" y="927.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="853" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1142.92" y="863.5" ></text>
</g>
<g >
<title>intern_common (4,485,429 samples, 0.03%)</title><rect x="161.7" y="389" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="164.73" y="399.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1237" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="165.12" y="1247.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1093" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="52.09" y="1103.5" ></text>
</g>
<g >
<title>pycore_init_types (1,796,000 samples, 0.01%)</title><rect x="1133.6" y="1141" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1136.59" y="1151.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4,508,963 samples, 0.03%)</title><rect x="319.6" y="981" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="322.58" y="991.5" ></text>
</g>
<g >
<title>_PyMutex_Unlock (4,455,522 samples, 0.03%)</title><rect x="163.6" y="405" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="166.62" y="415.5" ></text>
</g>
<g >
<title>import_find_and_load (4,477,879 samples, 0.03%)</title><rect x="26.2" y="757" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="29.20" y="767.5" ></text>
</g>
<g >
<title>r_object (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="453" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1162.19" y="463.5" ></text>
</g>
<g >
<title>object_vacall (8,931,350 samples, 0.06%)</title><rect x="31.6" y="565" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="34.59" y="575.5" ></text>
</g>
<g >
<title>managed_static_type_state_get (8,995,576 samples, 0.07%)</title><rect x="1103.3" y="981" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1106.35" y="991.5" ></text>
</g>
<g >
<title>PyObject_Free (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="133" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1142.92" y="143.5" ></text>
</g>
<g >
<title>Py_DECREF (40,482,287 samples, 0.29%)</title><rect x="762.6" y="997" width="3.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="765.60" y="1007.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (4,485,429 samples, 0.03%)</title><rect x="161.7" y="917" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="164.73" y="927.5" ></text>
</g>
<g >
<title>update_refs (4,497,974 samples, 0.03%)</title><rect x="317.2" y="1013" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="320.17" y="1023.5" ></text>
</g>
<g >
<title>import_name (17,769,913 samples, 0.13%)</title><rect x="32.7" y="965" width="1.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="35.74" y="975.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,492,904 samples, 0.03%)</title><rect x="43.9" y="629" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="46.91" y="639.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,063,892 samples, 0.03%)</title><rect x="49.1" y="853" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="52.09" y="863.5" ></text>
</g>
<g >
<title>native_write_msr (4,508,963 samples, 0.03%)</title><rect x="319.6" y="821" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="322.58" y="831.5" ></text>
</g>
<g >
<title>_PyObject_CallFunctionVa (4,475,546 samples, 0.03%)</title><rect x="162.5" y="405" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="165.50" y="415.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint32_relaxed (4,498,250 samples, 0.03%)</title><rect x="553.1" y="949" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="556.05" y="959.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1061" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1161.44" y="1071.5" ></text>
</g>
<g >
<title>builtin_exec (8,909,404 samples, 0.06%)</title><rect x="162.1" y="1125" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="165.12" y="1135.5" ></text>
</g>
<g >
<title>gc_visit_heaps_lock_held (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="581" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1161.44" y="591.5" ></text>
</g>
<g >
<title>vma_alloc_folio_noprof (4,239,150 samples, 0.03%)</title><rect x="162.9" y="261" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="165.88" y="271.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,440,989 samples, 0.03%)</title><rect x="164.4" y="1237" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="167.39" y="1247.5" ></text>
</g>
<g >
<title>gc_visit_heaps_lock_held (4,472,337 samples, 0.03%)</title><rect x="164.0" y="581" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="167.01" y="591.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4,498,092 samples, 0.03%)</title><rect x="803.5" y="997" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="806.50" y="1007.5" ></text>
</g>
<g >
<title>[benchlib_pyo3.cpython-313t-x86_64-linux-gnu.so] (8,996,747 samples, 0.07%)</title><rect x="44.7" y="1301" width="0.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="47.67" y="1311.5" ></text>
</g>
<g >
<title>builtin_eval_impl (4,440,989 samples, 0.03%)</title><rect x="164.4" y="517" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="167.39" y="527.5" ></text>
</g>
<g >
<title>builtin___import__ (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1125" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1162.19" y="1135.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,440,989 samples, 0.03%)</title><rect x="164.4" y="917" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="167.39" y="927.5" ></text>
</g>
<g >
<title>_PyObject_Init (17,992,758 samples, 0.13%)</title><rect x="880.3" y="965" width="1.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="883.30" y="975.5" ></text>
</g>
<g >
<title>builtin___import__ (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="869" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1161.44" y="879.5" ></text>
</g>
<g >
<title>mi_heap_visit_pages (8,946,758 samples, 0.07%)</title><rect x="1118.8" y="501" width="0.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1121.77" y="511.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,063,892 samples, 0.03%)</title><rect x="49.1" y="965" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="52.09" y="975.5" ></text>
</g>
<g >
<title>object_vacall (17,782,455 samples, 0.13%)</title><rect x="26.2" y="1253" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="29.20" y="1263.5" ></text>
</g>
<g >
<title>unicodekeys_lookup_unicode_threadsafe (71,971,865 samples, 0.52%)</title><rect x="754.9" y="949" width="6.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="757.88" y="959.5" ></text>
</g>
<g >
<title>do_user_addr_fault (4,239,150 samples, 0.03%)</title><rect x="162.9" y="325" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="165.88" y="335.5" ></text>
</g>
<g >
<title>import_find_and_load (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="821" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1161.44" y="831.5" ></text>
</g>
<g >
<title>_mi_heap_malloc_zero (62,968,733 samples, 0.46%)</title><rect x="683.1" y="949" width="5.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="686.10" y="959.5" ></text>
</g>
<g >
<title>handle_mm_fault (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="309" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1162.19" y="319.5" ></text>
</g>
<g >
<title>dictkeys_get_index (4,498,446 samples, 0.03%)</title><rect x="1069.0" y="901" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1072.00" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (22,244,792 samples, 0.16%)</title><rect x="32.4" y="1173" width="1.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.35" y="1183.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (5,745,542 samples, 0.04%)</title><rect x="1133.7" y="1029" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1136.75" y="1039.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,477,690 samples, 0.03%)</title><rect x="31.6" y="405" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="34.59" y="415.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,443,766 samples, 0.03%)</title><rect x="44.3" y="613" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="47.29" y="623.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (5,745,542 samples, 0.04%)</title><rect x="1133.7" y="997" width="0.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1136.75" y="1007.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (8,936,670 samples, 0.06%)</title><rect x="43.9" y="725" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="46.91" y="735.5" ></text>
</g>
<g >
<title>r_object (4,239,150 samples, 0.03%)</title><rect x="162.9" y="613" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="165.88" y="623.5" ></text>
</g>
<g >
<title>_PyType_LookupRef (94,456,353 samples, 0.69%)</title><rect x="722.1" y="1013" width="8.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="725.08" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,383,060 samples, 0.03%)</title><rect x="32.7" y="885" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.74" y="895.5" ></text>
</g>
<g >
<title>_Py_dict_lookup_threadsafe (985,088,588 samples, 7.16%)</title><rect x="478.6" y="1029" width="84.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="481.57" y="1039.5" >_Py_dict_..</text>
</g>
<g >
<title>eval_rule (4,440,989 samples, 0.03%)</title><rect x="164.4" y="437" width="0.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="167.39" y="447.5" ></text>
</g>
<g >
<title>_Py_atomic_compare_exchange_uint8 (4,455,522 samples, 0.03%)</title><rect x="163.6" y="389" width="0.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="166.62" y="399.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint32_acquire (4,497,807 samples, 0.03%)</title><rect x="780.0" y="981" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="782.96" y="991.5" ></text>
</g>
<g >
<title>object_vacall (4,477,879 samples, 0.03%)</title><rect x="26.2" y="917" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="29.20" y="927.5" ></text>
</g>
<g >
<title>_PyUnicode_InternImmortal (4,477,879 samples, 0.03%)</title><rect x="26.2" y="501" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="29.20" y="511.5" ></text>
</g>
<g >
<title>PyObject_CallNoArgs (4,433,858 samples, 0.03%)</title><rect x="162.1" y="485" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="165.12" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,494,472 samples, 0.10%)</title><rect x="964.4" y="1029" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="967.42" y="1039.5" ></text>
</g>
<g >
<title>PyFloat_FromDouble (8,996,863 samples, 0.07%)</title><rect x="85.3" y="1285" width="0.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="88.33" y="1295.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (13,304,576 samples, 0.10%)</title><rect x="26.6" y="853" width="1.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="29.59" y="863.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,931,350 samples, 0.06%)</title><rect x="31.6" y="1109" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="34.59" y="1119.5" ></text>
</g>
<g >
<title>_io_open (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="789" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1135.27" y="799.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1109" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="52.09" y="1119.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (8,909,404 samples, 0.06%)</title><rect x="162.1" y="709" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="165.12" y="719.5" ></text>
</g>
<g >
<title>do_call&lt;pyo3::impl_::trampoline::trampoline::{closure_env#0}&lt;pyo3::impl_::trampoline::noargs::{closure_env#0}, *mut pyo3_ffi::object::PyObject&gt;, core::result::Result&lt;*mut pyo3_ffi::object::PyObject, pyo3::err::PyErr&gt;&gt; (35,985,346 samples, 0.26%)</title><rect x="899.2" y="933" width="3.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="902.21" y="943.5" ></text>
</g>
<g >
<title>read_object (4,492,904 samples, 0.03%)</title><rect x="43.9" y="581" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="46.91" y="591.5" ></text>
</g>
<g >
<title>pymain_main (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1269" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="52.09" y="1279.5" ></text>
</g>
<g >
<title>_PyThreadState_GET (17,992,372 samples, 0.13%)</title><rect x="881.8" y="933" width="1.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="884.84" y="943.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (4,063,892 samples, 0.03%)</title><rect x="49.1" y="357" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="52.09" y="367.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,485,429 samples, 0.03%)</title><rect x="161.7" y="725" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="164.73" y="735.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (8,822,297 samples, 0.06%)</title><rect x="1132.6" y="789" width="0.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1135.63" y="799.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,985,509 samples, 0.01%)</title><rect x="45.4" y="1269" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="48.45" y="1279.5" ></text>
</g>
<g >
<title>slot_tp_init (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1253" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="164.73" y="1263.5" ></text>
</g>
<g >
<title>_PyImport_CheckGILForModule (4,478,886 samples, 0.03%)</title><rect x="201.8" y="709" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="204.81" y="719.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (8,931,350 samples, 0.06%)</title><rect x="31.6" y="1189" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="34.59" y="1199.5" ></text>
</g>
<g >
<title>object_vacall (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1173" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1142.92" y="1183.5" ></text>
</g>
<g >
<title>do_lookup (67,473,127 samples, 0.49%)</title><rect x="1094.1" y="981" width="5.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1097.09" y="991.5" ></text>
</g>
<g >
<title>mark_heap_visitor (4,448,400 samples, 0.03%)</title><rect x="33.5" y="469" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="36.50" y="479.5" ></text>
</g>
<g >
<title>__slab_free (4,475,546 samples, 0.03%)</title><rect x="162.5" y="53" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="165.50" y="63.5" ></text>
</g>
<g >
<title>dictkeys_get_index (4,477,879 samples, 0.03%)</title><rect x="26.2" y="373" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="29.20" y="383.5" ></text>
</g>
<g >
<title>_PyType_AllocNoTrack (4,450,819 samples, 0.03%)</title><rect x="25.4" y="373" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="28.44" y="383.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (854,623,159 samples, 6.21%)</title><rect x="1013.8" y="1045" width="73.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1016.82" y="1055.5" >PyObject..</text>
</g>
<g >
<title>_Py_qsbr_shared_current (53,976,873 samples, 0.39%)</title><rect x="1127.3" y="1045" width="4.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1130.25" y="1055.5" ></text>
</g>
<g >
<title>mi_block_set_nextx (4,359,608 samples, 0.03%)</title><rect x="27.0" y="293" width="0.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="29.97" y="303.5" ></text>
</g>
<g >
<title>compare_unicode_unicode_threadsafe (256,392,562 samples, 1.86%)</title><rect x="1047.0" y="901" width="22.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1050.01" y="911.5" >c..</text>
</g>
<g >
<title>import_name (8,936,670 samples, 0.06%)</title><rect x="43.9" y="1109" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="46.91" y="1119.5" ></text>
</g>
<g >
<title>handle_mm_fault (4,239,150 samples, 0.03%)</title><rect x="162.9" y="309" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="165.88" y="319.5" ></text>
</g>
<g >
<title>marshal_loads (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="629" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1161.82" y="639.5" ></text>
</g>
<g >
<title>r_object (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="517" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1161.82" y="527.5" ></text>
</g>
<g >
<title>PyTime_AsSecondsDouble (121,452,389 samples, 0.88%)</title><rect x="883.4" y="981" width="10.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="886.38" y="991.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,474,879 samples, 0.03%)</title><rect x="32.4" y="1061" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="35.35" y="1071.5" ></text>
</g>
<g >
<title>increment_gil_count (8,995,473 samples, 0.07%)</title><rect x="1135.7" y="1285" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1138.68" y="1295.5" ></text>
</g>
<g >
<title>_PyObject_MallocWithType (4,359,608 samples, 0.03%)</title><rect x="27.0" y="421" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.97" y="431.5" ></text>
</g>
<g >
<title>_mi_segment_page_of (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="85" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1142.92" y="95.5" ></text>
</g>
<g >
<title>marshal_loads (4,481,255 samples, 0.03%)</title><rect x="25.8" y="645" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="28.82" y="655.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (4,508,963 samples, 0.03%)</title><rect x="319.6" y="853" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="322.58" y="863.5" ></text>
</g>
<g >
<title>mi_find_page (13,494,757 samples, 0.10%)</title><rect x="692.0" y="981" width="1.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="694.98" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,440,989 samples, 0.03%)</title><rect x="164.4" y="869" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="167.39" y="879.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="805" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1162.19" y="815.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1237" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="28.82" y="1247.5" ></text>
</g>
<g >
<title>_PyObject_MallocWithType (4,322,042 samples, 0.03%)</title><rect x="1158.8" y="453" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1161.82" y="463.5" ></text>
</g>
<g >
<title>mi_heap_visit_blocks (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="933" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1136.39" y="943.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi (4,498,486 samples, 0.03%)</title><rect x="672.7" y="965" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="675.68" y="975.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (8,834,094 samples, 0.06%)</title><rect x="27.0" y="629" width="0.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="29.97" y="639.5" ></text>
</g>
<g >
<title>import_name (8,931,350 samples, 0.06%)</title><rect x="31.6" y="1013" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="34.59" y="1023.5" ></text>
</g>
<g >
<title>_mi_malloc_generic (4,474,879 samples, 0.03%)</title><rect x="32.4" y="501" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="35.35" y="511.5" ></text>
</g>
<g >
<title>import_find_and_load (4,472,337 samples, 0.03%)</title><rect x="164.0" y="933" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="167.01" y="943.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (4,377,767 samples, 0.03%)</title><rect x="163.2" y="517" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="166.25" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,474,879 samples, 0.03%)</title><rect x="32.4" y="741" width="0.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="35.35" y="751.5" ></text>
</g>
<g >
<title>compare_unicode_unicode_threadsafe (17,992,264 samples, 0.13%)</title><rect x="1188.5" y="1269" width="1.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1191.46" y="1279.5" ></text>
</g>
<g >
<title>mi_page_extend_free (3,085,699 samples, 0.02%)</title><rect x="1133.7" y="725" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1136.75" y="735.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="325" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1162.19" y="335.5" ></text>
</g>
<g >
<title>update_process_times (4,481,255 samples, 0.03%)</title><rect x="25.8" y="277" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="28.82" y="287.5" ></text>
</g>
<g >
<title>_io_open_impl (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="773" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1135.27" y="783.5" ></text>
</g>
<g >
<title>r_object (4,239,150 samples, 0.03%)</title><rect x="162.9" y="533" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="165.88" y="543.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="949" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1142.92" y="959.5" ></text>
</g>
<g >
<title>import_find_and_load (8,931,350 samples, 0.06%)</title><rect x="31.6" y="981" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="34.59" y="991.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,063,892 samples, 0.03%)</title><rect x="49.1" y="437" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="52.09" y="447.5" ></text>
</g>
<g >
<title>_Py_atomic_store_uint32_relaxed (13,494,214 samples, 0.10%)</title><rect x="768.8" y="981" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="771.77" y="991.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (5,745,542 samples, 0.04%)</title><rect x="1133.7" y="1061" width="0.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1136.75" y="1071.5" ></text>
</g>
<g >
<title>mi_heap_malloc (62,968,733 samples, 0.46%)</title><rect x="683.1" y="965" width="5.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="686.10" y="975.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (44,799,892 samples, 0.33%)</title><rect x="1116.1" y="757" width="3.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1119.08" y="767.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (8,936,670 samples, 0.06%)</title><rect x="43.9" y="917" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="46.91" y="927.5" ></text>
</g>
<g >
<title>builtin_eval (4,440,989 samples, 0.03%)</title><rect x="164.4" y="533" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="167.39" y="543.5" ></text>
</g>
<g >
<title>pyo3::gil::GILGuard::assume (4,498,422 samples, 0.03%)</title><rect x="1161.8" y="1301" width="0.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1164.83" y="1311.5" ></text>
</g>
<g >
<title>Py_INCREF (49,480,602 samples, 0.36%)</title><rect x="965.6" y="1013" width="4.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="968.58" y="1023.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,498,383 samples, 0.03%)</title><rect x="1131.9" y="1061" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1134.89" y="1071.5" ></text>
</g>
<g >
<title>PyObject_GenericGetAttr (274,382,881 samples, 1.99%)</title><rect x="706.6" y="1045" width="23.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="709.64" y="1055.5" >P..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,474,486 samples, 0.03%)</title><rect x="27.3" y="453" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="30.34" y="463.5" ></text>
</g>
<g >
<title>PyDict_SetDefaultRef (4,477,879 samples, 0.03%)</title><rect x="26.2" y="469" width="0.4" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="29.20" y="479.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="581" width="0.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1162.19" y="591.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (8,909,404 samples, 0.06%)</title><rect x="162.1" y="757" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="165.12" y="767.5" ></text>
</g>
<g >
<title>import_find_and_load (4,472,337 samples, 0.03%)</title><rect x="164.0" y="1125" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="167.01" y="1135.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="805" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1161.44" y="815.5" ></text>
</g>
<g >
<title>_Py_atomic_load_uint64_relaxed (17,992,939 samples, 0.13%)</title><rect x="1099.9" y="1029" width="1.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1102.87" y="1039.5" ></text>
</g>
<g >
<title>_PyRun_StringFlagsWithName (4,485,429 samples, 0.03%)</title><rect x="161.7" y="773" width="0.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="164.73" y="783.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,478,886 samples, 0.03%)</title><rect x="201.8" y="581" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="204.81" y="591.5" ></text>
</g>
<g >
<title>PyObject_Free (31,487,731 samples, 0.23%)</title><rect x="625.2" y="965" width="2.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="628.21" y="975.5" ></text>
</g>
<g >
<title>object_vacall (4,450,819 samples, 0.03%)</title><rect x="25.4" y="1205" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.44" y="1215.5" ></text>
</g>
<g >
<title>_PyCodec_DecodeText (4,063,892 samples, 0.03%)</title><rect x="49.1" y="741" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="52.09" y="751.5" ></text>
</g>
<g >
<title>Py_DECREF (4,503,688 samples, 0.03%)</title><rect x="320.0" y="1157" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="322.97" y="1167.5" ></text>
</g>
<g >
<title>builtin___import__ (4,383,060 samples, 0.03%)</title><rect x="32.7" y="853" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="35.74" y="863.5" ></text>
</g>
<g >
<title>_PyType_GetDict (31,486,548 samples, 0.23%)</title><rect x="1101.4" y="1029" width="2.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1104.42" y="1039.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (4,469,740 samples, 0.03%)</title><rect x="1139.9" y="1253" width="0.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1142.92" y="1263.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (4,477,690 samples, 0.03%)</title><rect x="31.6" y="469" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="34.59" y="479.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,063,892 samples, 0.03%)</title><rect x="49.1" y="389" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="52.09" y="399.5" ></text>
</g>
<g >
<title>dictkeys_get_index (53,974,956 samples, 0.39%)</title><rect x="558.5" y="981" width="4.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="561.45" y="991.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (4,498,383 samples, 0.03%)</title><rect x="1131.9" y="901" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1134.89" y="911.5" ></text>
</g>
<g >
<title>dict_next_version (17,992,974 samples, 0.13%)</title><rect x="638.0" y="981" width="1.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="640.95" y="991.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (3,548,401 samples, 0.03%)</title><rect x="1134.5" y="981" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1137.53" y="991.5" ></text>
</g>
<g >
<title>builtin_exec (8,909,404 samples, 0.06%)</title><rect x="162.1" y="933" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="165.12" y="943.5" ></text>
</g>
<g >
<title>import_find_and_load (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1157" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="28.82" y="1167.5" ></text>
</g>
<g >
<title>deduce_unreachable_heap (4,472,337 samples, 0.03%)</title><rect x="164.0" y="613" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="167.01" y="623.5" ></text>
</g>
<g >
<title>slot_tp_init (4,485,429 samples, 0.03%)</title><rect x="161.7" y="1141" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="164.73" y="1151.5" ></text>
</g>
<g >
<title>mi_heap_visit_pages (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="437" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1135.63" y="447.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (1,376,405,375 samples, 10.01%)</title><rect x="998.0" y="1061" width="118.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1001.00" y="1071.5" >_PyObject_GetM..</text>
</g>
<g >
<title>_Py_atomic_load_uint64_acquire (53,976,873 samples, 0.39%)</title><rect x="1127.3" y="1029" width="4.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1130.25" y="1039.5" ></text>
</g>
<g >
<title>_PyOnceFlag_CallOnceSlow (4,475,546 samples, 0.03%)</title><rect x="162.5" y="469" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="165.50" y="479.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,463,125 samples, 0.03%)</title><rect x="33.9" y="629" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="36.88" y="639.5" ></text>
</g>
<g >
<title>do_richcompare (8,995,712 samples, 0.07%)</title><rect x="203.0" y="1269" width="0.7" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="205.97" y="1279.5" ></text>
</g>
<g >
<title>_Py_module_getattro_impl (778,152,540 samples, 5.66%)</title><rect x="1020.0" y="1013" width="66.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1022.99" y="1023.5" >_Py_mod..</text>
</g>
<g >
<title>time_time (935,582,913 samples, 6.80%)</title><rect x="813.5" y="1013" width="80.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="816.54" y="1023.5" >time_time</text>
</g>
<g >
<title>mi_block_set_next (4,359,608 samples, 0.03%)</title><rect x="27.0" y="309" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="29.97" y="319.5" ></text>
</g>
<g >
<title>object_vacall (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1109" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1161.44" y="1119.5" ></text>
</g>
<g >
<title>import_name (8,909,404 samples, 0.06%)</title><rect x="162.1" y="677" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="165.12" y="687.5" ></text>
</g>
<g >
<title>find_name_in_mro (4,377,767 samples, 0.03%)</title><rect x="163.2" y="309" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="166.25" y="319.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1269" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1161.44" y="1279.5" ></text>
</g>
<g >
<title>_PyRuntime (413,567,092 samples, 3.01%)</title><rect x="202.2" y="1301" width="35.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="205.20" y="1311.5" >_Py..</text>
</g>
<g >
<title>deduce_unreachable_heap (4,406,482 samples, 0.03%)</title><rect x="1132.6" y="517" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1135.63" y="527.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="1061" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1162.19" y="1071.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="1189" width="0.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1161.44" y="1199.5" ></text>
</g>
<g >
<title>panic_result_into_callback_output&lt;*mut pyo3_ffi::object::PyObject&gt; (8,996,530 samples, 0.07%)</title><rect x="903.5" y="965" width="0.7" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="906.45" y="975.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,477,879 samples, 0.03%)</title><rect x="26.2" y="869" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="29.20" y="879.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,450,819 samples, 0.03%)</title><rect x="25.4" y="597" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="28.44" y="607.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (4,474,879 samples, 0.03%)</title><rect x="32.4" y="245" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="35.35" y="255.5" ></text>
</g>
<g >
<title>import_name (8,768,440 samples, 0.06%)</title><rect x="1158.4" y="981" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1161.44" y="991.5" ></text>
</g>
<g >
<title>PyObject_Call (4,377,767 samples, 0.03%)</title><rect x="163.2" y="453" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="166.25" y="463.5" ></text>
</g>
<g >
<title>mi_heap_visit_pages (2,398,608 samples, 0.02%)</title><rect x="1133.4" y="901" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1136.39" y="911.5" ></text>
</g>
<g >
<title>bytes_decode (4,063,892 samples, 0.03%)</title><rect x="49.1" y="789" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="52.09" y="799.5" ></text>
</g>
<g >
<title>set&lt;isize&gt; (4,498,036 samples, 0.03%)</title><rect x="915.0" y="885" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="918.03" y="895.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (4,478,886 samples, 0.03%)</title><rect x="201.8" y="1093" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="204.81" y="1103.5" ></text>
</g>
<g >
<title>&lt;pyo3::gil::GILGuard as core::ops::drop::Drop&gt;::drop (22,490,608 samples, 0.16%)</title><rect x="11.9" y="1237" width="2.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="14.93" y="1247.5" ></text>
</g>
<g >
<title>builtin___import__ (4,472,337 samples, 0.03%)</title><rect x="164.0" y="1173" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="167.01" y="1183.5" ></text>
</g>
<g >
<title>_Py_TryIncrefFast (17,992,303 samples, 0.13%)</title><rect x="1113.0" y="1013" width="1.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1116.00" y="1023.5" ></text>
</g>
<g >
<title>builtin_exec_impl (4,458,108 samples, 0.03%)</title><rect x="1119.9" y="453" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1122.93" y="463.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (4,472,337 samples, 0.03%)</title><rect x="164.0" y="757" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="167.01" y="767.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (8,909,404 samples, 0.06%)</title><rect x="162.1" y="949" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="165.12" y="959.5" ></text>
</g>
<g >
<title>list___reversed__ (4,485,198 samples, 0.03%)</title><rect x="227.6" y="1285" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="230.65" y="1295.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (13,448,531 samples, 0.10%)</title><rect x="1117.2" y="357" width="1.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1120.24" y="367.5" ></text>
</g>
<g >
<title>import_find_and_load (8,936,670 samples, 0.06%)</title><rect x="43.9" y="741" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="46.91" y="751.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="917" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1161.44" y="927.5" ></text>
</g>
<g >
<title>object_vacall (4,440,989 samples, 0.03%)</title><rect x="164.4" y="901" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="167.39" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (13,304,576 samples, 0.10%)</title><rect x="26.6" y="757" width="1.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="29.59" y="767.5" ></text>
</g>
<g >
<title>import_find_and_load (3,767,644 samples, 0.03%)</title><rect x="1159.2" y="853" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1162.19" y="863.5" ></text>
</g>
<g >
<title>PyUnicode_DATA (22,490,847 samples, 0.16%)</title><rect x="1058.2" y="869" width="1.9" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1061.20" y="879.5" ></text>
</g>
<g >
<title>r_object (4,474,879 samples, 0.03%)</title><rect x="32.4" y="597" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="35.35" y="607.5" ></text>
</g>
<g >
<title>r_object (4,485,429 samples, 0.03%)</title><rect x="161.7" y="453" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="164.73" y="463.5" ></text>
</g>
<g >
<title>__tls_get_addr (40,482,095 samples, 0.29%)</title><rect x="908.5" y="869" width="3.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="911.47" y="879.5" ></text>
</g>
<g >
<title>builtin___import__ (4,063,892 samples, 0.03%)</title><rect x="49.1" y="565" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="52.09" y="575.5" ></text>
</g>
<g >
<title>mark_heap_visitor (4,498,474 samples, 0.03%)</title><rect x="316.8" y="1013" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="319.78" y="1023.5" ></text>
</g>
<g >
<title>deduce_unreachable_heap (4,446,398 samples, 0.03%)</title><rect x="1158.4" y="613" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1161.44" y="623.5" ></text>
</g>
<g >
<title>method_vectorcall_FASTCALL (4,453,660 samples, 0.03%)</title><rect x="32.0" y="485" width="0.4" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="34.97" y="495.5" ></text>
</g>
<g >
<title>Py_DECREF (4,497,913 samples, 0.03%)</title><rect x="622.5" y="997" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="625.51" y="1007.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallDictTstate (49,258,000 samples, 0.36%)</title><rect x="1116.1" y="885" width="4.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1119.08" y="895.5" ></text>
</g>
<g >
<title>mi_heap_area_visitor (4,472,337 samples, 0.03%)</title><rect x="164.0" y="501" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="167.01" y="511.5" ></text>
</g>
<g >
<title>type_traverse (4,498,474 samples, 0.03%)</title><rect x="316.8" y="981" width="0.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="319.78" y="991.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (4,481,255 samples, 0.03%)</title><rect x="25.8" y="1029" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="28.82" y="1039.5" ></text>
</g>
<g >
<title>r_object (4,474,879 samples, 0.03%)</title><rect x="32.4" y="565" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="35.35" y="575.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (8,936,670 samples, 0.06%)</title><rect x="43.9" y="805" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="46.91" y="815.5" ></text>
</g>
<g >
<title>type_new_impl (4,450,819 samples, 0.03%)</title><rect x="25.4" y="437" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="28.44" y="447.5" ></text>
</g>
<g >
<title>{closure#0}&lt;i32, pyo3::err::PyErr&gt; (35,985,346 samples, 0.26%)</title><rect x="899.2" y="837" width="3.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="902.21" y="847.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (17,769,913 samples, 0.13%)</title><rect x="32.7" y="997" width="1.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="35.74" y="1007.5" ></text>
</g>
<g >
<title>pyinit_main (4,063,892 samples, 0.03%)</title><rect x="49.1" y="1221" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="52.09" y="1231.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,164,229 samples, 0.03%)</title><rect x="1132.3" y="565" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1135.27" y="575.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (13,304,576 samples, 0.10%)</title><rect x="26.6" y="885" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="29.59" y="895.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (4,455,522 samples, 0.03%)</title><rect x="163.6" y="517" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="166.62" y="527.5" ></text>
</g>
<g >
<title>gc_collect_internal (8,946,758 samples, 0.07%)</title><rect x="1118.8" y="597" width="0.7" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1121.77" y="607.5" ></text>
</g>
<g >
<title>PyObject_Free (17,980,807 samples, 0.13%)</title><rect x="34.3" y="1301" width="1.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="37.26" y="1311.5" ></text>
</g>
<g >
<title>try_with&lt;core::cell::Cell&lt;isize&gt;, pyo3::gil::decrement_gil_count::{closure_env#0},  (80,966,163 samples, 0.59%)</title><rect x="908.5" y="917" width="6.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="911.47" y="927.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (4,477,690 samples, 0.03%)</title><rect x="31.6" y="517" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="34.59" y="527.5" ></text>
</g>
<g >
<title>_Py_ThreadId (4,498,293 samples, 0.03%)</title><rect x="1057.0" y="837" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1060.04" y="847.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (4,450,819 samples, 0.03%)</title><rect x="25.4" y="549" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="28.44" y="559.5" ></text>
</g>
<g >
<title>sre_ucs1_match (8,976,892 samples, 0.07%)</title><rect x="1116.1" y="645" width="0.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1119.08" y="655.5" ></text>
</g>
<g >
<title>mi_page_queue_find_free_ex (4,450,819 samples, 0.03%)</title><rect x="25.4" y="293" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="28.44" y="303.5" ></text>
</g>
<g >
<title>update_one_slot (4,063,892 samples, 0.03%)</title><rect x="49.1" y="197" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="52.09" y="207.5" ></text>
</g>
<g >
<title>import_find_and_load (4,481,255 samples, 0.03%)</title><rect x="25.8" y="773" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="28.82" y="783.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (13,304,576 samples, 0.10%)</title><rect x="26.6" y="821" width="1.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="29.59" y="831.5" ></text>
</g>
</g>
</svg>
