<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1222.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1205" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1205" > </text>
<g id="frames">
<g >
<title>_PyObject_VectorcallTstate (1,752,448 samples, 7.36%)</title><rect x="348.4" y="949" width="86.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="351.45" y="959.5" >_PyObject_..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,699,798 samples, 7.14%)</title><rect x="938.9" y="629" width="84.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="941.93" y="639.5" >_PyEval_E..</text>
</g>
<g >
<title>exc_page_fault (953,426 samples, 4.01%)</title><rect x="756.1" y="853" width="47.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="759.09" y="863.5" >exc_..</text>
</g>
<g >
<title>insertdict (1,741,598 samples, 7.32%)</title><rect x="262.1" y="341" width="86.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="265.12" y="351.5" >insertdict</text>
</g>
<g >
<title>handle_mm_fault (501,504 samples, 2.11%)</title><rect x="212.4" y="997" width="24.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="215.40" y="1007.5" >h..</text>
</g>
<g >
<title>init_interp_main (6,656,888 samples, 27.96%)</title><rect x="860.0" y="1013" width="330.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="863.03" y="1023.5" >init_interp_main</text>
</g>
<g >
<title>type_add_method (1,355,205 samples, 5.69%)</title><rect x="688.9" y="869" width="67.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="691.91" y="879.5" >type_ad..</text>
</g>
<g >
<title>import_star (1,741,598 samples, 7.32%)</title><rect x="262.1" y="421" width="86.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="265.12" y="431.5" >import_star</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,702,756 samples, 7.15%)</title><rect x="177.7" y="1109" width="84.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="180.71" y="1119.5" >[ld-linux..</text>
</g>
<g >
<title>_PyObject_MakeTpCall (1,591,806 samples, 6.69%)</title><rect x="860.0" y="885" width="78.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="863.03" y="895.5" >_PyObject..</text>
</g>
<g >
<title>mark_heap_visitor (1,699,798 samples, 7.14%)</title><rect x="938.9" y="421" width="84.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="941.93" y="431.5" >mark_heap..</text>
</g>
<g >
<title>_PyEval_Vector (1,672,464 samples, 7.03%)</title><rect x="94.8" y="837" width="82.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="97.81" y="847.5" >_PyEval_V..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (501,504 samples, 2.11%)</title><rect x="237.3" y="1013" width="24.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="240.26" y="1023.5" >[..</text>
</g>
<g >
<title>builtin___import__ (1,741,598 samples, 7.32%)</title><rect x="262.1" y="917" width="86.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="265.12" y="927.5" >builtin___..</text>
</g>
<g >
<title>PyImport_ImportModule (1,752,448 samples, 7.36%)</title><rect x="348.4" y="1125" width="86.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="351.45" y="1135.5" >PyImport_I..</text>
</g>
<g >
<title>marshal_loads (1,752,448 samples, 7.36%)</title><rect x="348.4" y="501" width="86.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="351.45" y="511.5" >marshal_lo..</text>
</g>
<g >
<title>get_page_from_freelist (1,752,448 samples, 7.36%)</title><rect x="348.4" y="69" width="86.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="351.45" y="79.5" >get_page_f..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,741,598 samples, 7.32%)</title><rect x="262.1" y="677" width="86.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="265.12" y="687.5" >_PyEval_Ev..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (1,752,448 samples, 7.36%)</title><rect x="348.4" y="981" width="86.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="351.45" y="991.5" >PyObject_C..</text>
</g>
<g >
<title>mi_find_free_page (1,752,448 samples, 7.36%)</title><rect x="348.4" y="309" width="86.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="351.45" y="319.5" >mi_find_fr..</text>
</g>
<g >
<title>_imp_get_frozen_object (1,637,528 samples, 6.88%)</title><rect x="1023.2" y="741" width="81.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1026.19" y="751.5" >_imp_get_..</text>
</g>
<g >
<title>builtin_exec_impl (1,752,448 samples, 7.36%)</title><rect x="348.4" y="869" width="86.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="351.45" y="879.5" >builtin_ex..</text>
</g>
<g >
<title>_PyEval_EvalFrame (1,752,448 samples, 7.36%)</title><rect x="348.4" y="917" width="86.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="351.45" y="927.5" >_PyEval_Ev..</text>
</g>
<g >
<title>find_name_in_mro (1,532,810 samples, 6.44%)</title><rect x="540.8" y="677" width="76.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="543.78" y="687.5" >find_nam..</text>
</g>
<g >
<title>finish_fault (501,504 samples, 2.11%)</title><rect x="212.4" y="949" width="24.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="215.40" y="959.5" >f..</text>
</g>
<g >
<title>_PyEval_Vector (1,741,598 samples, 7.32%)</title><rect x="262.1" y="469" width="86.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="265.12" y="479.5" >_PyEval_Ve..</text>
</g>
<g >
<title>_PyEval_EvalFrame (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="757" width="85.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1107.36" y="767.5" >_PyEval_Ev..</text>
</g>
<g >
<title>_PyCodec_InitRegistry (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="981" width="85.6" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1107.36" y="991.5" >_PyCodec_I..</text>
</g>
<g >
<title>_PyConfig_InitImportConfig (1,591,806 samples, 6.69%)</title><rect x="860.0" y="997" width="78.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="863.03" y="1007.5" >_PyConfig..</text>
</g>
<g >
<title>_PyImport_InitExternal (3,337,326 samples, 14.02%)</title><rect x="938.9" y="997" width="165.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="941.93" y="1007.5" >_PyImport_InitExternal</text>
</g>
<g >
<title>_PyUnicode_FromUCS1 (1,455,639 samples, 6.11%)</title><rect x="616.8" y="725" width="72.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="619.76" y="735.5" >_PyUnico..</text>
</g>
<g >
<title>_PyUnicode_FromUCS1 (1,752,448 samples, 7.36%)</title><rect x="348.4" y="373" width="86.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="351.45" y="383.5" >_PyUnicode..</text>
</g>
<g >
<title>exc_page_fault (1,455,639 samples, 6.11%)</title><rect x="616.8" y="677" width="72.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="619.76" y="687.5" >exc_page..</text>
</g>
<g >
<title>builtin___import___impl (1,752,448 samples, 7.36%)</title><rect x="348.4" y="1029" width="86.9" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="351.45" y="1039.5" >builtin___..</text>
</g>
<g >
<title>set_pte_range (501,504 samples, 2.11%)</title><rect x="212.4" y="933" width="24.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="215.40" y="943.5" >s..</text>
</g>
<g >
<title>mi_find_page (1,752,448 samples, 7.36%)</title><rect x="348.4" y="325" width="86.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="351.45" y="335.5" >mi_find_page</text>
</g>
<g >
<title>python (23,805,468 samples, 100.00%)</title><rect x="10.0" y="1157" width="1180.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="13.00" y="1167.5" >python</text>
</g>
<g >
<title>PyEval_EvalCode (1,532,810 samples, 6.44%)</title><rect x="540.8" y="901" width="76.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="543.78" y="911.5" >PyEval_E..</text>
</g>
<g >
<title>PyImport_ImportModule (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="965" width="85.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1107.36" y="975.5" >PyImport_I..</text>
</g>
<g >
<title>Py_InitializeFromConfig (13,932,186 samples, 58.53%)</title><rect x="499.4" y="1045" width="690.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="502.40" y="1055.5" >Py_InitializeFromConfig</text>
</g>
<g >
<title>read_object (1,455,639 samples, 6.11%)</title><rect x="616.8" y="885" width="72.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="619.76" y="895.5" >read_obj..</text>
</g>
<g >
<title>_PyUnicode_InitEncodings (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="997" width="85.6" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1107.36" y="1007.5" >_PyUnicode..</text>
</g>
<g >
<title>read_object (1,752,448 samples, 7.36%)</title><rect x="348.4" y="469" width="86.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="351.45" y="479.5" >read_object</text>
</g>
<g >
<title>specialize_load_global_lock_held (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="709" width="85.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1107.36" y="719.5" >specialize..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,532,810 samples, 6.44%)</title><rect x="540.8" y="853" width="76.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="543.78" y="863.5" >_PyEval_..</text>
</g>
<g >
<title>_imp_get_frozen_object_impl (1,637,528 samples, 6.88%)</title><rect x="1023.2" y="725" width="81.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1026.19" y="735.5" >_imp_get_..</text>
</g>
<g >
<title>builtin___import___impl (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="869" width="85.6" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1107.36" y="879.5" >builtin___..</text>
</g>
<g >
<title>_PyObject_GenericSetAttrWithDict (1,672,464 samples, 7.03%)</title><rect x="94.8" y="389" width="82.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="97.81" y="399.5" >_PyObject..</text>
</g>
<g >
<title>PyEval_EvalCode (1,752,448 samples, 7.36%)</title><rect x="348.4" y="853" width="86.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="351.45" y="863.5" >PyEval_Eva..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,591,806 samples, 6.69%)</title><rect x="860.0" y="837" width="78.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="863.03" y="847.5" >[ld-linux..</text>
</g>
<g >
<title>builtin_exec (1,741,598 samples, 7.32%)</title><rect x="262.1" y="757" width="86.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="265.12" y="767.5" >builtin_exec</text>
</g>
<g >
<title>_Py_dict_lookup_threadsafe (1,532,810 samples, 6.44%)</title><rect x="540.8" y="645" width="76.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="543.78" y="655.5" >_Py_dict..</text>
</g>
<g >
<title>update_cache_gil_disabled (1,672,464 samples, 7.03%)</title><rect x="94.8" y="357" width="82.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="97.81" y="367.5" >update_ca..</text>
</g>
<g >
<title>folio_batch_move_lru (501,504 samples, 2.11%)</title><rect x="212.4" y="901" width="24.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="215.40" y="911.5" >f..</text>
</g>
<g >
<title>builtin_exec_impl (1,672,464 samples, 7.03%)</title><rect x="94.8" y="741" width="82.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="97.81" y="751.5" >builtin_e..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,672,464 samples, 7.03%)</title><rect x="94.8" y="949" width="82.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.81" y="959.5" >_PyEval_E..</text>
</g>
<g >
<title>import_run_extension (1,672,464 samples, 7.03%)</title><rect x="94.8" y="485" width="82.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="97.81" y="495.5" >import_ru..</text>
</g>
<g >
<title>_Py_hashtable_set (953,426 samples, 4.01%)</title><rect x="756.1" y="901" width="47.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="759.09" y="911.5" >_Py_..</text>
</g>
<g >
<title>_PyEval_EvalFrame (3,337,326 samples, 14.02%)</title><rect x="938.9" y="773" width="165.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="941.93" y="783.5" >_PyEval_EvalFrame</text>
</g>
<g >
<title>type_ready (1,143,517 samples, 4.80%)</title><rect x="803.3" y="933" width="56.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="806.35" y="943.5" >type_r..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,702,756 samples, 7.15%)</title><rect x="177.7" y="1093" width="84.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="180.71" y="1103.5" >[ld-linux..</text>
</g>
<g >
<title>type_add_getset (1,143,517 samples, 4.80%)</title><rect x="803.3" y="901" width="56.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="806.35" y="911.5" >type_a..</text>
</g>
<g >
<title>mi_block_set_nextx (1,752,448 samples, 7.36%)</title><rect x="348.4" y="229" width="86.9" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="351.45" y="239.5" >mi_block_s..</text>
</g>
<g >
<title>PyObject_GenericSetAttr (1,672,464 samples, 7.03%)</title><rect x="94.8" y="405" width="82.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="97.81" y="415.5" >PyObject_..</text>
</g>
<g >
<title>r_object (1,752,448 samples, 7.36%)</title><rect x="348.4" y="421" width="86.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="351.45" y="431.5" >r_object</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (1,752,448 samples, 7.36%)</title><rect x="348.4" y="757" width="86.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="351.45" y="767.5" >PyObject_C..</text>
</g>
<g >
<title>PyObject_Vectorcall (1,699,798 samples, 7.14%)</title><rect x="938.9" y="741" width="84.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="941.93" y="751.5" >PyObject_..</text>
</g>
<g >
<title>_Py_Specialize_LoadGlobal (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="725" width="85.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1107.36" y="735.5" >_Py_Specia..</text>
</g>
<g >
<title>folios_put_refs (501,504 samples, 2.11%)</title><rect x="212.4" y="885" width="24.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="215.40" y="895.5" >f..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,672,464 samples, 7.03%)</title><rect x="94.8" y="805" width="82.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.81" y="815.5" >_PyEval_E..</text>
</g>
<g >
<title>Py_InitializeFromConfig (1,741,598 samples, 7.32%)</title><rect x="262.1" y="1077" width="86.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="265.12" y="1087.5" >Py_Initial..</text>
</g>
<g >
<title>_start (13,932,186 samples, 58.53%)</title><rect x="499.4" y="1141" width="690.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="502.40" y="1151.5" >_start</text>
</g>
<g >
<title>_PyEval_Vector (1,672,464 samples, 7.03%)</title><rect x="94.8" y="981" width="82.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="97.81" y="991.5" >_PyEval_V..</text>
</g>
<g >
<title>type_ready_fill_dict (1,355,205 samples, 5.69%)</title><rect x="688.9" y="901" width="67.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="691.91" y="911.5" >type_re..</text>
</g>
<g >
<title>PyEval_EvalCode (1,741,598 samples, 7.32%)</title><rect x="262.1" y="485" width="86.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="265.12" y="495.5" >PyEval_Eva..</text>
</g>
<g >
<title>type_ready (1,355,205 samples, 5.69%)</title><rect x="688.9" y="917" width="67.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="691.91" y="927.5" >type_re..</text>
</g>
<g >
<title>read_object (1,637,528 samples, 6.88%)</title><rect x="1023.2" y="677" width="81.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1026.19" y="687.5" >read_object</text>
</g>
<g >
<title>_PyEval_Vector (1,752,448 samples, 7.36%)</title><rect x="348.4" y="933" width="86.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="351.45" y="943.5" >_PyEval_Ve..</text>
</g>
<g >
<title>pycore_init_global_objects (953,426 samples, 4.01%)</title><rect x="756.1" y="981" width="47.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="759.09" y="991.5" >pyco..</text>
</g>
<g >
<title>get_page_from_freelist (1,455,639 samples, 6.11%)</title><rect x="616.8" y="549" width="72.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="619.76" y="559.5" >get_page..</text>
</g>
<g >
<title>PyDict_SetDefaultRef (1,143,517 samples, 4.80%)</title><rect x="803.3" y="885" width="56.7" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="806.35" y="895.5" >PyDict..</text>
</g>
<g >
<title>pycore_init_types (1,143,517 samples, 4.80%)</title><rect x="803.3" y="981" width="56.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="806.35" y="991.5" >pycore..</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (953,426 samples, 4.01%)</title><rect x="756.1" y="725" width="47.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="759.09" y="735.5" >__mo..</text>
</g>
<g >
<title>_PyEval_Vector (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="773" width="85.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1107.36" y="783.5" >_PyEval_Ve..</text>
</g>
<g >
<title>do_lookup (1,532,810 samples, 6.44%)</title><rect x="540.8" y="613" width="76.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="543.78" y="623.5" >do_lookup</text>
</g>
<g >
<title>object_vacall (1,752,448 samples, 7.36%)</title><rect x="348.4" y="741" width="86.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="351.45" y="751.5" >object_vac..</text>
</g>
<g >
<title>insert_combined_dict (1,741,598 samples, 7.32%)</title><rect x="262.1" y="325" width="86.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="265.12" y="335.5" >insert_com..</text>
</g>
<g >
<title>_PyTypes_InitTypes (1,143,517 samples, 4.80%)</title><rect x="803.3" y="965" width="56.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="806.35" y="975.5" >_PyTyp..</text>
</g>
<g >
<title>PyImport_Import (1,741,598 samples, 7.32%)</title><rect x="262.1" y="981" width="86.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="265.12" y="991.5" >PyImport_I..</text>
</g>
<g >
<title>_PyUnicode_InitGlobalObjects (953,426 samples, 4.01%)</title><rect x="756.1" y="965" width="47.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="759.09" y="975.5" >_PyU..</text>
</g>
<g >
<title>pycore_interp_init (6,440,597 samples, 27.06%)</title><rect x="540.8" y="997" width="319.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="543.78" y="1007.5" >pycore_interp_init</text>
</g>
<g >
<title>prep_new_page (1,752,448 samples, 7.36%)</title><rect x="348.4" y="53" width="86.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="351.45" y="63.5" >prep_new_p..</text>
</g>
<g >
<title>_PyEval_Vector (1,672,464 samples, 7.03%)</title><rect x="94.8" y="709" width="82.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="97.81" y="719.5" >_PyEval_V..</text>
</g>
<g >
<title>import_all_from (1,741,598 samples, 7.32%)</title><rect x="262.1" y="405" width="86.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="265.12" y="415.5" >import_all..</text>
</g>
<g >
<title>_Py_atomic_compare_exchange_uint32 (1,672,464 samples, 7.03%)</title><rect x="94.8" y="325" width="82.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="97.81" y="335.5" >_Py_atomi..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (3,337,326 samples, 14.02%)</title><rect x="938.9" y="901" width="165.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="941.93" y="911.5" >_PyEval_EvalFrameDefa..</text>
</g>
<g >
<title>_imp_create_builtin (1,672,464 samples, 7.03%)</title><rect x="94.8" y="517" width="82.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="97.81" y="527.5" >_imp_crea..</text>
</g>
<g >
<title>__alloc_frozen_pages_noprof (1,752,448 samples, 7.36%)</title><rect x="348.4" y="85" width="86.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="351.45" y="95.5" >__alloc_fr..</text>
</g>
<g >
<title>PyObject_CallFunction (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="933" width="85.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1107.36" y="943.5" >PyObject_C..</text>
</g>
<g >
<title>Py_BytesMain (13,932,186 samples, 58.53%)</title><rect x="499.4" y="1093" width="690.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="502.40" y="1103.5" >Py_BytesMain</text>
</g>
<g >
<title>PyObject_Vectorcall (1,672,464 samples, 7.03%)</title><rect x="94.8" y="789" width="82.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="97.81" y="799.5" >PyObject_..</text>
</g>
<g >
<title>_PyEval_EvalFrame (1,672,464 samples, 7.03%)</title><rect x="94.8" y="821" width="82.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="97.81" y="831.5" >_PyEval_E..</text>
</g>
<g >
<title>r_object (1,637,528 samples, 6.88%)</title><rect x="1023.2" y="645" width="81.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1026.19" y="655.5" >r_object</text>
</g>
<g >
<title>pymain_main (1,672,464 samples, 7.03%)</title><rect x="94.8" y="1125" width="82.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="97.81" y="1135.5" >pymain_main</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="901" width="85.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1107.36" y="911.5" >_PyObject_..</text>
</g>
<g >
<title>_PyCriticalSection_Begin (1,143,517 samples, 4.80%)</title><rect x="803.3" y="869" width="56.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="806.35" y="879.5" >_PyCri..</text>
</g>
<g >
<title>import_find_and_load (1,672,464 samples, 7.03%)</title><rect x="94.8" y="629" width="82.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="97.81" y="639.5" >import_fi..</text>
</g>
<g >
<title>_mi_malloc_generic (1,752,448 samples, 7.36%)</title><rect x="348.4" y="341" width="86.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="351.45" y="351.5" >_mi_malloc..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,532,810 samples, 6.44%)</title><rect x="540.8" y="821" width="76.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="543.78" y="831.5" >_PyObjec..</text>
</g>
<g >
<title>create_builtin (1,672,464 samples, 7.03%)</title><rect x="94.8" y="501" width="82.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="97.81" y="511.5" >create_bu..</text>
</g>
<g >
<title>init_interp_main (1,741,598 samples, 7.32%)</title><rect x="262.1" y="1045" width="86.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="265.12" y="1055.5" >init_inter..</text>
</g>
<g >
<title>mi_heap_visit_blocks (1,699,798 samples, 7.14%)</title><rect x="938.9" y="517" width="84.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="941.93" y="527.5" >mi_heap_v..</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (1,741,598 samples, 7.32%)</title><rect x="262.1" y="885" width="86.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="265.12" y="895.5" >PyImport_I..</text>
</g>
<g >
<title>mi_block_set_next (1,752,448 samples, 7.36%)</title><rect x="348.4" y="245" width="86.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="351.45" y="255.5" >mi_block_s..</text>
</g>
<g >
<title>r_object (1,637,528 samples, 6.88%)</title><rect x="1023.2" y="581" width="81.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1026.19" y="591.5" >r_object</text>
</g>
<g >
<title>r_object (1,455,639 samples, 6.11%)</title><rect x="616.8" y="821" width="72.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="619.76" y="831.5" >r_object</text>
</g>
<g >
<title>_PyUnicode_InternStatic (953,426 samples, 4.01%)</title><rect x="756.1" y="933" width="47.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="759.09" y="943.5" >_PyU..</text>
</g>
<g >
<title>PyUnicode_FromKindAndData (1,455,639 samples, 6.11%)</title><rect x="616.8" y="757" width="72.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="619.76" y="767.5" >PyUnicod..</text>
</g>
<g >
<title>handle_mm_fault (953,426 samples, 4.01%)</title><rect x="756.1" y="821" width="47.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="759.09" y="831.5" >hand..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="821" width="85.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1107.36" y="831.5" >PyObject_C..</text>
</g>
<g >
<title>pyinit_main (1,741,598 samples, 7.32%)</title><rect x="262.1" y="1061" width="86.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="265.12" y="1071.5" >pyinit_main</text>
</g>
<g >
<title>_PyMem_mi_heap_collect_qsbr (1,292,987 samples, 5.43%)</title><rect x="435.3" y="1125" width="64.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="438.31" y="1135.5" >_PyMem_..</text>
</g>
<g >
<title>do_anonymous_page (953,426 samples, 4.01%)</title><rect x="756.1" y="789" width="47.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="759.09" y="799.5" >do_a..</text>
</g>
<g >
<title>_PyEval_Vector (1,741,598 samples, 7.32%)</title><rect x="262.1" y="709" width="86.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="265.12" y="719.5" >_PyEval_Ve..</text>
</g>
<g >
<title>builtin_exec (1,752,448 samples, 7.36%)</title><rect x="348.4" y="885" width="86.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="351.45" y="895.5" >builtin_exec</text>
</g>
<g >
<title>object_vacall (3,337,326 samples, 14.02%)</title><rect x="938.9" y="821" width="165.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="941.93" y="831.5" >object_vacall</text>
</g>
<g >
<title>_PyEval_EvalFrame (1,752,448 samples, 7.36%)</title><rect x="348.4" y="533" width="86.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="351.45" y="543.5" >_PyEval_Ev..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,672,464 samples, 7.03%)</title><rect x="94.8" y="773" width="82.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="97.81" y="783.5" >_PyObject..</text>
</g>
<g >
<title>type_add_methods (1,355,205 samples, 5.69%)</title><rect x="688.9" y="885" width="67.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="691.91" y="895.5" >type_ad..</text>
</g>
<g >
<title>PyEval_EvalCode (1,672,464 samples, 7.03%)</title><rect x="94.8" y="725" width="82.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="97.81" y="735.5" >PyEval_Ev..</text>
</g>
<g >
<title>_PyUnicode_FromUCS1 (1,752,448 samples, 7.36%)</title><rect x="348.4" y="389" width="86.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="351.45" y="399.5" >_PyUnicode..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,741,598 samples, 7.32%)</title><rect x="262.1" y="581" width="86.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="265.12" y="591.5" >_PyObject_..</text>
</g>
<g >
<title>_PyEval_Vector (3,337,326 samples, 14.02%)</title><rect x="938.9" y="933" width="165.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="941.93" y="943.5" >_PyEval_Vector</text>
</g>
<g >
<title>object_vacall (1,741,598 samples, 7.32%)</title><rect x="262.1" y="837" width="86.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="265.12" y="847.5" >object_vac..</text>
</g>
<g >
<title>asm_exc_page_fault (1,201,252 samples, 5.05%)</title><rect x="177.7" y="1045" width="59.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="180.71" y="1055.5" >asm_ex..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (1,672,464 samples, 7.03%)</title><rect x="94.8" y="613" width="82.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="97.81" y="623.5" >PyObject_..</text>
</g>
<g >
<title>unmarshal_frozen_code (1,637,528 samples, 6.88%)</title><rect x="1023.2" y="709" width="81.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1026.19" y="719.5" >unmarshal..</text>
</g>
<g >
<title>_mi_heap_area_visit_blocks (1,699,798 samples, 7.14%)</title><rect x="938.9" y="437" width="84.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="941.93" y="447.5" >_mi_heap_..</text>
</g>
<g >
<title>_Py_str_to_int (834,701 samples, 3.51%)</title><rect x="499.4" y="949" width="41.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="502.40" y="959.5" >_Py..</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (1,752,448 samples, 7.36%)</title><rect x="348.4" y="1013" width="86.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="351.45" y="1023.5" >PyImport_I..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (501,504 samples, 2.11%)</title><rect x="237.3" y="1045" width="24.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="240.26" y="1055.5" >[..</text>
</g>
<g >
<title>config_init_import (1,591,806 samples, 6.69%)</title><rect x="860.0" y="981" width="78.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="863.03" y="991.5" >config_in..</text>
</g>
<g >
<title>do_anonymous_page (1,752,448 samples, 7.36%)</title><rect x="348.4" y="133" width="86.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="351.45" y="143.5" >do_anonymo..</text>
</g>
<g >
<title>builtin_exec_impl (1,741,598 samples, 7.32%)</title><rect x="262.1" y="741" width="86.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="265.12" y="751.5" >builtin_ex..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,672,464 samples, 7.03%)</title><rect x="94.8" y="533" width="82.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.81" y="543.5" >_PyEval_E..</text>
</g>
<g >
<title>alloc_pages_mpol (1,752,448 samples, 7.36%)</title><rect x="348.4" y="101" width="86.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="351.45" y="111.5" >alloc_page..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,672,464 samples, 7.03%)</title><rect x="94.8" y="677" width="82.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="97.81" y="687.5" >_PyEval_E..</text>
</g>
<g >
<title>type_new (1,532,810 samples, 6.44%)</title><rect x="540.8" y="741" width="76.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="543.78" y="751.5" >type_new</text>
</g>
<g >
<title>r_object (1,455,639 samples, 6.11%)</title><rect x="616.8" y="805" width="72.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="619.76" y="815.5" >r_object</text>
</g>
<g >
<title>Py_InitializeFromConfig (1,672,464 samples, 7.03%)</title><rect x="94.8" y="1093" width="82.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="97.81" y="1103.5" >Py_Initia..</text>
</g>
<g >
<title>builtin_exec (1,741,598 samples, 7.32%)</title><rect x="262.1" y="517" width="86.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="265.12" y="527.5" >builtin_exec</text>
</g>
<g >
<title>update_one_slot (1,532,810 samples, 6.44%)</title><rect x="540.8" y="693" width="76.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="543.78" y="703.5" >update_o..</text>
</g>
<g >
<title>handle_mm_fault (1,455,639 samples, 6.11%)</title><rect x="616.8" y="645" width="72.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="619.76" y="655.5" >handle_m..</text>
</g>
<g >
<title>_PyRuntime (1,292,987 samples, 5.43%)</title><rect x="435.3" y="1141" width="64.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="438.31" y="1151.5" >_PyRunt..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,752,448 samples, 7.36%)</title><rect x="348.4" y="565" width="86.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="351.45" y="575.5" >_PyObject_..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,752,448 samples, 7.36%)</title><rect x="348.4" y="517" width="86.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="351.45" y="527.5" >_PyEval_Ev..</text>
</g>
<g >
<title>insertion_resize (1,741,598 samples, 7.32%)</title><rect x="262.1" y="309" width="86.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="265.12" y="319.5" >insertion_..</text>
</g>
<g >
<title>_dl_catch_exception (501,504 samples, 2.11%)</title><rect x="237.3" y="1061" width="24.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="240.26" y="1071.5" >_..</text>
</g>
<g >
<title>_PyEval_ImportName (1,672,464 samples, 7.03%)</title><rect x="94.8" y="661" width="82.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="97.81" y="671.5" >_PyEval_I..</text>
</g>
<g >
<title>import_find_and_load (3,337,326 samples, 14.02%)</title><rect x="938.9" y="853" width="165.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="941.93" y="863.5" >import_find_and_load</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,699,798 samples, 7.14%)</title><rect x="938.9" y="725" width="84.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="941.93" y="735.5" >_PyObject..</text>
</g>
<g >
<title>mi_heap_visit_areas (1,699,798 samples, 7.14%)</title><rect x="938.9" y="501" width="84.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="941.93" y="511.5" >mi_heap_v..</text>
</g>
<g >
<title>unicodekeys_lookup_unicode (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="693" width="85.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1107.36" y="703.5" >unicodekey..</text>
</g>
<g >
<title>builtin___import__ (1,752,448 samples, 7.36%)</title><rect x="348.4" y="661" width="86.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="351.45" y="671.5" >builtin___..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (3,337,326 samples, 14.02%)</title><rect x="938.9" y="757" width="165.5" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="941.93" y="767.5" >_PyEval_EvalFrameDefa..</text>
</g>
<g >
<title>_PyEval_Vector (3,337,326 samples, 14.02%)</title><rect x="938.9" y="789" width="165.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="941.93" y="799.5" >_PyEval_Vector</text>
</g>
<g >
<title>marshal_loads_impl (1,752,448 samples, 7.36%)</title><rect x="348.4" y="485" width="86.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="351.45" y="495.5" >marshal_lo..</text>
</g>
<g >
<title>pymain_main (1,741,598 samples, 7.32%)</title><rect x="262.1" y="1109" width="86.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="265.12" y="1119.5" >pymain_main</text>
</g>
<g >
<title>import_find_and_load (1,741,598 samples, 7.32%)</title><rect x="262.1" y="869" width="86.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="265.12" y="879.5" >import_fin..</text>
</g>
<g >
<title>handle_mm_fault (1,752,448 samples, 7.36%)</title><rect x="348.4" y="165" width="86.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="351.45" y="175.5" >handle_mm_..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,741,598 samples, 7.32%)</title><rect x="262.1" y="437" width="86.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="265.12" y="447.5" >_PyEval_Ev..</text>
</g>
<g >
<title>do_user_addr_fault (1,752,448 samples, 7.36%)</title><rect x="348.4" y="181" width="86.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="351.45" y="191.5" >do_user_ad..</text>
</g>
<g >
<title>init_static_type (1,143,517 samples, 4.80%)</title><rect x="803.3" y="949" width="56.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="806.35" y="959.5" >init_s..</text>
</g>
<g >
<title>dictkeys_get_index (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="661" width="85.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1107.36" y="671.5" >dictkeys_g..</text>
</g>
<g >
<title>exec_code_in_module (1,532,810 samples, 6.44%)</title><rect x="540.8" y="917" width="76.0" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="543.78" y="927.5" >exec_cod..</text>
</g>
<g >
<title>dict_traverse (1,699,798 samples, 7.14%)</title><rect x="938.9" y="389" width="84.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="941.93" y="399.5" >dict_trav..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="789" width="85.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1107.36" y="799.5" >_PyObject_..</text>
</g>
<g >
<title>_PyStructSequence_InitBuiltinWithFlags (1,355,205 samples, 5.69%)</title><rect x="688.9" y="949" width="67.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="691.91" y="959.5" >_PyStru..</text>
</g>
<g >
<title>mi_heap_visit_areas_page (1,699,798 samples, 7.14%)</title><rect x="938.9" y="469" width="84.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="941.93" y="479.5" >mi_heap_v..</text>
</g>
<g >
<title>_PyEval_Vector (1,752,448 samples, 7.36%)</title><rect x="348.4" y="709" width="86.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="351.45" y="719.5" >_PyEval_Ve..</text>
</g>
<g >
<title>_PyUnicode_FromUCS1 (1,455,639 samples, 6.11%)</title><rect x="616.8" y="741" width="72.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="619.76" y="751.5" >_PyUnico..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (3,337,326 samples, 14.02%)</title><rect x="938.9" y="949" width="165.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="941.93" y="959.5" >_PyObject_VectorcallT..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,752,448 samples, 7.36%)</title><rect x="348.4" y="901" width="86.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="351.45" y="911.5" >_PyEval_Ev..</text>
</g>
<g >
<title>dict_setdefault_ref_lock_held (1,355,205 samples, 5.69%)</title><rect x="688.9" y="837" width="67.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="691.91" y="847.5" >dict_se..</text>
</g>
<g >
<title>_Py_HandlePending (1,699,798 samples, 7.14%)</title><rect x="938.9" y="613" width="84.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="941.93" y="623.5" >_Py_Handl..</text>
</g>
<g >
<title>init_importlib_external (3,337,326 samples, 14.02%)</title><rect x="938.9" y="981" width="165.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="941.93" y="991.5" >init_importlib_external</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,702,756 samples, 7.15%)</title><rect x="177.7" y="1125" width="84.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="180.71" y="1135.5" >[ld-linux..</text>
</g>
<g >
<title>PyObject_CallMethod (3,337,326 samples, 14.02%)</title><rect x="938.9" y="965" width="165.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="941.93" y="975.5" >PyObject_CallMethod</text>
</g>
<g >
<title>_PyUnicode_InitEncodings (1,741,598 samples, 7.32%)</title><rect x="262.1" y="1029" width="86.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="265.12" y="1039.5" >_PyUnicode..</text>
</g>
<g >
<title>init_importlib (2,988,449 samples, 12.55%)</title><rect x="540.8" y="965" width="148.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="543.78" y="975.5" >init_importlib</text>
</g>
<g >
<title>pyinit_main (6,656,888 samples, 27.96%)</title><rect x="860.0" y="1029" width="330.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="863.03" y="1039.5" >pyinit_main</text>
</g>
<g >
<title>cfunction_call (1,591,806 samples, 6.69%)</title><rect x="860.0" y="869" width="78.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="863.03" y="879.5" >cfunction..</text>
</g>
<g >
<title>_PyObject_VectorcallDictTstate (1,532,810 samples, 6.44%)</title><rect x="540.8" y="789" width="76.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="543.78" y="799.5" >_PyObjec..</text>
</g>
<g >
<title>_PySeqLock_LockWrite (1,672,464 samples, 7.03%)</title><rect x="94.8" y="341" width="82.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="97.81" y="351.5" >_PySeqLoc..</text>
</g>
<g >
<title>asm_exc_page_fault (953,426 samples, 4.01%)</title><rect x="756.1" y="869" width="47.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="759.09" y="879.5" >asm_..</text>
</g>
<g >
<title>__handle_mm_fault (953,426 samples, 4.01%)</title><rect x="756.1" y="805" width="47.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="759.09" y="815.5" >__ha..</text>
</g>
<g >
<title>clear_page_erms (1,752,448 samples, 7.36%)</title><rect x="348.4" y="37" width="86.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="351.45" y="47.5" >clear_page..</text>
</g>
<g >
<title>_Py_atomic_load_ssize_relaxed (1,741,598 samples, 7.32%)</title><rect x="262.1" y="245" width="86.3" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="265.12" y="255.5" >_Py_atomic..</text>
</g>
<g >
<title>r_object (1,637,528 samples, 6.88%)</title><rect x="1023.2" y="661" width="81.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1026.19" y="671.5" >r_object</text>
</g>
<g >
<title>PyImport_ImportFrozenModule (2,988,449 samples, 12.55%)</title><rect x="540.8" y="949" width="148.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="543.78" y="959.5" >PyImport_ImportFro..</text>
</g>
<g >
<title>__handle_mm_fault (1,752,448 samples, 7.36%)</title><rect x="348.4" y="149" width="86.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="351.45" y="159.5" >__handle_m..</text>
</g>
<g >
<title>_PyObject_CallFunctionVa (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="917" width="85.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1107.36" y="927.5" >_PyObject_..</text>
</g>
<g >
<title>init_importlib_external (1,672,464 samples, 7.03%)</title><rect x="94.8" y="1029" width="82.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="97.81" y="1039.5" >init_impo..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (3,337,326 samples, 14.02%)</title><rect x="938.9" y="837" width="165.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="941.93" y="847.5" >PyObject_CallMethodOb..</text>
</g>
<g >
<title>asm_exc_page_fault (1,455,639 samples, 6.11%)</title><rect x="616.8" y="693" width="72.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="619.76" y="703.5" >asm_exc_..</text>
</g>
<g >
<title>_PyEval_EvalFrame (3,337,326 samples, 14.02%)</title><rect x="938.9" y="917" width="165.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="941.93" y="927.5" >_PyEval_EvalFrame</text>
</g>
<g >
<title>gc_collect_internal (1,699,798 samples, 7.14%)</title><rect x="938.9" y="581" width="84.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="941.93" y="591.5" >gc_collec..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (834,701 samples, 3.51%)</title><rect x="499.4" y="933" width="41.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="502.40" y="943.5" >[ld..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,752,448 samples, 7.36%)</title><rect x="348.4" y="1061" width="86.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="351.45" y="1071.5" >_PyObject_..</text>
</g>
<g >
<title>PyTuple_New (1,711,029 samples, 7.19%)</title><rect x="10.0" y="1141" width="84.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="13.00" y="1151.5" >PyTuple_New</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="853" width="85.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1107.36" y="863.5" >PyImport_I..</text>
</g>
<g >
<title>r_object (1,752,448 samples, 7.36%)</title><rect x="348.4" y="453" width="86.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="351.45" y="463.5" >r_object</text>
</g>
<g >
<title>PyObject_CallMethod (1,672,464 samples, 7.03%)</title><rect x="94.8" y="1013" width="82.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="97.81" y="1023.5" >PyObject_..</text>
</g>
<g >
<title>_PyEval_EvalFrame (1,532,810 samples, 6.44%)</title><rect x="540.8" y="869" width="76.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="543.78" y="879.5" >_PyEval_..</text>
</g>
<g >
<title>tuple_alloc (1,637,528 samples, 6.88%)</title><rect x="1023.2" y="549" width="81.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1026.19" y="559.5" >tuple_alloc</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (1,752,448 samples, 7.36%)</title><rect x="348.4" y="597" width="86.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="351.45" y="607.5" >PyObject_C..</text>
</g>
<g >
<title>Py_BytesMain (1,741,598 samples, 7.32%)</title><rect x="262.1" y="1125" width="86.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="265.12" y="1135.5" >Py_BytesMain</text>
</g>
<g >
<title>_PyConfig_InitPathConfig (1,591,806 samples, 6.69%)</title><rect x="860.0" y="965" width="78.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="863.03" y="975.5" >_PyConfig..</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (1,741,598 samples, 7.32%)</title><rect x="262.1" y="645" width="86.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="265.12" y="655.5" >PyImport_I..</text>
</g>
<g >
<title>_PyEval_EvalFrame (1,752,448 samples, 7.36%)</title><rect x="348.4" y="693" width="86.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="351.45" y="703.5" >_PyEval_Ev..</text>
</g>
<g >
<title>mi_heap_visit_pages (1,699,798 samples, 7.14%)</title><rect x="938.9" y="485" width="84.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="941.93" y="495.5" >mi_heap_v..</text>
</g>
<g >
<title>pymain_main (13,932,186 samples, 58.53%)</title><rect x="499.4" y="1077" width="690.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="502.40" y="1087.5" >pymain_main</text>
</g>
<g >
<title>r_object (1,637,528 samples, 6.88%)</title><rect x="1023.2" y="629" width="81.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1026.19" y="639.5" >r_object</text>
</g>
<g >
<title>do_fault (501,504 samples, 2.11%)</title><rect x="212.4" y="965" width="24.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="215.40" y="975.5" >d..</text>
</g>
<g >
<title>_PyEval_EvalFrame (1,672,464 samples, 7.03%)</title><rect x="94.8" y="549" width="82.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="97.81" y="559.5" >_PyEval_E..</text>
</g>
<g >
<title>_PyCodec_InitRegistry (1,752,448 samples, 7.36%)</title><rect x="348.4" y="1141" width="86.9" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="351.45" y="1151.5" >_PyCodec_I..</text>
</g>
<g >
<title>PyEval_EvalCode (1,591,806 samples, 6.69%)</title><rect x="860.0" y="949" width="78.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="863.03" y="959.5" >PyEval_Ev..</text>
</g>
<g >
<title>_Py_get_env_flag (834,701 samples, 3.51%)</title><rect x="499.4" y="965" width="41.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="502.40" y="975.5" >_Py..</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (1,752,448 samples, 7.36%)</title><rect x="348.4" y="773" width="86.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="351.45" y="783.5" >PyImport_I..</text>
</g>
<g >
<title>gc_visit_heaps_lock_held (1,699,798 samples, 7.14%)</title><rect x="938.9" y="533" width="84.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="941.93" y="543.5" >gc_visit_..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,672,464 samples, 7.03%)</title><rect x="94.8" y="997" width="82.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="97.81" y="1007.5" >_PyObject..</text>
</g>
<g >
<title>pyinit_config (6,440,597 samples, 27.06%)</title><rect x="540.8" y="1013" width="319.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="543.78" y="1023.5" >pyinit_config</text>
</g>
<g >
<title>_PyObject_CallFunctionVa (1,752,448 samples, 7.36%)</title><rect x="348.4" y="1077" width="86.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="351.45" y="1087.5" >_PyObject_..</text>
</g>
<g >
<title>_PyType_LookupStackRefAndVersion (1,672,464 samples, 7.03%)</title><rect x="94.8" y="373" width="82.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="97.81" y="383.5" >_PyType_L..</text>
</g>
<g >
<title>_PySys_Create (1,355,205 samples, 5.69%)</title><rect x="688.9" y="981" width="67.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="691.91" y="991.5" >_PySys_..</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (1,672,464 samples, 7.03%)</title><rect x="94.8" y="645" width="82.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="97.81" y="655.5" >PyImport_..</text>
</g>
<g >
<title>object_vacall (1,752,448 samples, 7.36%)</title><rect x="348.4" y="581" width="86.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="351.45" y="591.5" >object_vac..</text>
</g>
<g >
<title>config_read (834,701 samples, 3.51%)</title><rect x="499.4" y="997" width="41.4" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="502.40" y="1007.5" >con..</text>
</g>
<g >
<title>_Py_atomic_compare_exchange_uint8 (1,143,517 samples, 4.80%)</title><rect x="803.3" y="821" width="56.7" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="806.35" y="831.5" >_Py_at..</text>
</g>
<g >
<title>deduce_unreachable_heap (1,699,798 samples, 7.14%)</title><rect x="938.9" y="565" width="84.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="941.93" y="575.5" >deduce_un..</text>
</g>
<g >
<title>_PyImport_InitCore (2,988,449 samples, 12.55%)</title><rect x="540.8" y="981" width="148.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="543.78" y="991.5" >_PyImport_InitCore</text>
</g>
<g >
<title>do_user_addr_fault (501,504 samples, 2.11%)</title><rect x="212.4" y="1013" width="24.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="215.40" y="1023.5" >d..</text>
</g>
<g >
<title>object_vacall (1,672,464 samples, 7.03%)</title><rect x="94.8" y="869" width="82.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="97.81" y="879.5" >object_va..</text>
</g>
<g >
<title>mi_page_free_list_extend (1,752,448 samples, 7.36%)</title><rect x="348.4" y="261" width="86.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="351.45" y="271.5" >mi_page_fr..</text>
</g>
<g >
<title>builtin___build_class__ (1,532,810 samples, 6.44%)</title><rect x="540.8" y="805" width="76.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="543.78" y="815.5" >builtin_..</text>
</g>
<g >
<title>_Py_atomic_load_int16_relaxed (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="645" width="85.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1107.36" y="655.5" >_Py_atomic..</text>
</g>
<g >
<title>getpath_readlines (1,591,806 samples, 6.69%)</title><rect x="860.0" y="853" width="78.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="863.03" y="863.5" >getpath_r..</text>
</g>
<g >
<title>_PyObject_MakeTpCall (1,532,810 samples, 6.44%)</title><rect x="540.8" y="773" width="76.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="543.78" y="783.5" >_PyObjec..</text>
</g>
<g >
<title>_PyEval_Vector (1,591,806 samples, 6.69%)</title><rect x="860.0" y="933" width="78.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="863.03" y="943.5" >_PyEval_V..</text>
</g>
<g >
<title>object_vacall (1,752,448 samples, 7.36%)</title><rect x="348.4" y="965" width="86.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="351.45" y="975.5" >object_vac..</text>
</g>
<g >
<title>PyObject_CallFunction (1,741,598 samples, 7.32%)</title><rect x="262.1" y="965" width="86.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="265.12" y="975.5" >PyObject_C..</text>
</g>
<g >
<title>pymain_init (1,741,598 samples, 7.32%)</title><rect x="262.1" y="1093" width="86.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="265.12" y="1103.5" >pymain_init</text>
</g>
<g >
<title>PyImport_ImportModule (1,741,598 samples, 7.32%)</title><rect x="262.1" y="997" width="86.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="265.12" y="1007.5" >PyImport_I..</text>
</g>
<g >
<title>builtin_exec (1,699,798 samples, 7.14%)</title><rect x="938.9" y="709" width="84.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="941.93" y="719.5" >builtin_e..</text>
</g>
<g >
<title>_PyEval_EvalFrame (1,699,798 samples, 7.14%)</title><rect x="938.9" y="645" width="84.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="941.93" y="655.5" >_PyEval_E..</text>
</g>
<g >
<title>asm_exc_page_fault (1,752,448 samples, 7.36%)</title><rect x="348.4" y="213" width="86.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="351.45" y="223.5" >asm_exc_pa..</text>
</g>
<g >
<title>__lruvec_stat_mod_folio (953,426 samples, 4.01%)</title><rect x="756.1" y="741" width="47.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="759.09" y="751.5" >__lr..</text>
</g>
<g >
<title>builtin_exec (1,672,464 samples, 7.03%)</title><rect x="94.8" y="757" width="82.9" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="97.81" y="767.5" >builtin_e..</text>
</g>
<g >
<title>builtin___import___impl (1,741,598 samples, 7.32%)</title><rect x="262.1" y="901" width="86.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="265.12" y="911.5" >builtin___..</text>
</g>
<g >
<title>_PyEval_EvalFrame (1,752,448 samples, 7.36%)</title><rect x="348.4" y="821" width="86.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="351.45" y="831.5" >_PyEval_Ev..</text>
</g>
<g >
<title>r_object (1,455,639 samples, 6.11%)</title><rect x="616.8" y="789" width="72.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="619.76" y="799.5" >r_object</text>
</g>
<g >
<title>unicodekeys_lookup_unicode_threadsafe (1,532,810 samples, 6.44%)</title><rect x="540.8" y="629" width="76.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="543.78" y="639.5" >unicodek..</text>
</g>
<g >
<title>object_vacall (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="805" width="85.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1107.36" y="815.5" >object_vac..</text>
</g>
<g >
<title>__handle_mm_fault (501,504 samples, 2.11%)</title><rect x="212.4" y="981" width="24.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="215.40" y="991.5" >_..</text>
</g>
<g >
<title>_PyImport_InitExternal (1,672,464 samples, 7.03%)</title><rect x="94.8" y="1045" width="82.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="97.81" y="1055.5" >_PyImport..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,752,448 samples, 7.36%)</title><rect x="348.4" y="677" width="86.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="351.45" y="687.5" >_PyEval_Ev..</text>
</g>
<g >
<title>r_object (1,637,528 samples, 6.88%)</title><rect x="1023.2" y="597" width="81.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1026.19" y="607.5" >r_object</text>
</g>
<g >
<title>__handle_mm_fault (1,455,639 samples, 6.11%)</title><rect x="616.8" y="629" width="72.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="619.76" y="639.5" >__handle..</text>
</g>
<g >
<title>type_ready_fill_dict (1,143,517 samples, 4.80%)</title><rect x="803.3" y="917" width="56.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="806.35" y="927.5" >type_r..</text>
</g>
<g >
<title>exc_page_fault (1,752,448 samples, 7.36%)</title><rect x="348.4" y="197" width="86.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="351.45" y="207.5" >exc_page_f..</text>
</g>
<g >
<title>_PyEval_EvalFrame (1,741,598 samples, 7.32%)</title><rect x="262.1" y="789" width="86.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="265.12" y="799.5" >_PyEval_Ev..</text>
</g>
<g >
<title>PyImport_ImportFrozenModuleObject (2,988,449 samples, 12.55%)</title><rect x="540.8" y="933" width="148.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="543.78" y="943.5" >PyImport_ImportFro..</text>
</g>
<g >
<title>_PyEval_Vector (1,532,810 samples, 6.44%)</title><rect x="540.8" y="885" width="76.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="543.78" y="895.5" >_PyEval_..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,752,448 samples, 7.36%)</title><rect x="348.4" y="725" width="86.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="351.45" y="735.5" >_PyObject_..</text>
</g>
<g >
<title>init_interp_main (1,672,464 samples, 7.03%)</title><rect x="94.8" y="1061" width="82.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="97.81" y="1071.5" >init_inte..</text>
</g>
<g >
<title>mi_page_extend_free (1,752,448 samples, 7.36%)</title><rect x="348.4" y="277" width="86.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="351.45" y="287.5" >mi_page_ex..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,591,806 samples, 6.69%)</title><rect x="860.0" y="821" width="78.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="863.03" y="831.5" >[ld-linux..</text>
</g>
<g >
<title>pymain_init (13,932,186 samples, 58.53%)</title><rect x="499.4" y="1061" width="690.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="502.40" y="1071.5" >pymain_init</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (1,752,448 samples, 7.36%)</title><rect x="348.4" y="629" width="86.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="351.45" y="639.5" >PyImport_I..</text>
</g>
<g >
<title>type_new_impl (1,532,810 samples, 6.44%)</title><rect x="540.8" y="725" width="76.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="543.78" y="735.5" >type_new..</text>
</g>
<g >
<title>PyObject_SetAttr (1,672,464 samples, 7.03%)</title><rect x="94.8" y="421" width="82.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="97.81" y="431.5" >PyObject_..</text>
</g>
<g >
<title>PyUnicode_New (1,455,639 samples, 6.11%)</title><rect x="616.8" y="709" width="72.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="619.76" y="719.5" >PyUnicod..</text>
</g>
<g >
<title>import_find_and_load (1,752,448 samples, 7.36%)</title><rect x="348.4" y="997" width="86.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="351.45" y="1007.5" >import_fin..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,741,598 samples, 7.32%)</title><rect x="262.1" y="821" width="86.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="265.12" y="831.5" >_PyObject_..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,702,756 samples, 7.15%)</title><rect x="177.7" y="1141" width="84.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="180.71" y="1151.5" >[ld-linux..</text>
</g>
<g >
<title>mark_reachable (1,699,798 samples, 7.14%)</title><rect x="938.9" y="405" width="84.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="941.93" y="415.5" >mark_reac..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="741" width="85.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1107.36" y="751.5" >_PyEval_Ev..</text>
</g>
<g >
<title>do_anonymous_page (1,455,639 samples, 6.11%)</title><rect x="616.8" y="613" width="72.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="619.76" y="623.5" >do_anony..</text>
</g>
<g >
<title>hashtable_rehash (953,426 samples, 4.01%)</title><rect x="756.1" y="885" width="47.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="759.09" y="895.5" >hash..</text>
</g>
<g >
<title>r_object (1,455,639 samples, 6.11%)</title><rect x="616.8" y="837" width="72.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="619.76" y="847.5" >r_object</text>
</g>
<g >
<title>do_lookup (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="677" width="85.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1107.36" y="687.5" >do_lookup</text>
</g>
<g >
<title>mi_heap_area_visitor (1,699,798 samples, 7.14%)</title><rect x="938.9" y="453" width="84.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="941.93" y="463.5" >mi_heap_a..</text>
</g>
<g >
<title>_PyConfig_Read (834,701 samples, 3.51%)</title><rect x="499.4" y="1013" width="41.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="502.40" y="1023.5" >_Py..</text>
</g>
<g >
<title>PyUnicode_FromKindAndData (1,752,448 samples, 7.36%)</title><rect x="348.4" y="405" width="86.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="351.45" y="415.5" >PyUnicode_..</text>
</g>
<g >
<title>init_global_interned_strings (953,426 samples, 4.01%)</title><rect x="756.1" y="949" width="47.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="759.09" y="959.5" >init..</text>
</g>
<g >
<title>_PyEval_EvalFrame (1,741,598 samples, 7.32%)</title><rect x="262.1" y="453" width="86.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="265.12" y="463.5" >_PyEval_Ev..</text>
</g>
<g >
<title>builtin___import___impl (1,752,448 samples, 7.36%)</title><rect x="348.4" y="645" width="86.9" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="351.45" y="655.5" >builtin___..</text>
</g>
<g >
<title>r_object (1,752,448 samples, 7.36%)</title><rect x="348.4" y="437" width="86.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="351.45" y="447.5" >r_object</text>
</g>
<g >
<title>object_vacall (1,741,598 samples, 7.32%)</title><rect x="262.1" y="597" width="86.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="265.12" y="607.5" >object_vac..</text>
</g>
<g >
<title>_PyEval_EvalFrame (1,741,598 samples, 7.32%)</title><rect x="262.1" y="693" width="86.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="265.12" y="703.5" >_PyEval_Ev..</text>
</g>
<g >
<title>r_object (1,455,639 samples, 6.11%)</title><rect x="616.8" y="853" width="72.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="619.76" y="863.5" >r_object</text>
</g>
<g >
<title>_add_methods_to_object (1,672,464 samples, 7.03%)</title><rect x="94.8" y="453" width="82.9" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="97.81" y="463.5" >_add_meth..</text>
</g>
<g >
<title>[libc.so.6] (13,932,186 samples, 58.53%)</title><rect x="499.4" y="1109" width="690.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="502.40" y="1119.5" >[libc.so.6]</text>
</g>
<g >
<title>_PyEval_EvalFrame (1,741,598 samples, 7.32%)</title><rect x="262.1" y="549" width="86.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="265.12" y="559.5" >_PyEval_Ev..</text>
</g>
<g >
<title>_PyEval_ImportName (1,672,464 samples, 7.03%)</title><rect x="94.8" y="933" width="82.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="97.81" y="943.5" >_PyEval_I..</text>
</g>
<g >
<title>import_find_and_load (1,672,464 samples, 7.03%)</title><rect x="94.8" y="901" width="82.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="97.81" y="911.5" >import_fi..</text>
</g>
<g >
<title>_PyEval_ImportName (1,741,598 samples, 7.32%)</title><rect x="262.1" y="661" width="86.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="265.12" y="671.5" >_PyEval_Im..</text>
</g>
<g >
<title>config_read_env_vars (834,701 samples, 3.51%)</title><rect x="499.4" y="981" width="41.4" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="502.40" y="991.5" >con..</text>
</g>
<g >
<title>_PyEval_ImportName (3,337,326 samples, 14.02%)</title><rect x="938.9" y="885" width="165.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="941.93" y="895.5" >_PyEval_ImportName</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,672,464 samples, 7.03%)</title><rect x="94.8" y="581" width="82.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="97.81" y="591.5" >_PyObject..</text>
</g>
<g >
<title>__folio_batch_add_and_move (501,504 samples, 2.11%)</title><rect x="212.4" y="917" width="24.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="215.40" y="927.5" >_..</text>
</g>
<g >
<title>PyObject_SetAttrString (1,672,464 samples, 7.03%)</title><rect x="94.8" y="437" width="82.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="97.81" y="447.5" >PyObject_..</text>
</g>
<g >
<title>_PyEval_EvalFrame (1,672,464 samples, 7.03%)</title><rect x="94.8" y="965" width="82.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="97.81" y="975.5" >_PyEval_E..</text>
</g>
<g >
<title>PyObject_Vectorcall (1,532,810 samples, 6.44%)</title><rect x="540.8" y="837" width="76.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="543.78" y="847.5" >PyObject..</text>
</g>
<g >
<title>builtin_exec_impl (1,699,798 samples, 7.14%)</title><rect x="938.9" y="693" width="84.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="941.93" y="703.5" >builtin_e..</text>
</g>
<g >
<title>_PyObject_CallFunctionVa (1,741,598 samples, 7.32%)</title><rect x="262.1" y="949" width="86.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="265.12" y="959.5" >_PyObject_..</text>
</g>
<g >
<title>do_user_addr_fault (1,455,639 samples, 6.11%)</title><rect x="616.8" y="661" width="72.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="619.76" y="671.5" >do_user_..</text>
</g>
<g >
<title>_PyEval_EvalFrame (1,672,464 samples, 7.03%)</title><rect x="94.8" y="693" width="82.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="97.81" y="703.5" >_PyEval_E..</text>
</g>
<g >
<title>object_vacall (1,672,464 samples, 7.03%)</title><rect x="94.8" y="597" width="82.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="97.81" y="607.5" >object_va..</text>
</g>
<g >
<title>PyUnicode_New (1,752,448 samples, 7.36%)</title><rect x="348.4" y="357" width="86.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="351.45" y="367.5" >PyUnicode_..</text>
</g>
<g >
<title>import_find_and_load (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="837" width="85.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1107.36" y="847.5" >import_fin..</text>
</g>
<g >
<title>fixup_slot_dispatchers (1,532,810 samples, 6.44%)</title><rect x="540.8" y="709" width="76.0" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="543.78" y="719.5" >fixup_sl..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,752,448 samples, 7.36%)</title><rect x="348.4" y="805" width="86.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="351.45" y="815.5" >_PyEval_Ev..</text>
</g>
<g >
<title>_PyCriticalSection_BeginMutex (1,143,517 samples, 4.80%)</title><rect x="803.3" y="853" width="56.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="806.35" y="863.5" >_PyCri..</text>
</g>
<g >
<title>setitem_take2_lock_held (1,741,598 samples, 7.32%)</title><rect x="262.1" y="357" width="86.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="265.12" y="367.5" >setitem_ta..</text>
</g>
<g >
<title>builtin___import__ (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="885" width="85.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1107.36" y="895.5" >builtin___..</text>
</g>
<g >
<title>PyDict_SetItem (1,741,598 samples, 7.32%)</title><rect x="262.1" y="389" width="86.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="265.12" y="399.5" >PyDict_Set..</text>
</g>
<g >
<title>r_object (1,455,639 samples, 6.11%)</title><rect x="616.8" y="773" width="72.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="619.76" y="783.5" >r_object</text>
</g>
<g >
<title>gc_visit_heaps (1,699,798 samples, 7.14%)</title><rect x="938.9" y="549" width="84.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="941.93" y="559.5" >gc_visit_..</text>
</g>
<g >
<title>__libc_start_main (13,932,186 samples, 58.53%)</title><rect x="499.4" y="1125" width="690.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="502.40" y="1135.5" >__libc_start_main</text>
</g>
<g >
<title>PyEval_EvalCode (1,741,598 samples, 7.32%)</title><rect x="262.1" y="725" width="86.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="265.12" y="735.5" >PyEval_Eva..</text>
</g>
<g >
<title>_PyEval_Vector (1,752,448 samples, 7.36%)</title><rect x="348.4" y="549" width="86.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="351.45" y="559.5" >_PyEval_Ve..</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (3,337,326 samples, 14.02%)</title><rect x="938.9" y="869" width="165.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="941.93" y="879.5" >PyImport_ImportModule..</text>
</g>
<g >
<title>_PySys_InitCore (1,355,205 samples, 5.69%)</title><rect x="688.9" y="965" width="67.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="691.91" y="975.5" >_PySys_..</text>
</g>
<g >
<title>_PyEval_Vector (1,672,464 samples, 7.03%)</title><rect x="94.8" y="565" width="82.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="97.81" y="575.5" >_PyEval_V..</text>
</g>
<g >
<title>PyMarshal_ReadObjectFromString (1,637,528 samples, 6.88%)</title><rect x="1023.2" y="693" width="81.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1026.19" y="703.5" >PyMarshal..</text>
</g>
<g >
<title>unmarshal_frozen_code (1,455,639 samples, 6.11%)</title><rect x="616.8" y="917" width="72.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="619.76" y="927.5" >unmarsha..</text>
</g>
<g >
<title>builtin___import__ (1,752,448 samples, 7.36%)</title><rect x="348.4" y="1045" width="86.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="351.45" y="1055.5" >builtin___..</text>
</g>
<g >
<title>mi_page_queue_find_free_ex (1,752,448 samples, 7.36%)</title><rect x="348.4" y="293" width="86.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="351.45" y="303.5" >mi_page_qu..</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (1,672,464 samples, 7.03%)</title><rect x="94.8" y="917" width="82.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="97.81" y="927.5" >PyImport_..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,201,252 samples, 5.05%)</title><rect x="177.7" y="1061" width="59.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="180.71" y="1071.5" >[ld-li..</text>
</g>
<g >
<title>PyMutex_LockFast (1,143,517 samples, 4.80%)</title><rect x="803.3" y="837" width="56.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="806.35" y="847.5" >PyMute..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,591,806 samples, 6.69%)</title><rect x="860.0" y="805" width="78.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="863.03" y="815.5" >[ld-linux..</text>
</g>
<g >
<title>init_static_type (1,355,205 samples, 5.69%)</title><rect x="688.9" y="933" width="67.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="691.91" y="943.5" >init_st..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,672,464 samples, 7.03%)</title><rect x="94.8" y="853" width="82.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="97.81" y="863.5" >_PyObject..</text>
</g>
<g >
<title>PyModule_FromDefAndSpec2 (1,672,464 samples, 7.03%)</title><rect x="94.8" y="469" width="82.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="97.81" y="479.5" >PyModule_..</text>
</g>
<g >
<title>PyImport_Import (1,727,756 samples, 7.26%)</title><rect x="1104.4" y="949" width="85.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1107.36" y="959.5" >PyImport_I..</text>
</g>
<g >
<title>vma_alloc_folio_noprof (1,752,448 samples, 7.36%)</title><rect x="348.4" y="117" width="86.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="351.45" y="127.5" >vma_alloc_..</text>
</g>
<g >
<title>PyTuple_New (1,637,528 samples, 6.88%)</title><rect x="1023.2" y="565" width="81.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1026.19" y="575.5" >PyTuple_New</text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (501,504 samples, 2.11%)</title><rect x="237.3" y="981" width="24.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="240.26" y="991.5" >e..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,591,806 samples, 6.69%)</title><rect x="860.0" y="901" width="78.9" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="863.03" y="911.5" >_PyEval_E..</text>
</g>
<g >
<title>pyinit_core (7,275,298 samples, 30.56%)</title><rect x="499.4" y="1029" width="360.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="502.40" y="1039.5" >pyinit_core</text>
</g>
<g >
<title>alloc_pages_mpol (1,455,639 samples, 6.11%)</title><rect x="616.8" y="581" width="72.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="619.76" y="591.5" >alloc_pa..</text>
</g>
<g >
<title>type_call (1,532,810 samples, 6.44%)</title><rect x="540.8" y="757" width="76.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="543.78" y="767.5" >type_call</text>
</g>
<g >
<title>PyDict_SetDefaultRef (1,355,205 samples, 5.69%)</title><rect x="688.9" y="853" width="67.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="691.91" y="863.5" >PyDict_..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,702,756 samples, 7.15%)</title><rect x="177.7" y="1077" width="84.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="180.71" y="1087.5" >[ld-linux..</text>
</g>
<g >
<title>PyEval_EvalCode (1,699,798 samples, 7.14%)</title><rect x="938.9" y="677" width="84.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="941.93" y="687.5" >PyEval_Ev..</text>
</g>
<g >
<title>PyObject_CallFunction (1,752,448 samples, 7.36%)</title><rect x="348.4" y="1093" width="86.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="351.45" y="1103.5" >PyObject_C..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (501,504 samples, 2.11%)</title><rect x="237.3" y="997" width="24.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="240.26" y="1007.5" >[..</text>
</g>
<g >
<title>r_object (1,455,639 samples, 6.11%)</title><rect x="616.8" y="869" width="72.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="619.76" y="879.5" >r_object</text>
</g>
<g >
<title>r_object (1,637,528 samples, 6.88%)</title><rect x="1023.2" y="613" width="81.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1026.19" y="623.5" >r_object</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,741,598 samples, 7.32%)</title><rect x="262.1" y="533" width="86.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="265.12" y="543.5" >_PyEval_Ev..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (1,741,598 samples, 7.32%)</title><rect x="262.1" y="613" width="86.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="265.12" y="623.5" >PyObject_C..</text>
</g>
<g >
<title>free_unref_folios (501,504 samples, 2.11%)</title><rect x="212.4" y="869" width="24.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="215.40" y="879.5" >f..</text>
</g>
<g >
<title>__alloc_frozen_pages_noprof (1,455,639 samples, 6.11%)</title><rect x="616.8" y="565" width="72.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="619.76" y="575.5" >__alloc_..</text>
</g>
<g >
<title>Py_BytesMain (1,672,464 samples, 7.03%)</title><rect x="94.8" y="1141" width="82.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="97.81" y="1151.5" >Py_BytesM..</text>
</g>
<g >
<title>_PyEval_Vector (1,741,598 samples, 7.32%)</title><rect x="262.1" y="805" width="86.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="265.12" y="815.5" >_PyEval_Ve..</text>
</g>
<g >
<title>PyMarshal_ReadObjectFromString (1,455,639 samples, 6.11%)</title><rect x="616.8" y="901" width="72.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="619.76" y="911.5" >PyMarsha..</text>
</g>
<g >
<title>vma_alloc_folio_noprof (1,455,639 samples, 6.11%)</title><rect x="616.8" y="597" width="72.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="619.76" y="607.5" >vma_allo..</text>
</g>
<g >
<title>do_user_addr_fault (953,426 samples, 4.01%)</title><rect x="756.1" y="837" width="47.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="759.09" y="847.5" >do_u..</text>
</g>
<g >
<title>_PyDict_SetItem_Take2 (1,741,598 samples, 7.32%)</title><rect x="262.1" y="373" width="86.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="265.12" y="383.5" >_PyDict_Se..</text>
</g>
<g >
<title>exc_page_fault (501,504 samples, 2.11%)</title><rect x="212.4" y="1029" width="24.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="215.40" y="1039.5" >e..</text>
</g>
<g >
<title>_PyEval_Vector (1,741,598 samples, 7.32%)</title><rect x="262.1" y="565" width="86.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="265.12" y="575.5" >_PyEval_Ve..</text>
</g>
<g >
<title>_PyEval_Vector (1,752,448 samples, 7.36%)</title><rect x="348.4" y="837" width="86.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="351.45" y="847.5" >_PyEval_Ve..</text>
</g>
<g >
<title>intern_static (953,426 samples, 4.01%)</title><rect x="756.1" y="917" width="47.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="759.09" y="927.5" >inte..</text>
</g>
<g >
<title>__rmqueue_pcplist (1,455,639 samples, 6.11%)</title><rect x="616.8" y="533" width="72.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="619.76" y="543.5" >__rmqueu..</text>
</g>
<g >
<title>_PyEval_ImportName (1,752,448 samples, 7.36%)</title><rect x="348.4" y="789" width="86.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="351.45" y="799.5" >_PyEval_Im..</text>
</g>
<g >
<title>build_indices_unicode (1,741,598 samples, 7.32%)</title><rect x="262.1" y="277" width="86.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="265.12" y="287.5" >build_indi..</text>
</g>
<g >
<title>folio_add_new_anon_rmap (953,426 samples, 4.01%)</title><rect x="756.1" y="773" width="47.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="759.09" y="783.5" >foli..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (1,741,598 samples, 7.32%)</title><rect x="262.1" y="853" width="86.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="265.12" y="863.5" >PyObject_C..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (3,337,326 samples, 14.02%)</title><rect x="938.9" y="805" width="165.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="941.93" y="815.5" >_PyObject_VectorcallT..</text>
</g>
<g >
<title>all (23,805,468 samples, 100%)</title><rect x="10.0" y="1173" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1183.5" ></text>
</g>
<g >
<title>pymain_init (1,672,464 samples, 7.03%)</title><rect x="94.8" y="1109" width="82.9" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="97.81" y="1119.5" >pymain_init</text>
</g>
<g >
<title>_PyEval_EvalFrame (1,591,806 samples, 6.69%)</title><rect x="860.0" y="917" width="78.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="863.03" y="927.5" >_PyEval_E..</text>
</g>
<g >
<title>PyImport_Import (1,752,448 samples, 7.36%)</title><rect x="348.4" y="1109" width="86.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="351.45" y="1119.5" >PyImport_I..</text>
</g>
<g >
<title>[libc.so.6] (1,741,598 samples, 7.32%)</title><rect x="262.1" y="1141" width="86.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="265.12" y="1151.5" >[libc.so.6]</text>
</g>
<g >
<title>unicode_get_hash (1,741,598 samples, 7.32%)</title><rect x="262.1" y="261" width="86.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="265.12" y="271.5" >unicode_ge..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (501,504 samples, 2.11%)</title><rect x="237.3" y="1029" width="24.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="240.26" y="1039.5" >[..</text>
</g>
<g >
<title>_PyCodec_InitRegistry (1,741,598 samples, 7.32%)</title><rect x="262.1" y="1013" width="86.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="265.12" y="1023.5" >_PyCodec_I..</text>
</g>
<g >
<title>import_find_and_load (1,741,598 samples, 7.32%)</title><rect x="262.1" y="629" width="86.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="265.12" y="639.5" >import_fin..</text>
</g>
<g >
<title>pyinit_main (1,672,464 samples, 7.03%)</title><rect x="94.8" y="1077" width="82.9" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="97.81" y="1087.5" >pyinit_main</text>
</g>
<g >
<title>gc_collect_main (1,699,798 samples, 7.14%)</title><rect x="938.9" y="597" width="84.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="941.93" y="607.5" >gc_collec..</text>
</g>
<g >
<title>dictresize (1,741,598 samples, 7.32%)</title><rect x="262.1" y="293" width="86.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="265.12" y="303.5" >dictresize</text>
</g>
<g >
<title>_PyEval_Vector (1,699,798 samples, 7.14%)</title><rect x="938.9" y="661" width="84.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="941.93" y="671.5" >_PyEval_V..</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (1,672,464 samples, 7.03%)</title><rect x="94.8" y="885" width="82.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="97.81" y="895.5" >PyObject_..</text>
</g>
<g >
<title>_PyDict_GetItemRef_KnownHash (1,532,810 samples, 6.44%)</title><rect x="540.8" y="661" width="76.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="543.78" y="671.5" >_PyDict_..</text>
</g>
<g >
<title>builtin_exec_impl (1,741,598 samples, 7.32%)</title><rect x="262.1" y="501" width="86.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="265.12" y="511.5" >builtin_ex..</text>
</g>
<g >
<title>import_find_and_load (1,752,448 samples, 7.36%)</title><rect x="348.4" y="613" width="86.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="351.45" y="623.5" >import_fin..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,741,598 samples, 7.32%)</title><rect x="262.1" y="933" width="86.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="265.12" y="943.5" >_PyObject_..</text>
</g>
<g >
<title>__folio_mod_stat (953,426 samples, 4.01%)</title><rect x="756.1" y="757" width="47.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="759.09" y="767.5" >__fo..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,741,598 samples, 7.32%)</title><rect x="262.1" y="773" width="86.3" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="265.12" y="783.5" >_PyEval_Ev..</text>
</g>
</g>
</svg>
