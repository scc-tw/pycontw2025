<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="982.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="965" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="965" > </text>
<g id="frames">
<g >
<title>dict_setdefault_ref_lock_held (1,257,310 samples, 10.50%)</title><rect x="542.6" y="517" width="124.0" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="545.63" y="527.5" >dict_setdefault..</text>
</g>
<g >
<title>import_find_and_load (1,579,796 samples, 13.20%)</title><rect x="881.4" y="421" width="155.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="884.44" y="431.5" >import_find_and_load</text>
</g>
<g >
<title>tmigr_requires_handle_remote (1,550,590 samples, 12.95%)</title><rect x="1037.2" y="405" width="152.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1040.16" y="415.5" >tmigr_requires_hand..</text>
</g>
<g >
<title>intern_common (1,579,796 samples, 13.20%)</title><rect x="881.4" y="117" width="155.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="884.44" y="127.5" >intern_common</text>
</g>
<g >
<title>mas_find (888,073 samples, 7.42%)</title><rect x="319.1" y="581" width="87.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="322.06" y="591.5" >mas_find</text>
</g>
<g >
<title>PyDescr_NewWrapper (1,181,304 samples, 9.87%)</title><rect x="666.6" y="645" width="116.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="669.56" y="655.5" >PyDescr_NewWra..</text>
</g>
<g >
<title>import_find_and_load (3,130,386 samples, 26.15%)</title><rect x="881.4" y="645" width="308.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="884.44" y="655.5" >import_find_and_load</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (501,504 samples, 4.19%)</title><rect x="124.2" y="805" width="49.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="127.17" y="815.5" >[ld-..</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (3,130,386 samples, 26.15%)</title><rect x="881.4" y="661" width="308.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="884.44" y="671.5" >PyImport_ImportModuleLevelObject</text>
</g>
<g >
<title>PyDescr_NewMethod (1,257,310 samples, 10.50%)</title><rect x="542.6" y="597" width="124.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="545.63" y="607.5" >PyDescr_NewMethod</text>
</g>
<g >
<title>copy_mc_user_highpage.isra.0 (1,158,224 samples, 9.68%)</title><rect x="10.0" y="709" width="114.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >copy_mc_user_h..</text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (1,579,796 samples, 13.20%)</title><rect x="881.4" y="533" width="155.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="884.44" y="543.5" >cfunction_vectorcal..</text>
</g>
<g >
<title>do_user_addr_fault (1,158,224 samples, 9.68%)</title><rect x="10.0" y="773" width="114.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >do_user_addr_f..</text>
</g>
<g >
<title>descr_new (1,579,796 samples, 13.20%)</title><rect x="881.4" y="165" width="155.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="884.44" y="175.5" >descr_new</text>
</g>
<g >
<title>_PyUnicode_InternMortal (1,181,304 samples, 9.87%)</title><rect x="666.6" y="597" width="116.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="669.56" y="607.5" >_PyUnicode_Int..</text>
</g>
<g >
<title>copy_mc_enhanced_fast_string (1,158,224 samples, 9.68%)</title><rect x="10.0" y="693" width="114.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >copy_mc_enhanc..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,659,728 samples, 13.86%)</title><rect x="10.0" y="869" width="163.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >[ld-linux-x86-64.so.2]</text>
</g>
<g >
<title>_PyImport_InitExternal (3,130,386 samples, 26.15%)</title><rect x="881.4" y="757" width="308.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="884.44" y="767.5" >_PyImport_InitExternal</text>
</g>
<g >
<title>PyObject_CallMethod (3,130,386 samples, 26.15%)</title><rect x="881.4" y="725" width="308.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="884.44" y="735.5" >PyObject_CallMethod</text>
</g>
<g >
<title>_PyUnicode_InternMortal (1,579,796 samples, 13.20%)</title><rect x="881.4" y="133" width="155.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="884.44" y="143.5" >_PyUnicode_InternMo..</text>
</g>
<g >
<title>pymain_init (8,835,767 samples, 73.81%)</title><rect x="319.1" y="821" width="870.9" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="322.06" y="831.5" >pymain_init</text>
</g>
<g >
<title>pyinit_core (5,705,381 samples, 47.66%)</title><rect x="319.1" y="789" width="562.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="322.06" y="799.5" >pyinit_core</text>
</g>
<g >
<title>add_operators (1,181,304 samples, 9.87%)</title><rect x="666.6" y="661" width="116.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="669.56" y="671.5" >add_operators</text>
</g>
<g >
<title>vm_mmap_pgoff (888,073 samples, 7.42%)</title><rect x="319.1" y="629" width="87.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="322.06" y="639.5" >vm_mmap_pg..</text>
</g>
<g >
<title>PyUnicode_InternFromString (1,579,796 samples, 13.20%)</title><rect x="881.4" y="149" width="155.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="884.44" y="159.5" >PyUnicode_InternFro..</text>
</g>
<g >
<title>_PyStructSequence_InitBuiltin (1,257,310 samples, 10.50%)</title><rect x="542.6" y="709" width="124.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="545.63" y="719.5" >_PyStructSequen..</text>
</g>
<g >
<title>type_add_methods (1,257,310 samples, 10.50%)</title><rect x="542.6" y="629" width="124.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="545.63" y="639.5" >type_add_methods</text>
</g>
<g >
<title>intern_common (1,257,310 samples, 10.50%)</title><rect x="542.6" y="533" width="124.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="545.63" y="543.5" >intern_common</text>
</g>
<g >
<title>python (11,971,243 samples, 100.00%)</title><rect x="10.0" y="917" width="1180.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="13.00" y="927.5" >python</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,579,796 samples, 13.20%)</title><rect x="881.4" y="373" width="155.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="884.44" y="383.5" >_PyObject_Vectorcal..</text>
</g>
<g >
<title>Py_InitializeFromConfig (8,835,767 samples, 73.81%)</title><rect x="319.1" y="805" width="870.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="322.06" y="815.5" >Py_InitializeFromConfig</text>
</g>
<g >
<title>_Py_hashtable_get_entry_generic (1,579,796 samples, 13.20%)</title><rect x="881.4" y="85" width="155.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="884.44" y="95.5" >_Py_hashtable_get_e..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,659,728 samples, 13.86%)</title><rect x="10.0" y="837" width="163.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="847.5" >[ld-linux-x86-64.so.2]</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,659,728 samples, 13.86%)</title><rect x="10.0" y="885" width="163.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >[ld-linux-x86-64.so.2]</text>
</g>
<g >
<title>__mmap_region (888,073 samples, 7.42%)</title><rect x="319.1" y="597" width="87.5" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="322.06" y="607.5" >__mmap_reg..</text>
</g>
<g >
<title>intern_common (1,181,304 samples, 9.87%)</title><rect x="666.6" y="581" width="116.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="669.56" y="591.5" >intern_common</text>
</g>
<g >
<title>exec_code_in_module (1,380,041 samples, 11.53%)</title><rect x="406.6" y="677" width="136.0" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="409.60" y="687.5" >exec_code_in_module</text>
</g>
<g >
<title>type_ready_fill_dict (1,257,310 samples, 10.50%)</title><rect x="542.6" y="645" width="124.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="545.63" y="655.5" >type_ready_fill..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,550,590 samples, 12.95%)</title><rect x="1037.2" y="485" width="152.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1040.16" y="495.5" >__sysvec_apic_timer..</text>
</g>
<g >
<title>unicodekeys_lookup_unicode (1,257,310 samples, 10.50%)</title><rect x="542.6" y="485" width="124.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="545.63" y="495.5" >unicodekeys_loo..</text>
</g>
<g >
<title>pymain_main (8,835,767 samples, 73.81%)</title><rect x="319.1" y="837" width="870.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="322.06" y="847.5" >pymain_main</text>
</g>
<g >
<title>_Py_dict_lookup (1,257,310 samples, 10.50%)</title><rect x="542.6" y="501" width="124.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="545.63" y="511.5" >_Py_dict_lookup</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (888,073 samples, 7.42%)</title><rect x="319.1" y="661" width="87.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="322.06" y="671.5" >entry_SYSC..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (501,504 samples, 4.19%)</title><rect x="124.2" y="741" width="49.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="127.17" y="751.5" >entr..</text>
</g>
<g >
<title>_PyTypes_InitTypes (2,179,957 samples, 18.21%)</title><rect x="666.6" y="725" width="214.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="669.56" y="735.5" >_PyTypes_InitTypes</text>
</g>
<g >
<title>_Py_CheckFunctionResult (1,550,590 samples, 12.95%)</title><rect x="1037.2" y="533" width="152.8" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1040.16" y="543.5" >_Py_CheckFunctionRe..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,579,796 samples, 13.20%)</title><rect x="881.4" y="357" width="155.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="884.44" y="367.5" >_PyEval_EvalFrameDe..</text>
</g>
<g >
<title>descr_new (1,257,310 samples, 10.50%)</title><rect x="542.6" y="581" width="124.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="545.63" y="591.5" >descr_new</text>
</g>
<g >
<title>__irqentry_text_end (1,475,748 samples, 12.33%)</title><rect x="173.6" y="901" width="145.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="176.60" y="911.5" >__irqentry_text_end</text>
</g>
<g >
<title>_imp_exec_dynamic (1,579,796 samples, 13.20%)</title><rect x="881.4" y="325" width="155.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="884.44" y="335.5" >_imp_exec_dynamic</text>
</g>
<g >
<title>init_interp_main (3,130,386 samples, 26.15%)</title><rect x="881.4" y="773" width="308.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="884.44" y="783.5" >init_interp_main</text>
</g>
<g >
<title>type_call (1,550,590 samples, 12.95%)</title><rect x="1037.2" y="549" width="152.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1040.16" y="559.5" >type_call</text>
</g>
<g >
<title>PyEval_EvalCode (1,579,796 samples, 13.20%)</title><rect x="881.4" y="485" width="155.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="884.44" y="495.5" >PyEval_EvalCode</text>
</g>
<g >
<title>visit_reachable (1,380,041 samples, 11.53%)</title><rect x="406.6" y="533" width="136.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="409.60" y="543.5" >visit_reachable</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,550,590 samples, 12.95%)</title><rect x="1037.2" y="517" width="152.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1040.16" y="527.5" >asm_sysvec_apic_tim..</text>
</g>
<g >
<title>_PyType_FromMetaclass_impl (1,579,796 samples, 13.20%)</title><rect x="881.4" y="261" width="155.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="884.44" y="271.5" >_PyType_FromMetacla..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (1,579,796 samples, 13.20%)</title><rect x="881.4" y="549" width="155.8" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="884.44" y="559.5" >_PyObject_Vectorcal..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (3,130,386 samples, 26.15%)</title><rect x="881.4" y="597" width="308.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="884.44" y="607.5" >_PyObject_VectorcallTstate</text>
</g>
<g >
<title>_PyObject_MakeTpCall (1,550,590 samples, 12.95%)</title><rect x="1037.2" y="565" width="152.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1040.16" y="575.5" >_PyObject_MakeTpCall</text>
</g>
<g >
<title>gc_collect_main (1,380,041 samples, 11.53%)</title><rect x="406.6" y="613" width="136.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="409.60" y="623.5" >gc_collect_main</text>
</g>
<g >
<title>type_ready (1,257,310 samples, 10.50%)</title><rect x="542.6" y="661" width="124.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="545.63" y="671.5" >type_ready</text>
</g>
<g >
<title>cfunction_vectorcall_O (1,579,796 samples, 13.20%)</title><rect x="881.4" y="341" width="155.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="884.44" y="351.5" >cfunction_vectorcal..</text>
</g>
<g >
<title>_PyObject_VectorcallTstate (3,130,386 samples, 26.15%)</title><rect x="881.4" y="709" width="308.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="884.44" y="719.5" >_PyObject_VectorcallTstate</text>
</g>
<g >
<title>type_add_method (1,579,796 samples, 13.20%)</title><rect x="881.4" y="197" width="155.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="884.44" y="207.5" >type_add_method</text>
</g>
<g >
<title>do_mmap (501,504 samples, 4.19%)</title><rect x="124.2" y="677" width="49.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="127.17" y="687.5" >do_m..</text>
</g>
<g >
<title>pyinit_main (3,130,386 samples, 26.15%)</title><rect x="881.4" y="789" width="308.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="884.44" y="799.5" >pyinit_main</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,579,796 samples, 13.20%)</title><rect x="881.4" y="469" width="155.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="884.44" y="479.5" >_PyEval_EvalFrameDe..</text>
</g>
<g >
<title>_PySys_InitCore (1,257,310 samples, 10.50%)</title><rect x="542.6" y="725" width="124.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="545.63" y="735.5" >_PySys_InitCore</text>
</g>
<g >
<title>ksys_mmap_pgoff (501,504 samples, 4.19%)</title><rect x="124.2" y="709" width="49.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="127.17" y="719.5" >ksys..</text>
</g>
<g >
<title>deduce_unreachable (1,380,041 samples, 11.53%)</title><rect x="406.6" y="597" width="136.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="409.60" y="607.5" >deduce_unreachable</text>
</g>
<g >
<title>_Py_NewRef (1,181,304 samples, 9.87%)</title><rect x="666.6" y="565" width="116.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="669.56" y="575.5" >_Py_NewRef</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,550,590 samples, 12.95%)</title><rect x="1037.2" y="501" width="152.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1040.16" y="511.5" >sysvec_apic_timer_i..</text>
</g>
<g >
<title>object_vacall (1,579,796 samples, 13.20%)</title><rect x="881.4" y="389" width="155.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="884.44" y="399.5" >object_vacall</text>
</g>
<g >
<title>type_add_methods (1,579,796 samples, 13.20%)</title><rect x="881.4" y="213" width="155.8" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="884.44" y="223.5" >type_add_methods</text>
</g>
<g >
<title>do_fault (1,158,224 samples, 9.68%)</title><rect x="10.0" y="725" width="114.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >do_fault</text>
</g>
<g >
<title>do_mmap (888,073 samples, 7.42%)</title><rect x="319.1" y="613" width="87.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="322.06" y="623.5" >do_mmap</text>
</g>
<g >
<title>type_ready_fill_dict (2,179,957 samples, 18.21%)</title><rect x="666.6" y="677" width="214.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="669.56" y="687.5" >type_ready_fill_dict</text>
</g>
<g >
<title>hrtimer_interrupt (1,550,590 samples, 12.95%)</title><rect x="1037.2" y="469" width="152.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1040.16" y="479.5" >hrtimer_interrupt</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (3,130,386 samples, 26.15%)</title><rect x="881.4" y="629" width="308.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="884.44" y="639.5" >PyObject_CallMethodObjArgs</text>
</g>
<g >
<title>PyDescr_NewMethod (1,579,796 samples, 13.20%)</title><rect x="881.4" y="181" width="155.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="884.44" y="191.5" >PyDescr_NewMethod</text>
</g>
<g >
<title>Py_INCREF (1,181,304 samples, 9.87%)</title><rect x="666.6" y="549" width="116.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="669.56" y="559.5" >Py_INCREF</text>
</g>
<g >
<title>[libc.so.6] (1,579,796 samples, 13.20%)</title><rect x="881.4" y="37" width="155.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="884.44" y="47.5" >[libc.so.6]</text>
</g>
<g >
<title>__hrtimer_run_queues (1,550,590 samples, 12.95%)</title><rect x="1037.2" y="453" width="152.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1040.16" y="463.5" >__hrtimer_run_queues</text>
</g>
<g >
<title>pycore_init_types (2,179,957 samples, 18.21%)</title><rect x="666.6" y="741" width="214.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="669.56" y="751.5" >pycore_init_types</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,158,224 samples, 9.68%)</title><rect x="10.0" y="821" width="114.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >[ld-linux-x86-..</text>
</g>
<g >
<title>_imp_exec_dynamic_impl (1,579,796 samples, 13.20%)</title><rect x="881.4" y="309" width="155.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="884.44" y="319.5" >_imp_exec_dynamic_i..</text>
</g>
<g >
<title>do_syscall_64 (501,504 samples, 4.19%)</title><rect x="124.2" y="725" width="49.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="127.17" y="735.5" >do_s..</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (3,130,386 samples, 26.15%)</title><rect x="881.4" y="693" width="308.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="884.44" y="703.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>PyUnicode_GET_LENGTH (1,257,310 samples, 10.50%)</title><rect x="542.6" y="421" width="124.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="545.63" y="431.5" >PyUnicode_GET_L..</text>
</g>
<g >
<title>PyModule_ExecDef (1,579,796 samples, 13.20%)</title><rect x="881.4" y="293" width="155.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="884.44" y="303.5" >PyModule_ExecDef</text>
</g>
<g >
<title>init_static_type (1,257,310 samples, 10.50%)</title><rect x="542.6" y="677" width="124.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="545.63" y="687.5" >init_static_type</text>
</g>
<g >
<title>_Py_HandlePending (1,380,041 samples, 11.53%)</title><rect x="406.6" y="629" width="136.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="409.60" y="639.5" >_Py_HandlePending</text>
</g>
<g >
<title>pyurandom (888,073 samples, 7.42%)</title><rect x="319.1" y="725" width="87.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="322.06" y="735.5" >pyurandom</text>
</g>
<g >
<title>Py_BytesMain (8,835,767 samples, 73.81%)</title><rect x="319.1" y="853" width="870.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="322.06" y="863.5" >Py_BytesMain</text>
</g>
<g >
<title>PyImport_ImportFrozenModule (1,380,041 samples, 11.53%)</title><rect x="406.6" y="709" width="136.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="409.60" y="719.5" >PyImport_ImportFr..</text>
</g>
<g >
<title>type_ready (1,579,796 samples, 13.20%)</title><rect x="881.4" y="245" width="155.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="884.44" y="255.5" >type_ready</text>
</g>
<g >
<title>type_ready_fill_dict (1,579,796 samples, 13.20%)</title><rect x="881.4" y="229" width="155.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="884.44" y="239.5" >type_ready_fill_dict</text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (1,579,796 samples, 13.20%)</title><rect x="881.4" y="405" width="155.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="884.44" y="415.5" >PyObject_CallMethod..</text>
</g>
<g >
<title>pycore_interp_init (4,817,308 samples, 40.24%)</title><rect x="406.6" y="757" width="474.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="409.60" y="767.5" >pycore_interp_init</text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (1,579,796 samples, 13.20%)</title><rect x="881.4" y="437" width="155.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="884.44" y="447.5" >PyImport_ImportModu..</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,659,728 samples, 13.86%)</title><rect x="10.0" y="853" width="163.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >[ld-linux-x86-64.so.2]</text>
</g>
<g >
<title>unicode_eq (1,257,310 samples, 10.50%)</title><rect x="542.6" y="437" width="124.0" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="545.63" y="447.5" >unicode_eq</text>
</g>
<g >
<title>descr_new (998,653 samples, 8.34%)</title><rect x="783.0" y="613" width="98.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="786.00" y="623.5" >descr_new</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (3,130,386 samples, 26.15%)</title><rect x="881.4" y="581" width="308.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="884.44" y="591.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>iomodule_exec (1,579,796 samples, 13.20%)</title><rect x="881.4" y="277" width="155.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="884.44" y="287.5" >iomodule_exec</text>
</g>
<g >
<title>PyImport_ImportFrozenModuleObject (1,380,041 samples, 11.53%)</title><rect x="406.6" y="693" width="136.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="409.60" y="703.5" >PyImport_ImportFr..</text>
</g>
<g >
<title>py_getrandom (888,073 samples, 7.42%)</title><rect x="319.1" y="709" width="87.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="322.06" y="719.5" >py_getrandom</text>
</g>
<g >
<title>vm_mmap_pgoff (501,504 samples, 4.19%)</title><rect x="124.2" y="693" width="49.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="127.17" y="703.5" >vm_m..</text>
</g>
<g >
<title>[libc.so.6] (8,835,767 samples, 73.81%)</title><rect x="319.1" y="869" width="870.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="322.06" y="879.5" >[libc.so.6]</text>
</g>
<g >
<title>PyUnicode_InternFromString (1,181,304 samples, 9.87%)</title><rect x="666.6" y="613" width="116.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="669.56" y="623.5" >PyUnicode_Inte..</text>
</g>
<g >
<title>builtin_exec (1,579,796 samples, 13.20%)</title><rect x="881.4" y="517" width="155.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="884.44" y="527.5" >builtin_exec</text>
</g>
<g >
<title>_PyStructSequence_InitBuiltinWithFlags (1,257,310 samples, 10.50%)</title><rect x="542.6" y="693" width="124.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="545.63" y="703.5" >_PyStructSequen..</text>
</g>
<g >
<title>_PySys_Create (1,257,310 samples, 10.50%)</title><rect x="542.6" y="741" width="124.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="545.63" y="751.5" >_PySys_Create</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (501,504 samples, 4.19%)</title><rect x="124.2" y="757" width="49.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="127.17" y="767.5" >[ld-..</text>
</g>
<g >
<title>__mmap_region (501,504 samples, 4.19%)</title><rect x="124.2" y="661" width="49.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="127.17" y="671.5" >__mm..</text>
</g>
<g >
<title>asm_exc_page_fault (1,158,224 samples, 9.68%)</title><rect x="10.0" y="805" width="114.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >asm_exc_page_f..</text>
</g>
<g >
<title>init_importlib (1,380,041 samples, 11.53%)</title><rect x="406.6" y="725" width="136.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="409.60" y="735.5" >init_importlib</text>
</g>
<g >
<title>_Py_HashRandomization_Init (888,073 samples, 7.42%)</title><rect x="319.1" y="741" width="87.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="322.06" y="751.5" >_Py_HashRa..</text>
</g>
<g >
<title>object_vacall (3,130,386 samples, 26.15%)</title><rect x="881.4" y="613" width="308.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="884.44" y="623.5" >object_vacall</text>
</g>
<g >
<title>PyDescr_NewMethod (998,653 samples, 8.34%)</title><rect x="783.0" y="629" width="98.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="786.00" y="639.5" >PyDescr_New..</text>
</g>
<g >
<title>hashtable_unicode_compare (1,579,796 samples, 13.20%)</title><rect x="881.4" y="69" width="155.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="884.44" y="79.5" >hashtable_unicode_c..</text>
</g>
<g >
<title>dict_traverse (1,380,041 samples, 11.53%)</title><rect x="406.6" y="565" width="136.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="409.60" y="575.5" >dict_traverse</text>
</g>
<g >
<title>_dl_catch_exception (501,504 samples, 4.19%)</title><rect x="124.2" y="821" width="49.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="127.17" y="831.5" >_dl_..</text>
</g>
<g >
<title>PyObject_Vectorcall (1,579,796 samples, 13.20%)</title><rect x="881.4" y="565" width="155.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="884.44" y="575.5" >PyObject_Vectorcall</text>
</g>
<g >
<title>pycore_init_runtime (888,073 samples, 7.42%)</title><rect x="319.1" y="757" width="87.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="322.06" y="767.5" >pycore_ini..</text>
</g>
<g >
<title>pyinit_config (5,705,381 samples, 47.66%)</title><rect x="319.1" y="773" width="562.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="322.06" y="783.5" >pyinit_config</text>
</g>
<g >
<title>handle_mm_fault (1,158,224 samples, 9.68%)</title><rect x="10.0" y="757" width="114.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.00" y="767.5" >handle_mm_fault</text>
</g>
<g >
<title>import_name (1,579,796 samples, 13.20%)</title><rect x="881.4" y="453" width="155.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="884.44" y="463.5" >import_name</text>
</g>
<g >
<title>tick_nohz_handler (1,550,590 samples, 12.95%)</title><rect x="1037.2" y="437" width="152.8" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1040.16" y="447.5" >tick_nohz_handler</text>
</g>
<g >
<title>descr_new (1,181,304 samples, 9.87%)</title><rect x="666.6" y="629" width="116.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="669.56" y="639.5" >descr_new</text>
</g>
<g >
<title>import_name (3,130,386 samples, 26.15%)</title><rect x="881.4" y="677" width="308.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="884.44" y="687.5" >import_name</text>
</g>
<g >
<title>PyType_GenericAlloc (998,653 samples, 8.34%)</title><rect x="783.0" y="597" width="98.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="786.00" y="607.5" >PyType_Gene..</text>
</g>
<g >
<title>mas_walk (888,073 samples, 7.42%)</title><rect x="319.1" y="565" width="87.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="322.06" y="575.5" >mas_walk</text>
</g>
<g >
<title>type_add_method (1,257,310 samples, 10.50%)</title><rect x="542.6" y="613" width="124.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="545.63" y="623.5" >type_add_method</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (501,504 samples, 4.19%)</title><rect x="124.2" y="789" width="49.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="127.17" y="799.5" >[ld-..</text>
</g>
<g >
<title>visit_reachable (1,380,041 samples, 11.53%)</title><rect x="406.6" y="549" width="136.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="409.60" y="559.5" >visit_reachable</text>
</g>
<g >
<title>type_add_methods (998,653 samples, 8.34%)</title><rect x="783.0" y="661" width="98.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="786.00" y="671.5" >type_add_me..</text>
</g>
<g >
<title>[libc.so.6] (888,073 samples, 7.42%)</title><rect x="319.1" y="693" width="87.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="322.06" y="703.5" >[libc.so.6]</text>
</g>
<g >
<title>_start (8,835,767 samples, 73.81%)</title><rect x="319.1" y="901" width="870.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="322.06" y="911.5" >_start</text>
</g>
<g >
<title>type_ready (2,179,957 samples, 18.21%)</title><rect x="666.6" y="693" width="214.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="669.56" y="703.5" >type_ready</text>
</g>
<g >
<title>type_add_method (998,653 samples, 8.34%)</title><rect x="783.0" y="645" width="98.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="786.00" y="655.5" >type_add_me..</text>
</g>
<g >
<title>__mmap (888,073 samples, 7.42%)</title><rect x="319.1" y="677" width="87.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="322.06" y="687.5" >__mmap</text>
</g>
<g >
<title>do_lookup (1,257,310 samples, 10.50%)</title><rect x="542.6" y="469" width="124.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="545.63" y="479.5" >do_lookup</text>
</g>
<g >
<title>builtin_exec_impl (1,579,796 samples, 13.20%)</title><rect x="881.4" y="501" width="155.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="884.44" y="511.5" >builtin_exec_impl</text>
</g>
<g >
<title>all (11,971,243 samples, 100%)</title><rect x="10.0" y="933" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="943.5" ></text>
</g>
<g >
<title>get_jiffies_update (1,550,590 samples, 12.95%)</title><rect x="1037.2" y="389" width="152.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1040.16" y="399.5" >get_jiffies_update</text>
</g>
<g >
<title>_PyUnicode_InternMortal (1,257,310 samples, 10.50%)</title><rect x="542.6" y="549" width="124.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="545.63" y="559.5" >_PyUnicode_Inte..</text>
</g>
<g >
<title>_Py_hashtable_get (1,579,796 samples, 13.20%)</title><rect x="881.4" y="101" width="155.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="884.44" y="111.5" >_Py_hashtable_get</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (501,504 samples, 4.19%)</title><rect x="124.2" y="773" width="49.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="127.17" y="783.5" >[ld-..</text>
</g>
<g >
<title>_PyImport_InitCore (1,380,041 samples, 11.53%)</title><rect x="406.6" y="741" width="136.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="409.60" y="751.5" >_PyImport_InitCore</text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,659,728 samples, 13.86%)</title><rect x="10.0" y="901" width="163.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="911.5" >[ld-linux-x86-64.so.2]</text>
</g>
<g >
<title>update_process_times (1,550,590 samples, 12.95%)</title><rect x="1037.2" y="421" width="152.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1040.16" y="431.5" >update_process_times</text>
</g>
<g >
<title>do_syscall_64 (888,073 samples, 7.42%)</title><rect x="319.1" y="645" width="87.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="322.06" y="655.5" >do_syscall..</text>
</g>
<g >
<title>init_static_type (2,179,957 samples, 18.21%)</title><rect x="666.6" y="709" width="214.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="669.56" y="719.5" >init_static_type</text>
</g>
<g >
<title>unicode_compare_eq (1,579,796 samples, 13.20%)</title><rect x="881.4" y="53" width="155.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="884.44" y="63.5" >unicode_compare_eq</text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,380,041 samples, 11.53%)</title><rect x="406.6" y="645" width="136.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="409.60" y="655.5" >_PyEval_EvalFrame..</text>
</g>
<g >
<title>move_unreachable (1,380,041 samples, 11.53%)</title><rect x="406.6" y="581" width="136.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="409.60" y="591.5" >move_unreachable</text>
</g>
<g >
<title>__libc_start_main (8,835,767 samples, 73.81%)</title><rect x="319.1" y="885" width="870.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="322.06" y="895.5" >__libc_start_main</text>
</g>
<g >
<title>__handle_mm_fault (1,158,224 samples, 9.68%)</title><rect x="10.0" y="741" width="114.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >__handle_mm_fa..</text>
</g>
<g >
<title>PyEval_EvalCode (1,380,041 samples, 11.53%)</title><rect x="406.6" y="661" width="136.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="409.60" y="671.5" >PyEval_EvalCode</text>
</g>
<g >
<title>init_importlib_external (3,130,386 samples, 26.15%)</title><rect x="881.4" y="741" width="308.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="884.44" y="751.5" >init_importlib_external</text>
</g>
<g >
<title>PyUnicode_InternFromString (1,257,310 samples, 10.50%)</title><rect x="542.6" y="565" width="124.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="545.63" y="575.5" >PyUnicode_Inter..</text>
</g>
<g >
<title>exc_page_fault (1,158,224 samples, 9.68%)</title><rect x="10.0" y="789" width="114.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.00" y="799.5" >exc_page_fault</text>
</g>
<g >
<title>compare_unicode_unicode (1,257,310 samples, 10.50%)</title><rect x="542.6" y="453" width="124.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="545.63" y="463.5" >compare_unicode..</text>
</g>
</g>
</svg>
